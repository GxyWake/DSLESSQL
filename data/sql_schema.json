[{"instruction": "Understand and remember this database.", "input": "The ID of this database is \"concert_singer\"\nTable concert, columns = [*,concert_ID,concert_Name,Theme,Stadium_ID,Year]\nTable singer, columns = [*,Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male]\nTable singer_in_concert, columns = [*,concert_ID,Singer_ID]\nTable stadium, columns = [*,Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average]\nForeign_keys = [concert.Stadium_ID = stadium.Stadium_ID,singer_in_concert.Singer_ID = singer.Singer_ID,singer_in_concert.concert_ID = concert.concert_ID]", "output": "CREATE TABLE concert (concert_ID number, concert_Name text, Theme text, Stadium_ID text, Year text); CREATE TABLE singer (Singer_ID number, Name text, Country text, Song_Name text, Song_release_year text, Age number, Is_male others); CREATE TABLE singer_in_concert (concert_ID number, Singer_ID text); CREATE TABLE stadium (Stadium_ID number, Location text, Name text, Capacity number, Highest number, Lowest number, Average number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"pets_1\"\nTable Has_Pet, columns = [*,StuID,PetID]\nTable Pets, columns = [*,PetID,PetType,pet_age,weight]\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nForeign_keys = [Has_Pet.StuID = Student.StuID,Has_Pet.PetID = Pets.PetID]", "output": "CREATE TABLE Has_Pet (StuID number, PetID number); CREATE TABLE Pets (PetID number, PetType text, pet_age number, weight number); CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"car_1\"\nTable car_makers, columns = [*,Id,Maker,FullName,Country]\nTable car_names, columns = [*,MakeId,Model,Make]\nTable cars_data, columns = [*,Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year]\nTable continents, columns = [*,ContId,Continent]\nTable countries, columns = [*,CountryId,CountryName,Continent]\nTable model_list, columns = [*,ModelId,Maker,Model]\nForeign_keys = [countries.Continent = continents.ContId,car_makers.Country = countries.CountryId,model_list.Maker = car_makers.Id,car_names.Model = model_list.Model,cars_data.Id = car_names.MakeId]", "output": "CREATE TABLE car_makers (Id number, Maker text, FullName text, Country text); CREATE TABLE car_names (MakeId number, Model text, Make text); CREATE TABLE cars_data (Id number, MPG text, Cylinders number, Edispl number, Horsepower text, Weight number, Accelerate number, Year number); CREATE TABLE continents (ContId number, Continent text); CREATE TABLE countries (CountryId number, CountryName text, Continent number); CREATE TABLE model_list (ModelId number, Maker number, Model text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"flight_2\"\nTable airlines, columns = [*,uid,Airline,Abbreviation,Country]\nTable airports, columns = [*,City,AirportCode,AirportName,Country,CountryAbbrev]\nTable flights, columns = [*,Airline,FlightNo,SourceAirport,DestAirport]\nForeign_keys = [flights.DestAirport = airports.AirportCode,flights.SourceAirport = airports.AirportCode]", "output": "CREATE TABLE airlines (uid number, Airline text, Abbreviation text, Country text); CREATE TABLE airports (City text, AirportCode text, AirportName text, Country text, CountryAbbrev text); CREATE TABLE flights (Airline number, FlightNo number, SourceAirport text, DestAirport text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"employee_hire_evaluation\"\nTable employee, columns = [*,Employee_ID,Name,Age,City]\nTable evaluation, columns = [*,Employee_ID,Year_awarded,Bonus]\nTable hiring, columns = [*,Shop_ID,Employee_ID,Start_from,Is_full_time]\nTable shop, columns = [*,Shop_ID,Name,Location,District,Number_products,Manager_name]\nForeign_keys = [hiring.Employee_ID = employee.Employee_ID,hiring.Shop_ID = shop.Shop_ID,evaluation.Employee_ID = employee.Employee_ID]", "output": "CREATE TABLE employee (Employee_ID number, Name text, Age number, City text); CREATE TABLE evaluation (Employee_ID text, Year_awarded text, Bonus number); CREATE TABLE hiring (Shop_ID number, Employee_ID number, Start_from text, Is_full_time others); CREATE TABLE shop (Shop_ID number, Name text, Location text, District text, Number_products number, Manager_name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"cre_Doc_Template_Mgt\"\nTable Documents, columns = [*,Document_ID,Template_ID,Document_Name,Document_Description,Other_Details]\nTable Paragraphs, columns = [*,Paragraph_ID,Document_ID,Paragraph_Text,Other_Details]\nTable Ref_Template_Types, columns = [*,Template_Type_Code,Template_Type_Description]\nTable Templates, columns = [*,Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details]\nForeign_keys = [Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code,Documents.Template_ID = Templates.Template_ID,Paragraphs.Document_ID = Documents.Document_ID]", "output": "CREATE TABLE Documents (Document_ID number, Template_ID number, Document_Name text, Document_Description text, Other_Details text); CREATE TABLE Paragraphs (Paragraph_ID number, Document_ID number, Paragraph_Text text, Other_Details text); CREATE TABLE Ref_Template_Types (Template_Type_Code text, Template_Type_Description text); CREATE TABLE Templates (Template_ID number, Version_Number number, Template_Type_Code text, Date_Effective_From time, Date_Effective_To time, Template_Details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"course_teach\"\nTable course, columns = [*,Course_ID,Staring_Date,Course]\nTable course_arrange, columns = [*,Course_ID,Teacher_ID,Grade]\nTable teacher, columns = [*,Teacher_ID,Name,Age,Hometown]\nForeign_keys = [course_arrange.Teacher_ID = teacher.Teacher_ID,course_arrange.Course_ID = course.Course_ID]", "output": "CREATE TABLE course (Course_ID number, Staring_Date text, Course text); CREATE TABLE course_arrange (Course_ID number, Teacher_ID number, Grade number); CREATE TABLE teacher (Teacher_ID number, Name text, Age text, Hometown text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"museum_visit\"\nTable museum, columns = [*,Museum_ID,Name,Num_of_Staff,Open_Year]\nTable visit, columns = [*,Museum_ID,visitor_ID,Num_of_Ticket,Total_spent]\nTable visitor, columns = [*,ID,Name,Level_of_membership,Age]\nForeign_keys = [visit.visitor_ID = visitor.ID,visit.Museum_ID = museum.Museum_ID]", "output": "CREATE TABLE museum (Museum_ID number, Name text, Num_of_Staff number, Open_Year text); CREATE TABLE visit (Museum_ID number, visitor_ID text, Num_of_Ticket number, Total_spent number); CREATE TABLE visitor (ID number, Name text, Level_of_membership number, Age number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"wta_1\"\nTable matches, columns = [*,best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year]\nTable players, columns = [*,player_id,first_name,last_name,hand,birth_date,country_code]\nTable rankings, columns = [*,ranking_date,ranking,player_id,ranking_points,tours]\nForeign_keys = [matches.winner_id = players.player_id,matches.loser_id = players.player_id,rankings.player_id = players.player_id]", "output": "CREATE TABLE matches (best_of number, draw_size number, loser_age number, loser_entry text, loser_hand text, loser_ht number, loser_id number, loser_ioc text, loser_name text, loser_rank number, loser_rank_points number, loser_seed number, match_num number, minutes number, round text, score text, surface text, tourney_date time, tourney_id text, tourney_level text, tourney_name text, winner_age number, winner_entry text, winner_hand text, winner_ht number, winner_id number, winner_ioc text, winner_name text, winner_rank number, winner_rank_points number, winner_seed number, year number); CREATE TABLE players (player_id number, first_name text, last_name text, hand text, birth_date time, country_code text); CREATE TABLE rankings (ranking_date time, ranking number, player_id number, ranking_points number, tours number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"battle_death\"\nTable battle, columns = [*,id,name,date,bulgarian_commander,latin_commander,result]\nTable death, columns = [*,caused_by_ship_id,id,note,killed,injured]\nTable ship, columns = [*,lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship]\nForeign_keys = [ship.lost_in_battle = battle.id,death.caused_by_ship_id = ship.id]", "output": "CREATE TABLE battle (id number, name text, date text, bulgarian_commander text, latin_commander text, result text); CREATE TABLE death (caused_by_ship_id number, id number, note text, killed number, injured number); CREATE TABLE ship (lost_in_battle number, id number, name text, tonnage text, ship_type text, location text, disposition_of_ship text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"student_transcripts_tracking\"\nTable Addresses, columns = [*,address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Courses, columns = [*,course_id,course_name,course_description,other_details]\nTable Degree_Programs, columns = [*,degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details]\nTable Departments, columns = [*,department_id,department_name,department_description,other_details]\nTable Sections, columns = [*,section_id,course_id,section_name,section_description,other_details]\nTable Semesters, columns = [*,semester_id,semester_name,semester_description,other_details]\nTable Student_Enrolment, columns = [*,student_enrolment_id,degree_program_id,semester_id,student_id,other_details]\nTable Student_Enrolment_Courses, columns = [*,student_course_id,course_id,student_enrolment_id]\nTable Students, columns = [*,student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details]\nTable Transcript_Contents, columns = [*,student_course_id,transcript_id]\nTable Transcripts, columns = [*,transcript_id,transcript_date,other_details]\nForeign_keys = [Degree_Programs.department_id = Departments.department_id,Sections.course_id = Courses.course_id,Students.permanent_address_id = Addresses.address_id,Students.current_address_id = Addresses.address_id,Student_Enrolment.student_id = Students.student_id,Student_Enrolment.semester_id = Semesters.semester_id,Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id,Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id,Student_Enrolment_Courses.course_id = Courses.course_id,Transcript_Contents.transcript_id = Transcripts.transcript_id,Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id]", "output": "CREATE TABLE Addresses (address_id number, line_1 text, line_2 text, line_3 text, city text, zip_postcode text, state_province_county text, country text, other_address_details text); CREATE TABLE Courses (course_id number, course_name text, course_description text, other_details text); CREATE TABLE Degree_Programs (degree_program_id number, department_id number, degree_summary_name text, degree_summary_description text, other_details text); CREATE TABLE Departments (department_id number, department_name text, department_description text, other_details text); CREATE TABLE Sections (section_id number, course_id number, section_name text, section_description text, other_details text); CREATE TABLE Semesters (semester_id number, semester_name text, semester_description text, other_details text); CREATE TABLE Student_Enrolment (student_enrolment_id number, degree_program_id number, semester_id number, student_id number, other_details text); CREATE TABLE Student_Enrolment_Courses (student_course_id number, course_id number, student_enrolment_id number); CREATE TABLE Students (student_id number, current_address_id number, permanent_address_id number, first_name text, middle_name text, last_name text, cell_mobile_number text, email_address text, ssn text, date_first_registered time, date_left time, other_student_details text); CREATE TABLE Transcript_Contents (student_course_id number, transcript_id number); CREATE TABLE Transcripts (transcript_id number, transcript_date time, other_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"tvshow\"\nTable Cartoon, columns = [*,id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel]\nTable TV_Channel, columns = [*,id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option]\nTable TV_series, columns = [*,id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel]\nForeign_keys = [TV_series.Channel = TV_Channel.id,Cartoon.Channel = TV_Channel.id]", "output": "CREATE TABLE Cartoon (id number, Title text, Directed_by text, Written_by text, Original_air_date text, Production_code number, Channel text); CREATE TABLE TV_Channel (id text, series_name text, Country text, Language text, Content text, Pixel_aspect_ratio_PAR text, Hight_definition_TV text, Pay_per_view_PPV text, Package_Option text); CREATE TABLE TV_series (id number, Episode text, Air_Date text, Rating text, Share number, 18_49_Rating_Share text, Viewers_m text, Weekly_Rank number, Channel text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"poker_player\"\nTable people, columns = [*,People_ID,Nationality,Name,Birth_Date,Height]\nTable poker_player, columns = [*,Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings]\nForeign_keys = [poker_player.People_ID = people.People_ID]", "output": "CREATE TABLE people (People_ID number, Nationality text, Name text, Birth_Date text, Height number); CREATE TABLE poker_player (Poker_Player_ID number, People_ID number, Final_Table_Made number, Best_Finish number, Money_Rank number, Earnings number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"voter_1\"\nTable AREA_CODE_STATE, columns = [*,area_code,state]\nTable CONTESTANTS, columns = [*,contestant_number,contestant_name]\nTable VOTES, columns = [*,vote_id,phone_number,state,contestant_number,created]\nForeign_keys = [VOTES.contestant_number = CONTESTANTS.contestant_number,VOTES.state = AREA_CODE_STATE.state]", "output": "CREATE TABLE AREA_CODE_STATE (area_code number, state text); CREATE TABLE CONTESTANTS (contestant_number number, contestant_name text); CREATE TABLE VOTES (vote_id number, phone_number number, state text, contestant_number number, created time)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"world_1\"\nTable city, columns = [*,ID,Name,CountryCode,District,Population]\nTable country, columns = [*,Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2]\nTable countrylanguage, columns = [*,CountryCode,Language,IsOfficial,Percentage]\nTable sqlite_sequence, columns = [*,name,seq]\nForeign_keys = [city.CountryCode = country.Code,countrylanguage.CountryCode = country.Code]", "output": "CREATE TABLE city (ID number, Name text, CountryCode text, District text, Population number); CREATE TABLE country (Code text, Name text, Continent text, Region text, SurfaceArea number, IndepYear number, Population number, LifeExpectancy number, GNP number, GNPOld number, LocalName text, GovernmentForm text, HeadOfState text, Capital number, Code2 text); CREATE TABLE countrylanguage (CountryCode text, Language text, IsOfficial text, Percentage number); CREATE TABLE sqlite_sequence (name text, seq text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"orchestra\"\nTable conductor, columns = [*,Conductor_ID,Name,Age,Nationality,Year_of_Work]\nTable orchestra, columns = [*,Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format]\nTable performance, columns = [*,Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share]\nTable show, columns = [*,Show_ID,Performance_ID,If_first_show,Result,Attendance]\nForeign_keys = [orchestra.Conductor_ID = conductor.Conductor_ID,performance.Orchestra_ID = orchestra.Orchestra_ID,show.Performance_ID = performance.Performance_ID]", "output": "CREATE TABLE conductor (Conductor_ID number, Name text, Age number, Nationality text, Year_of_Work number); CREATE TABLE orchestra (Orchestra_ID number, Orchestra text, Conductor_ID number, Record_Company text, Year_of_Founded number, Major_Record_Format text); CREATE TABLE performance (Performance_ID number, Orchestra_ID number, Type text, Date text, Official_ratings_(millions) number, Weekly_rank text, Share text); CREATE TABLE show (Show_ID number, Performance_ID number, If_first_show others, Result text, Attendance number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"network_1\"\nTable Friend, columns = [*,student_id,friend_id]\nTable Highschooler, columns = [*,ID,name,grade]\nTable Likes, columns = [*,student_id,liked_id]\nForeign_keys = [Friend.friend_id = Highschooler.ID,Friend.student_id = Highschooler.ID,Likes.student_id = Highschooler.ID,Likes.liked_id = Highschooler.ID]", "output": "CREATE TABLE Friend (student_id number, friend_id number); CREATE TABLE Highschooler (ID number, name text, grade number); CREATE TABLE Likes (student_id number, liked_id number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"dog_kennels\"\nTable Breeds, columns = [*,breed_code,breed_name]\nTable Charges, columns = [*,charge_id,charge_type,charge_amount]\nTable Dogs, columns = [*,dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed]\nTable Owners, columns = [*,owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number]\nTable Professionals, columns = [*,professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number]\nTable Sizes, columns = [*,size_code,size_description]\nTable Treatment_Types, columns = [*,treatment_type_code,treatment_type_description]\nTable Treatments, columns = [*,treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment]\nForeign_keys = [Dogs.owner_id = Owners.owner_id,Dogs.owner_id = Owners.owner_id,Dogs.size_code = Sizes.size_code,Dogs.breed_code = Breeds.breed_code,Treatments.dog_id = Dogs.dog_id,Treatments.professional_id = Professionals.professional_id,Treatments.treatment_type_code = Treatment_Types.treatment_type_code]", "output": "CREATE TABLE Breeds (breed_code text, breed_name text); CREATE TABLE Charges (charge_id number, charge_type text, charge_amount number); CREATE TABLE Dogs (dog_id number, owner_id number, abandoned_yn text, breed_code text, size_code text, name text, age text, date_of_birth time, gender text, weight text, date_arrived time, date_adopted time, date_departed time); CREATE TABLE Owners (owner_id number, first_name text, last_name text, street text, city text, state text, zip_code text, email_address text, home_phone text, cell_number text); CREATE TABLE Professionals (professional_id number, role_code text, first_name text, street text, city text, state text, zip_code text, last_name text, email_address text, home_phone text, cell_number text); CREATE TABLE Sizes (size_code text, size_description text); CREATE TABLE Treatment_Types (treatment_type_code text, treatment_type_description text); CREATE TABLE Treatments (treatment_id number, dog_id number, professional_id number, treatment_type_code text, date_of_treatment time, cost_of_treatment number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"singer\"\nTable singer, columns = [*,Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship]\nTable song, columns = [*,Song_ID,Title,Singer_ID,Sales,Highest_Position]\nForeign_keys = [song.Singer_ID = singer.Singer_ID]", "output": "CREATE TABLE singer (Singer_ID number, Name text, Birth_Year number, Net_Worth_Millions number, Citizenship text); CREATE TABLE song (Song_ID number, Title text, Singer_ID number, Sales number, Highest_Position number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"real_estate_properties\"\nTable Other_Available_Features, columns = [*,feature_id,feature_type_code,feature_name,feature_description]\nTable Other_Property_Features, columns = [*,property_id,feature_id,property_feature_description]\nTable Properties, columns = [*,property_id,property_type_code,date_on_market,date_sold,property_name,property_address,room_count,vendor_requested_price,buyer_offered_price,agreed_selling_price,apt_feature_1,apt_feature_2,apt_feature_3,fld_feature_1,fld_feature_2,fld_feature_3,hse_feature_1,hse_feature_2,hse_feature_3,oth_feature_1,oth_feature_2,oth_feature_3,shp_feature_1,shp_feature_2,shp_feature_3,other_property_details]\nTable Ref_Feature_Types, columns = [*,feature_type_code,feature_type_name]\nTable Ref_Property_Types, columns = [*,property_type_code,property_type_description]\nForeign_keys = [Other_Available_Features.feature_type_code = Ref_Feature_Types.feature_type_code,Properties.property_type_code = Ref_Property_Types.property_type_code,Other_Property_Features.property_id = Properties.property_id,Other_Property_Features.feature_id = Other_Available_Features.feature_id]", "output": "CREATE TABLE Other_Available_Features (feature_id number, feature_type_code text, feature_name text, feature_description text); CREATE TABLE Other_Property_Features (property_id number, feature_id number, property_feature_description text); CREATE TABLE Properties (property_id number, property_type_code text, date_on_market time, date_sold time, property_name text, property_address text, room_count number, vendor_requested_price number, buyer_offered_price number, agreed_selling_price number, apt_feature_1 text, apt_feature_2 text, apt_feature_3 text, fld_feature_1 text, fld_feature_2 text, fld_feature_3 text, hse_feature_1 text, hse_feature_2 text, hse_feature_3 text, oth_feature_1 text, oth_feature_2 text, oth_feature_3 text, shp_feature_1 text, shp_feature_2 text, shp_feature_3 text, other_property_details text); CREATE TABLE Ref_Feature_Types (feature_type_code text, feature_type_name text); CREATE TABLE Ref_Property_Types (property_type_code text, property_type_description text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"department_management\"\nTable department, columns = [*,Department_ID,Name,Creation,Ranking,Budget_in_Billions,Num_Employees]\nTable head, columns = [*,head_ID,name,born_state,age]\nTable management, columns = [*,department_ID,head_ID,temporary_acting]\nForeign_keys = [management.head_ID = head.head_ID,management.department_ID = department.Department_ID]", "output": "CREATE TABLE department (Department_ID number, Name text, Creation text, Ranking number, Budget_in_Billions number, Num_Employees number); CREATE TABLE head (head_ID number, name text, born_state text, age number); CREATE TABLE management (department_ID number, head_ID number, temporary_acting text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"farm\"\nTable city, columns = [*,City_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking]\nTable competition_record, columns = [*,Competition_ID,Farm_ID,Rank]\nTable farm, columns = [*,Farm_ID,Year,Total_Horses,Working_Horses,Total_Cattle,Oxen,Bulls,Cows,Pigs,Sheep_and_Goats]\nTable farm_competition, columns = [*,Competition_ID,Year,Theme,Host_city_ID,Hosts]\nForeign_keys = [farm_competition.Host_city_ID = city.City_ID,competition_record.Farm_ID = farm.Farm_ID,competition_record.Competition_ID = farm_competition.Competition_ID]", "output": "CREATE TABLE city (City_ID number, Official_Name text, Status text, Area_km_2 number, Population number, Census_Ranking text); CREATE TABLE competition_record (Competition_ID number, Farm_ID number, Rank number); CREATE TABLE farm (Farm_ID number, Year number, Total_Horses number, Working_Horses number, Total_Cattle number, Oxen number, Bulls number, Cows number, Pigs number, Sheep_and_Goats number); CREATE TABLE farm_competition (Competition_ID number, Year number, Theme text, Host_city_ID number, Hosts text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"student_assessment\"\nTable Addresses, columns = [*,address_id,line_1,line_2,city,zip_postcode,state_province_county,country]\nTable Candidate_Assessments, columns = [*,candidate_id,qualification,assessment_date,asessment_outcome_code]\nTable Candidates, columns = [*,candidate_id,candidate_details]\nTable Courses, columns = [*,course_id,course_name,course_description,other_details]\nTable People, columns = [*,person_id,first_name,middle_name,last_name,cell_mobile_number,email_address,login_name,password]\nTable People_Addresses, columns = [*,person_address_id,person_id,address_id,date_from,date_to]\nTable Student_Course_Attendance, columns = [*,student_id,course_id,date_of_attendance]\nTable Student_Course_Registrations, columns = [*,student_id,course_id,registration_date]\nTable Students, columns = [*,student_id,student_details]\nForeign_keys = [Students.student_id = People.person_id,People_Addresses.address_id = Addresses.address_id,People_Addresses.person_id = People.person_id,Student_Course_Registrations.course_id = Courses.course_id,Student_Course_Registrations.student_id = Students.student_id,Student_Course_Attendance.student_id = Student_Course_Registrations.student_id,Student_Course_Attendance.course_id = Student_Course_Registrations.course_id,Candidates.candidate_id = People.person_id,Candidate_Assessments.candidate_id = Candidates.candidate_id]", "output": "CREATE TABLE Addresses (address_id number, line_1 text, line_2 text, city text, zip_postcode text, state_province_county text, country text); CREATE TABLE Candidate_Assessments (candidate_id number, qualification text, assessment_date time, asessment_outcome_code text); CREATE TABLE Candidates (candidate_id number, candidate_details text); CREATE TABLE Courses (course_id text, course_name text, course_description text, other_details text); CREATE TABLE People (person_id number, first_name text, middle_name text, last_name text, cell_mobile_number text, email_address text, login_name text, password text); CREATE TABLE People_Addresses (person_address_id number, person_id number, address_id number, date_from time, date_to time); CREATE TABLE Student_Course_Attendance (student_id number, course_id number, date_of_attendance time); CREATE TABLE Student_Course_Registrations (student_id number, course_id number, registration_date time); CREATE TABLE Students (student_id number, student_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"bike_1\"\nTable station, columns = [*,id,name,lat,long,dock_count,city,installation_date]\nTable status, columns = [*,station_id,bikes_available,docks_available,time]\nTable trip, columns = [*,id,duration,start_date,start_station_name,start_station_id,end_date,end_station_name,end_station_id,bike_id,subscription_type,zip_code]\nTable weather, columns = [*,date,max_temperature_f,mean_temperature_f,min_temperature_f,max_dew_point_f,mean_dew_point_f,min_dew_point_f,max_humidity,mean_humidity,min_humidity,max_sea_level_pressure_inches,mean_sea_level_pressure_inches,min_sea_level_pressure_inches,max_visibility_miles,mean_visibility_miles,min_visibility_miles,max_wind_Speed_mph,mean_wind_speed_mph,max_gust_speed_mph,precipitation_inches,cloud_cover,events,wind_dir_degrees,zip_code]\nForeign_keys = [status.station_id = station.id]", "output": "CREATE TABLE station (id number, name text, lat number, long number, dock_count number, city text, installation_date text); CREATE TABLE status (station_id number, bikes_available number, docks_available number, time text); CREATE TABLE trip (id number, duration number, start_date text, start_station_name text, start_station_id number, end_date text, end_station_name text, end_station_id number, bike_id number, subscription_type text, zip_code number); CREATE TABLE weather (date text, max_temperature_f number, mean_temperature_f number, min_temperature_f number, max_dew_point_f number, mean_dew_point_f number, min_dew_point_f number, max_humidity number, mean_humidity number, min_humidity number, max_sea_level_pressure_inches number, mean_sea_level_pressure_inches number, min_sea_level_pressure_inches number, max_visibility_miles number, mean_visibility_miles number, min_visibility_miles number, max_wind_Speed_mph number, mean_wind_speed_mph number, max_gust_speed_mph number, precipitation_inches number, cloud_cover number, events text, wind_dir_degrees number, zip_code number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"book_2\"\nTable book, columns = [*,Book_ID,Title,Issues,Writer]\nTable publication, columns = [*,Publication_ID,Book_ID,Publisher,Publication_Date,Price]\nForeign_keys = [publication.Book_ID = book.Book_ID]", "output": "CREATE TABLE book (Book_ID number, Title text, Issues number, Writer text); CREATE TABLE publication (Publication_ID number, Book_ID number, Publisher text, Publication_Date text, Price number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"musical\"\nTable actor, columns = [*,Actor_ID,Name,Musical_ID,Character,Duration,age]\nTable musical, columns = [*,Musical_ID,Name,Year,Award,Category,Nominee,Result]\nForeign_keys = [actor.Musical_ID = actor.Actor_ID]", "output": "CREATE TABLE actor (Actor_ID number, Name text, Musical_ID number, Character text, Duration text, age number); CREATE TABLE musical (Musical_ID number, Name text, Year number, Award text, Category text, Nominee text, Result text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"twitter_1\"\nTable follows, columns = [*,f1,f2]\nTable tweets, columns = [*,id,uid,text,createdate]\nTable user_profiles, columns = [*,uid,name,email,partitionid,followers]\nForeign_keys = [follows.f2 = user_profiles.uid,follows.f1 = user_profiles.uid,tweets.uid = user_profiles.uid]", "output": "CREATE TABLE follows (f1 number, f2 number); CREATE TABLE tweets (id number, uid number, text text, createdate time); CREATE TABLE user_profiles (uid number, name text, email text, partitionid number, followers number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"product_catalog\"\nTable Attribute_Definitions, columns = [*,attribute_id,attribute_name,attribute_data_type]\nTable Catalog_Contents, columns = [*,catalog_entry_id,catalog_level_number,parent_entry_id,previous_entry_id,next_entry_id,catalog_entry_name,product_stock_number,price_in_dollars,price_in_euros,price_in_pounds,capacity,length,height,width]\nTable Catalog_Contents_Additional_Attributes, columns = [*,catalog_entry_id,catalog_level_number,attribute_id,attribute_value]\nTable Catalog_Structure, columns = [*,catalog_level_number,catalog_id,catalog_level_name]\nTable Catalogs, columns = [*,catalog_id,catalog_name,catalog_publisher,date_of_publication,date_of_latest_revision]\nForeign_keys = [Catalog_Structure.catalog_id = Catalogs.catalog_id,Catalog_Contents.catalog_level_number = Catalog_Structure.catalog_level_number,Catalog_Contents_Additional_Attributes.catalog_level_number = Catalog_Structure.catalog_level_number,Catalog_Contents_Additional_Attributes.catalog_entry_id = Catalog_Contents.catalog_entry_id]", "output": "CREATE TABLE Attribute_Definitions (attribute_id number, attribute_name text, attribute_data_type text); CREATE TABLE Catalog_Contents (catalog_entry_id number, catalog_level_number number, parent_entry_id number, previous_entry_id number, next_entry_id number, catalog_entry_name text, product_stock_number text, price_in_dollars number, price_in_euros number, price_in_pounds number, capacity text, length text, height text, width text); CREATE TABLE Catalog_Contents_Additional_Attributes (catalog_entry_id number, catalog_level_number number, attribute_id number, attribute_value text); CREATE TABLE Catalog_Structure (catalog_level_number number, catalog_id number, catalog_level_name text); CREATE TABLE Catalogs (catalog_id number, catalog_name text, catalog_publisher text, date_of_publication time, date_of_latest_revision time)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"flight_1\"\nTable aircraft, columns = [*,aid,name,distance]\nTable certificate, columns = [*,eid,aid]\nTable employee, columns = [*,eid,name,salary]\nTable flight, columns = [*,flno,origin,destination,distance,departure_date,arrival_date,price,aid]\nForeign_keys = [flight.aid = aircraft.aid,certificate.aid = aircraft.aid,certificate.eid = employee.eid]", "output": "CREATE TABLE aircraft (aid number, name text, distance number); CREATE TABLE certificate (eid number, aid number); CREATE TABLE employee (eid number, name text, salary number); CREATE TABLE flight (flno number, origin text, destination text, distance number, departure_date time, arrival_date time, price number, aid number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"allergy_1\"\nTable Allergy_Type, columns = [*,Allergy,AllergyType]\nTable Has_Allergy, columns = [*,StuID,Allergy]\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nForeign_keys = [Has_Allergy.Allergy = Allergy_Type.Allergy,Has_Allergy.StuID = Student.StuID]", "output": "CREATE TABLE Allergy_Type (Allergy text, AllergyType text); CREATE TABLE Has_Allergy (StuID number, Allergy text); CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"store_1\"\nTable albums, columns = [*,id,title,artist_id]\nTable artists, columns = [*,id,name]\nTable customers, columns = [*,id,first_name,last_name,company,address,city,state,country,postal_code,phone,fax,email,support_rep_id]\nTable employees, columns = [*,id,last_name,first_name,title,reports_to,birth_date,hire_date,address,city,state,country,postal_code,phone,fax,email]\nTable genres, columns = [*,id,name]\nTable invoice_lines, columns = [*,id,invoice_id,track_id,unit_price,quantity]\nTable invoices, columns = [*,id,customer_id,invoice_date,billing_address,billing_city,billing_state,billing_country,billing_postal_code,total]\nTable media_types, columns = [*,id,name]\nTable playlist_tracks, columns = [*,playlist_id,track_id]\nTable playlists, columns = [*,id,name]\nTable sqlite_sequence, columns = [*,name,seq]\nTable tracks, columns = [*,id,name,album_id,media_type_id,genre_id,composer,milliseconds,bytes,unit_price]\nForeign_keys = [albums.artist_id = artists.id,employees.reports_to = employees.id,customers.support_rep_id = employees.id,invoices.customer_id = customers.id,tracks.media_type_id = media_types.id,tracks.genre_id = genres.id,tracks.album_id = albums.id,invoice_lines.track_id = tracks.id,invoice_lines.invoice_id = invoices.id,playlist_tracks.track_id = tracks.id,playlist_tracks.playlist_id = playlists.id]", "output": "CREATE TABLE albums (id number, title text, artist_id number); CREATE TABLE artists (id number, name text); CREATE TABLE customers (id number, first_name text, last_name text, company text, address text, city text, state text, country text, postal_code text, phone text, fax text, email text, support_rep_id number); CREATE TABLE employees (id number, last_name text, first_name text, title text, reports_to number, birth_date time, hire_date time, address text, city text, state text, country text, postal_code text, phone text, fax text, email text); CREATE TABLE genres (id number, name text); CREATE TABLE invoice_lines (id number, invoice_id number, track_id number, unit_price number, quantity number); CREATE TABLE invoices (id number, customer_id number, invoice_date time, billing_address text, billing_city text, billing_state text, billing_country text, billing_postal_code text, total number); CREATE TABLE media_types (id number, name text); CREATE TABLE playlist_tracks (playlist_id number, track_id number); CREATE TABLE playlists (id number, name text); CREATE TABLE sqlite_sequence (name text, seq text); CREATE TABLE tracks (id number, name text, album_id number, media_type_id number, genre_id number, composer text, milliseconds number, bytes number, unit_price number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"journal_committee\"\nTable editor, columns = [*,Editor_ID,Name,Age]\nTable journal, columns = [*,Journal_ID,Date,Theme,Sales]\nTable journal_committee, columns = [*,Editor_ID,Journal_ID,Work_Type]\nForeign_keys = [journal_committee.Journal_ID = journal.Journal_ID,journal_committee.Editor_ID = editor.Editor_ID]", "output": "CREATE TABLE editor (Editor_ID number, Name text, Age number); CREATE TABLE journal (Journal_ID number, Date text, Theme text, Sales number); CREATE TABLE journal_committee (Editor_ID number, Journal_ID number, Work_Type text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"customers_card_transactions\"\nTable Accounts, columns = [*,account_id,customer_id,account_name,other_account_details]\nTable Customers, columns = [*,customer_id,customer_first_name,customer_last_name,customer_address,customer_phone,customer_email,other_customer_details]\nTable Customers_Cards, columns = [*,card_id,customer_id,card_type_code,card_number,date_valid_from,date_valid_to,other_card_details]\nTable Financial_Transactions, columns = [*,transaction_id,previous_transaction_id,account_id,card_id,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details]\nForeign_keys = [Financial_Transactions.account_id = Accounts.account_id,Financial_Transactions.card_id = Customers_Cards.card_id]", "output": "CREATE TABLE Accounts (account_id number, customer_id number, account_name text, other_account_details text); CREATE TABLE Customers (customer_id number, customer_first_name text, customer_last_name text, customer_address text, customer_phone text, customer_email text, other_customer_details text); CREATE TABLE Customers_Cards (card_id number, customer_id number, card_type_code text, card_number text, date_valid_from time, date_valid_to time, other_card_details text); CREATE TABLE Financial_Transactions (transaction_id number, previous_transaction_id number, account_id number, card_id number, transaction_type text, transaction_date time, transaction_amount number, transaction_comment text, other_transaction_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"race_track\"\nTable race, columns = [*,Race_ID,Name,Class,Date,Track_ID]\nTable track, columns = [*,Track_ID,Name,Location,Seating,Year_Opened]\nForeign_keys = [race.Track_ID = track.Track_ID]", "output": "CREATE TABLE race (Race_ID number, Name text, Class text, Date text, Track_ID text); CREATE TABLE track (Track_ID number, Name text, Location text, Seating number, Year_Opened number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"coffee_shop\"\nTable happy_hour, columns = [*,HH_ID,Shop_ID,Month,Num_of_shaff_in_charge]\nTable happy_hour_member, columns = [*,HH_ID,Member_ID,Total_amount]\nTable member, columns = [*,Member_ID,Name,Membership_card,Age,Time_of_purchase,Level_of_membership,Address]\nTable shop, columns = [*,Shop_ID,Address,Num_of_staff,Score,Open_Year]\nForeign_keys = [happy_hour.Shop_ID = shop.Shop_ID,happy_hour_member.Member_ID = member.Member_ID]", "output": "CREATE TABLE happy_hour (HH_ID number, Shop_ID number, Month text, Num_of_shaff_in_charge number); CREATE TABLE happy_hour_member (HH_ID number, Member_ID number, Total_amount number); CREATE TABLE member (Member_ID number, Name text, Membership_card text, Age number, Time_of_purchase number, Level_of_membership number, Address text); CREATE TABLE shop (Shop_ID number, Address text, Num_of_staff text, Score number, Open_Year text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"chinook_1\"\nTable Album, columns = [*,AlbumId,Title,ArtistId]\nTable Artist, columns = [*,ArtistId,Name]\nTable Customer, columns = [*,CustomerId,FirstName,LastName,Company,Address,City,State,Country,PostalCode,Phone,Fax,Email,SupportRepId]\nTable Employee, columns = [*,EmployeeId,LastName,FirstName,Title,ReportsTo,BirthDate,HireDate,Address,City,State,Country,PostalCode,Phone,Fax,Email]\nTable Genre, columns = [*,GenreId,Name]\nTable Invoice, columns = [*,InvoiceId,CustomerId,InvoiceDate,BillingAddress,BillingCity,BillingState,BillingCountry,BillingPostalCode,Total]\nTable InvoiceLine, columns = [*,InvoiceLineId,InvoiceId,TrackId,UnitPrice,Quantity]\nTable MediaType, columns = [*,MediaTypeId,Name]\nTable Playlist, columns = [*,PlaylistId,Name]\nTable PlaylistTrack, columns = [*,PlaylistId,TrackId]\nTable Track, columns = [*,TrackId,Name,AlbumId,MediaTypeId,GenreId,Composer,Milliseconds,Bytes,UnitPrice]\nForeign_keys = [Album.ArtistId = Artist.ArtistId,Customer.SupportRepId = Employee.EmployeeId,Employee.ReportsTo = Employee.EmployeeId,Invoice.CustomerId = Customer.CustomerId,InvoiceLine.TrackId = Track.TrackId,InvoiceLine.InvoiceId = Invoice.InvoiceId,PlaylistTrack.TrackId = Track.TrackId,PlaylistTrack.PlaylistId = Playlist.PlaylistId,Track.MediaTypeId = MediaType.MediaTypeId,Track.GenreId = Genre.GenreId,Track.AlbumId = Album.AlbumId]", "output": "CREATE TABLE Album (AlbumId number, Title text, ArtistId number); CREATE TABLE Artist (ArtistId number, Name text); CREATE TABLE Customer (CustomerId number, FirstName text, LastName text, Company text, Address text, City text, State text, Country text, PostalCode text, Phone text, Fax text, Email text, SupportRepId number); CREATE TABLE Employee (EmployeeId number, LastName text, FirstName text, Title text, ReportsTo number, BirthDate time, HireDate time, Address text, City text, State text, Country text, PostalCode text, Phone text, Fax text, Email text); CREATE TABLE Genre (GenreId number, Name text); CREATE TABLE Invoice (InvoiceId number, CustomerId number, InvoiceDate time, BillingAddress text, BillingCity text, BillingState text, BillingCountry text, BillingPostalCode text, Total number); CREATE TABLE InvoiceLine (InvoiceLineId number, InvoiceId number, TrackId number, UnitPrice number, Quantity number); CREATE TABLE MediaType (MediaTypeId number, Name text); CREATE TABLE Playlist (PlaylistId number, Name text); CREATE TABLE PlaylistTrack (PlaylistId number, TrackId number); CREATE TABLE Track (TrackId number, Name text, AlbumId number, MediaTypeId number, GenreId number, Composer text, Milliseconds number, Bytes number, UnitPrice number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"insurance_fnol\"\nTable Available_Policies, columns = [*,Policy_ID,policy_type_code,Customer_Phone]\nTable Claims, columns = [*,Claim_ID,FNOL_ID,Effective_Date]\nTable Customers, columns = [*,Customer_ID,Customer_name]\nTable Customers_Policies, columns = [*,Customer_ID,Policy_ID,Date_Opened,Date_Closed]\nTable First_Notification_of_Loss, columns = [*,FNOL_ID,Customer_ID,Policy_ID,Service_ID]\nTable Services, columns = [*,Service_ID,Service_name]\nTable Settlements, columns = [*,Settlement_ID,Claim_ID,Effective_Date,Settlement_Amount]\nForeign_keys = [Customers_Policies.Policy_ID = Available_Policies.Policy_ID,Customers_Policies.Customer_ID = Customers.Customer_ID,First_Notification_of_Loss.Customer_ID = Customers_Policies.Customer_ID,First_Notification_of_Loss.Policy_ID = Customers_Policies.Policy_ID,First_Notification_of_Loss.Service_ID = Services.Service_ID,Claims.FNOL_ID = First_Notification_of_Loss.FNOL_ID,Settlements.Claim_ID = Claims.Claim_ID]", "output": "CREATE TABLE Available_Policies (Policy_ID number, policy_type_code text, Customer_Phone text); CREATE TABLE Claims (Claim_ID number, FNOL_ID number, Effective_Date time); CREATE TABLE Customers (Customer_ID number, Customer_name text); CREATE TABLE Customers_Policies (Customer_ID number, Policy_ID number, Date_Opened time, Date_Closed time); CREATE TABLE First_Notification_of_Loss (FNOL_ID number, Customer_ID number, Policy_ID number, Service_ID number); CREATE TABLE Services (Service_ID number, Service_name text); CREATE TABLE Settlements (Settlement_ID number, Claim_ID number, Effective_Date time, Settlement_Amount number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"medicine_enzyme_interaction\"\nTable enzyme, columns = [*,id,name,Location,Product,Chromosome,OMIM,Porphyria]\nTable medicine, columns = [*,id,name,Trade_Name,FDA_approved]\nTable medicine_enzyme_interaction, columns = [*,enzyme_id,medicine_id,interaction_type]\nForeign_keys = [medicine_enzyme_interaction.medicine_id = medicine.id,medicine_enzyme_interaction.enzyme_id = enzyme.id]", "output": "CREATE TABLE enzyme (id number, name text, Location text, Product text, Chromosome text, OMIM number, Porphyria text); CREATE TABLE medicine (id number, name text, Trade_Name text, FDA_approved text); CREATE TABLE medicine_enzyme_interaction (enzyme_id number, medicine_id number, interaction_type text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"university_basketball\"\nTable basketball_match, columns = [*,Team_ID,School_ID,Team_Name,ACC_Regular_Season,ACC_Percent,ACC_Home,ACC_Road,All_Games,All_Games_Percent,All_Home,All_Road,All_Neutral]\nTable university, columns = [*,School_ID,School,Location,Founded,Affiliation,Enrollment,Nickname,Primary_conference]\nForeign_keys = [basketball_match.School_ID = university.School_ID]", "output": "CREATE TABLE basketball_match (Team_ID number, School_ID number, Team_Name text, ACC_Regular_Season text, ACC_Percent text, ACC_Home text, ACC_Road text, All_Games text, All_Games_Percent number, All_Home text, All_Road text, All_Neutral text); CREATE TABLE university (School_ID number, School text, Location text, Founded number, Affiliation text, Enrollment number, Nickname text, Primary_conference text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"phone_1\"\nTable chip_model, columns = [*,Model_name,Launch_year,RAM_MiB,ROM_MiB,Slots,WiFi,Bluetooth]\nTable phone, columns = [*,Company_name,Hardware_Model_name,Accreditation_type,Accreditation_level,Date,chip_model,screen_mode]\nTable screen_mode, columns = [*,Graphics_mode,Char_cells,Pixels,Hardware_colours,used_kb,map,Type]\nForeign_keys = [phone.chip_model = chip_model.Model_name,phone.screen_mode = screen_mode.Graphics_mode]", "output": "CREATE TABLE chip_model (Model_name text, Launch_year number, RAM_MiB number, ROM_MiB number, Slots text, WiFi text, Bluetooth text); CREATE TABLE phone (Company_name text, Hardware_Model_name text, Accreditation_type text, Accreditation_level text, Date text, chip_model text, screen_mode text); CREATE TABLE screen_mode (Graphics_mode number, Char_cells text, Pixels text, Hardware_colours number, used_kb number, map text, Type text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"match_season\"\nTable country, columns = [*,Country_id,Country_name,Capital,Official_native_language]\nTable match_season, columns = [*,Season,Player,Position,Country,Team,Draft_Pick_Number,Draft_Class,College]\nTable player, columns = [*,Player_ID,Player,Years_Played,Total_WL,Singles_WL,Doubles_WL,Team]\nTable team, columns = [*,Team_id,Name]\nForeign_keys = [match_season.Team = team.Team_id,match_season.Country = country.Country_id,player.Team = team.Team_id]", "output": "CREATE TABLE country (Country_id number, Country_name text, Capital text, Official_native_language text); CREATE TABLE match_season (Season number, Player text, Position text, Country number, Team number, Draft_Pick_Number number, Draft_Class text, College text); CREATE TABLE player (Player_ID number, Player text, Years_Played text, Total_WL text, Singles_WL text, Doubles_WL text, Team number); CREATE TABLE team (Team_id number, Name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"climbing\"\nTable climber, columns = [*,Climber_ID,Name,Country,Time,Points,Mountain_ID]\nTable mountain, columns = [*,Mountain_ID,Name,Height,Prominence,Range,Country]\nForeign_keys = [climber.Mountain_ID = mountain.Mountain_ID]", "output": "CREATE TABLE climber (Climber_ID number, Name text, Country text, Time text, Points number, Mountain_ID number); CREATE TABLE mountain (Mountain_ID number, Name text, Height number, Prominence number, Range text, Country text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"body_builder\"\nTable body_builder, columns = [*,Body_Builder_ID,People_ID,Snatch,Clean_Jerk,Total]\nTable people, columns = [*,People_ID,Name,Height,Weight,Birth_Date,Birth_Place]\nForeign_keys = [body_builder.People_ID = people.People_ID]", "output": "CREATE TABLE body_builder (Body_Builder_ID number, People_ID number, Snatch number, Clean_Jerk number, Total number); CREATE TABLE people (People_ID number, Name text, Height number, Weight number, Birth_Date text, Birth_Place text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"election_representative\"\nTable election, columns = [*,Election_ID,Representative_ID,Date,Votes,Vote_Percent,Seats,Place]\nTable representative, columns = [*,Representative_ID,Name,State,Party,Lifespan]\nForeign_keys = [election.Representative_ID = representative.Representative_ID]", "output": "CREATE TABLE election (Election_ID number, Representative_ID number, Date text, Votes number, Vote_Percent number, Seats number, Place number); CREATE TABLE representative (Representative_ID number, Name text, State text, Party text, Lifespan text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"apartment_rentals\"\nTable Apartment_Bookings, columns = [*,apt_booking_id,apt_id,guest_id,booking_status_code,booking_start_date,booking_end_date]\nTable Apartment_Buildings, columns = [*,building_id,building_short_name,building_full_name,building_description,building_address,building_manager,building_phone]\nTable Apartment_Facilities, columns = [*,apt_id,facility_code]\nTable Apartments, columns = [*,apt_id,building_id,apt_type_code,apt_number,bathroom_count,bedroom_count,room_count]\nTable Guests, columns = [*,guest_id,gender_code,guest_first_name,guest_last_name,date_of_birth]\nTable View_Unit_Status, columns = [*,apt_id,apt_booking_id,status_date,available_yn]\nForeign_keys = [Apartments.building_id = Apartment_Buildings.building_id,Apartment_Facilities.apt_id = Apartments.apt_id,Apartment_Bookings.guest_id = Guests.guest_id,Apartment_Bookings.apt_id = Apartments.apt_id,View_Unit_Status.apt_booking_id = Apartment_Bookings.apt_booking_id,View_Unit_Status.apt_id = Apartments.apt_id]", "output": "CREATE TABLE Apartment_Bookings (apt_booking_id number, apt_id number, guest_id number, booking_status_code text, booking_start_date time, booking_end_date time); CREATE TABLE Apartment_Buildings (building_id number, building_short_name text, building_full_name text, building_description text, building_address text, building_manager text, building_phone text); CREATE TABLE Apartment_Facilities (apt_id number, facility_code text); CREATE TABLE Apartments (apt_id number, building_id number, apt_type_code text, apt_number text, bathroom_count number, bedroom_count number, room_count text); CREATE TABLE Guests (guest_id number, gender_code text, guest_first_name text, guest_last_name text, date_of_birth time); CREATE TABLE View_Unit_Status (apt_id number, apt_booking_id number, status_date time, available_yn others)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"game_injury\"\nTable game, columns = [*,stadium_id,id,Season,Date,Home_team,Away_team,Score,Competition]\nTable injury_accident, columns = [*,game_id,id,Player,Injury,Number_of_matches,Source]\nTable stadium, columns = [*,id,name,Home_Games,Average_Attendance,Total_Attendance,Capacity_Percentage]\nForeign_keys = [game.stadium_id = stadium.id,injury_accident.game_id = game.id]", "output": "CREATE TABLE game (stadium_id number, id number, Season number, Date text, Home_team text, Away_team text, Score text, Competition text); CREATE TABLE injury_accident (game_id number, id number, Player text, Injury text, Number_of_matches text, Source text); CREATE TABLE stadium (id number, name text, Home_Games number, Average_Attendance number, Total_Attendance number, Capacity_Percentage number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"soccer_1\"\nTable Country, columns = [*,id,name]\nTable League, columns = [*,id,country_id,name]\nTable Player, columns = [*,id,player_api_id,player_name,player_fifa_api_id,birthday,height,weight]\nTable Player_Attributes, columns = [*,id,player_fifa_api_id,player_api_id,date,overall_rating,potential,preferred_foot,attacking_work_rate,defensive_work_rate,crossing,finishing,heading_accuracy,short_passing,volleys,dribbling,curve,free_kick_accuracy,long_passing,ball_control,acceleration,sprint_speed,agility,reactions,balance,shot_power,jumping,stamina,strength,long_shots,aggression,interceptions,positioning,vision,penalties,marking,standing_tackle,sliding_tackle,gk_diving,gk_handling,gk_kicking,gk_positioning,gk_reflexes]\nTable Team, columns = [*,id,team_api_id,team_fifa_api_id,team_long_name,team_short_name]\nTable Team_Attributes, columns = [*,id,team_fifa_api_id,team_api_id,date,buildUpPlaySpeed,buildUpPlaySpeedClass,buildUpPlayDribbling,buildUpPlayDribblingClass,buildUpPlayPassing,buildUpPlayPassingClass,buildUpPlayPositioningClass,chanceCreationPassing,chanceCreationPassingClass,chanceCreationCrossing,chanceCreationCrossingClass,chanceCreationShooting,chanceCreationShootingClass,chanceCreationPositioningClass,defencePressure,defencePressureClass,defenceAggression,defenceAggressionClass,defenceTeamWidth,defenceTeamWidthClass,defenceDefenderLineClass]\nTable sqlite_sequence, columns = [*,name,seq]\nForeign_keys = [Player_Attributes.player_api_id = Player.player_api_id,Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id,League.country_id = Country.id,Team_Attributes.team_api_id = Team.team_api_id,Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id]", "output": "CREATE TABLE Country (id number, name text); CREATE TABLE League (id number, country_id number, name text); CREATE TABLE Player (id number, player_api_id number, player_name text, player_fifa_api_id number, birthday text, height number, weight number); CREATE TABLE Player_Attributes (id number, player_fifa_api_id number, player_api_id number, date text, overall_rating number, potential number, preferred_foot text, attacking_work_rate text, defensive_work_rate text, crossing number, finishing number, heading_accuracy number, short_passing number, volleys number, dribbling number, curve number, free_kick_accuracy number, long_passing number, ball_control number, acceleration number, sprint_speed number, agility number, reactions number, balance number, shot_power number, jumping number, stamina number, strength number, long_shots number, aggression number, interceptions number, positioning number, vision number, penalties number, marking number, standing_tackle number, sliding_tackle number, gk_diving number, gk_handling number, gk_kicking number, gk_positioning number, gk_reflexes number); CREATE TABLE Team (id number, team_api_id number, team_fifa_api_id number, team_long_name text, team_short_name text); CREATE TABLE Team_Attributes (id number, team_fifa_api_id number, team_api_id number, date text, buildUpPlaySpeed number, buildUpPlaySpeedClass text, buildUpPlayDribbling number, buildUpPlayDribblingClass text, buildUpPlayPassing number, buildUpPlayPassingClass text, buildUpPlayPositioningClass text, chanceCreationPassing number, chanceCreationPassingClass text, chanceCreationCrossing number, chanceCreationCrossingClass text, chanceCreationShooting number, chanceCreationShootingClass text, chanceCreationPositioningClass text, defencePressure number, defencePressureClass text, defenceAggression number, defenceAggressionClass text, defenceTeamWidth number, defenceTeamWidthClass text, defenceDefenderLineClass text); CREATE TABLE sqlite_sequence (name text, seq text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"performance_attendance\"\nTable member, columns = [*,Member_ID,Name,Nationality,Role]\nTable member_attendance, columns = [*,Member_ID,Performance_ID,Num_of_Pieces]\nTable performance, columns = [*,Performance_ID,Date,Host,Location,Attendance]\nForeign_keys = [member_attendance.Performance_ID = performance.Performance_ID,member_attendance.Member_ID = member.Member_ID]", "output": "CREATE TABLE member (Member_ID text, Name text, Nationality text, Role text); CREATE TABLE member_attendance (Member_ID number, Performance_ID number, Num_of_Pieces number); CREATE TABLE performance (Performance_ID number, Date text, Host text, Location text, Attendance number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"college_2\"\nTable advisor, columns = [*,s_ID,i_ID]\nTable classroom, columns = [*,building,room_number,capacity]\nTable course, columns = [*,course_id,title,dept_name,credits]\nTable department, columns = [*,dept_name,building,budget]\nTable instructor, columns = [*,ID,name,dept_name,salary]\nTable prereq, columns = [*,course_id,prereq_id]\nTable section, columns = [*,course_id,sec_id,semester,year,building,room_number,time_slot_id]\nTable student, columns = [*,ID,name,dept_name,tot_cred]\nTable takes, columns = [*,ID,course_id,sec_id,semester,year,grade]\nTable teaches, columns = [*,ID,course_id,sec_id,semester,year]\nTable time_slot, columns = [*,time_slot_id,day,start_hr,start_min,end_hr,end_min]\nForeign_keys = [course.dept_name = department.dept_name,instructor.dept_name = department.dept_name,section.building = classroom.building,section.room_number = classroom.room_number,section.course_id = course.course_id,teaches.ID = instructor.ID,teaches.course_id = section.course_id,teaches.sec_id = section.sec_id,teaches.semester = section.semester,teaches.year = section.year,student.dept_name = department.dept_name,takes.ID = student.ID,takes.course_id = section.course_id,takes.sec_id = section.sec_id,takes.semester = section.semester,takes.year = section.year,advisor.s_ID = student.ID,advisor.i_ID = instructor.ID,prereq.prereq_id = course.course_id,prereq.course_id = course.course_id]", "output": "CREATE TABLE advisor (s_ID text, i_ID text); CREATE TABLE classroom (building text, room_number text, capacity number); CREATE TABLE course (course_id text, title text, dept_name text, credits number); CREATE TABLE department (dept_name text, building text, budget number); CREATE TABLE instructor (ID text, name text, dept_name text, salary number); CREATE TABLE prereq (course_id text, prereq_id text); CREATE TABLE section (course_id text, sec_id text, semester text, year number, building text, room_number text, time_slot_id text); CREATE TABLE student (ID text, name text, dept_name text, tot_cred number); CREATE TABLE takes (ID text, course_id text, sec_id text, semester text, year number, grade text); CREATE TABLE teaches (ID text, course_id text, sec_id text, semester text, year number); CREATE TABLE time_slot (time_slot_id text, day text, start_hr number, start_min number, end_hr number, end_min number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"debate\"\nTable debate, columns = [*,Debate_ID,Date,Venue,Num_of_Audience]\nTable debate_people, columns = [*,Debate_ID,Affirmative,Negative,If_Affirmative_Win]\nTable people, columns = [*,People_ID,District,Name,Party,Age]\nForeign_keys = [debate_people.Negative = people.People_ID,debate_people.Affirmative = people.People_ID,debate_people.Debate_ID = debate.Debate_ID]", "output": "CREATE TABLE debate (Debate_ID number, Date text, Venue text, Num_of_Audience number); CREATE TABLE debate_people (Debate_ID number, Affirmative number, Negative number, If_Affirmative_Win others); CREATE TABLE people (People_ID number, District text, Name text, Party text, Age number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"insurance_and_eClaims\"\nTable Claim_Headers, columns = [*,Claim_Header_ID,Claim_Status_Code,Claim_Type_Code,Policy_ID,Date_of_Claim,Date_of_Settlement,Amount_Claimed,Amount_Piad]\nTable Claims_Documents, columns = [*,Claim_ID,Document_Type_Code,Created_by_Staff_ID,Created_Date]\nTable Claims_Processing, columns = [*,Claim_Processing_ID,Claim_ID,Claim_Outcome_Code,Claim_Stage_ID,Staff_ID]\nTable Claims_Processing_Stages, columns = [*,Claim_Stage_ID,Next_Claim_Stage_ID,Claim_Status_Name,Claim_Status_Description]\nTable Customers, columns = [*,Customer_ID,Customer_Details]\nTable Policies, columns = [*,Policy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date]\nTable Staff, columns = [*,Staff_ID,Staff_Details]\nForeign_keys = [Policies.Customer_ID = Customers.Customer_ID,Claim_Headers.Policy_ID = Policies.Policy_ID,Claims_Documents.Created_by_Staff_ID = Staff.Staff_ID,Claims_Documents.Claim_ID = Claim_Headers.Claim_Header_ID,Claims_Processing.Staff_ID = Staff.Staff_ID,Claims_Processing.Claim_ID = Claim_Headers.Claim_Header_ID]", "output": "CREATE TABLE Claim_Headers (Claim_Header_ID number, Claim_Status_Code text, Claim_Type_Code text, Policy_ID number, Date_of_Claim time, Date_of_Settlement time, Amount_Claimed number, Amount_Piad number); CREATE TABLE Claims_Documents (Claim_ID number, Document_Type_Code text, Created_by_Staff_ID number, Created_Date number); CREATE TABLE Claims_Processing (Claim_Processing_ID number, Claim_ID number, Claim_Outcome_Code text, Claim_Stage_ID number, Staff_ID number); CREATE TABLE Claims_Processing_Stages (Claim_Stage_ID number, Next_Claim_Stage_ID number, Claim_Status_Name text, Claim_Status_Description text); CREATE TABLE Customers (Customer_ID number, Customer_Details text); CREATE TABLE Policies (Policy_ID number, Customer_ID number, Policy_Type_Code text, Start_Date time, End_Date time); CREATE TABLE Staff (Staff_ID number, Staff_Details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"customers_and_invoices\"\nTable Accounts, columns = [*,account_id,customer_id,date_account_opened,account_name,other_account_details]\nTable Customers, columns = [*,customer_id,customer_first_name,customer_middle_initial,customer_last_name,gender,email_address,login_name,login_password,phone_number,town_city,state_county_province,country]\nTable Financial_Transactions, columns = [*,transaction_id,account_id,invoice_number,transaction_type,transaction_date,transaction_amount,transaction_comment,other_transaction_details]\nTable Invoice_Line_Items, columns = [*,order_item_id,invoice_number,product_id,product_title,product_quantity,product_price,derived_product_cost,derived_vat_payable,derived_total_cost]\nTable Invoices, columns = [*,invoice_number,order_id,invoice_date]\nTable Order_Items, columns = [*,order_item_id,order_id,product_id,product_quantity,other_order_item_details]\nTable Orders, columns = [*,order_id,customer_id,date_order_placed,order_details]\nTable Product_Categories, columns = [*,production_type_code,product_type_description,vat_rating]\nTable Products, columns = [*,product_id,parent_product_id,production_type_code,unit_price,product_name,product_color,product_size]\nForeign_keys = [Orders.customer_id = Customers.customer_id,Invoices.order_id = Orders.order_id,Accounts.customer_id = Customers.customer_id,Products.production_type_code = Product_Categories.production_type_code,Financial_Transactions.account_id = Accounts.account_id,Financial_Transactions.invoice_number = Invoices.invoice_number,Order_Items.order_id = Orders.order_id,Order_Items.product_id = Products.product_id,Invoice_Line_Items.product_id = Products.product_id,Invoice_Line_Items.invoice_number = Invoices.invoice_number,Invoice_Line_Items.order_item_id = Order_Items.order_item_id]", "output": "CREATE TABLE Accounts (account_id number, customer_id number, date_account_opened time, account_name text, other_account_details text); CREATE TABLE Customers (customer_id number, customer_first_name text, customer_middle_initial text, customer_last_name text, gender text, email_address text, login_name text, login_password text, phone_number text, town_city text, state_county_province text, country text); CREATE TABLE Financial_Transactions (transaction_id number, account_id number, invoice_number number, transaction_type text, transaction_date time, transaction_amount number, transaction_comment text, other_transaction_details text); CREATE TABLE Invoice_Line_Items (order_item_id number, invoice_number number, product_id number, product_title text, product_quantity text, product_price number, derived_product_cost number, derived_vat_payable number, derived_total_cost number); CREATE TABLE Invoices (invoice_number number, order_id number, invoice_date time); CREATE TABLE Order_Items (order_item_id number, order_id number, product_id number, product_quantity text, other_order_item_details text); CREATE TABLE Orders (order_id number, customer_id number, date_order_placed time, order_details text); CREATE TABLE Product_Categories (production_type_code text, product_type_description text, vat_rating number); CREATE TABLE Products (product_id number, parent_product_id number, production_type_code text, unit_price number, product_name text, product_color text, product_size text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"wedding\"\nTable church, columns = [*,Church_ID,Name,Organized_by,Open_Date,Continuation_of]\nTable people, columns = [*,People_ID,Name,Country,Is_Male,Age]\nTable wedding, columns = [*,Church_ID,Male_ID,Female_ID,Year]\nForeign_keys = [wedding.Female_ID = people.People_ID,wedding.Male_ID = people.People_ID,wedding.Church_ID = church.Church_ID]", "output": "CREATE TABLE church (Church_ID number, Name text, Organized_by text, Open_Date number, Continuation_of text); CREATE TABLE people (People_ID number, Name text, Country text, Is_Male text, Age number); CREATE TABLE wedding (Church_ID number, Male_ID number, Female_ID number, Year number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"theme_gallery\"\nTable artist, columns = [*,Artist_ID,Name,Country,Year_Join,Age]\nTable exhibition, columns = [*,Exhibition_ID,Year,Theme,Artist_ID,Ticket_Price]\nTable exhibition_record, columns = [*,Exhibition_ID,Date,Attendance]\nForeign_keys = [exhibition.Artist_ID = artist.Artist_ID,exhibition_record.Exhibition_ID = exhibition.Exhibition_ID]", "output": "CREATE TABLE artist (Artist_ID number, Name text, Country text, Year_Join number, Age number); CREATE TABLE exhibition (Exhibition_ID number, Year number, Theme text, Artist_ID number, Ticket_Price number); CREATE TABLE exhibition_record (Exhibition_ID number, Date text, Attendance number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"epinions_1\"\nTable item, columns = [*,i_id,title]\nTable review, columns = [*,a_id,u_id,i_id,rating,rank]\nTable trust, columns = [*,source_u_id,target_u_id,trust]\nTable useracct, columns = [*,u_id,name]\nForeign_keys = [review.i_id = item.i_id,review.u_id = useracct.u_id,trust.target_u_id = useracct.u_id,trust.source_u_id = useracct.u_id]", "output": "CREATE TABLE item (i_id number, title text); CREATE TABLE review (a_id number, u_id number, i_id number, rating number, rank number); CREATE TABLE trust (source_u_id number, target_u_id number, trust number); CREATE TABLE useracct (u_id number, name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"riding_club\"\nTable club, columns = [*,Club_ID,Club_name,Region,Start_year]\nTable coach, columns = [*,Coach_ID,Coach_name,Gender,Club_ID,Rank]\nTable match_result, columns = [*,Rank,Club_ID,Gold,Big_Silver,Small_Silver,Bronze,Points]\nTable player, columns = [*,Player_ID,Sponsor_name,Player_name,Gender,Residence,Occupation,Votes,Rank]\nTable player_coach, columns = [*,Player_ID,Coach_ID,Starting_year]\nForeign_keys = [coach.Club_ID = club.Club_ID,player_coach.Coach_ID = coach.Coach_ID,player_coach.Player_ID = player.Player_ID,match_result.Club_ID = club.Club_ID]", "output": "CREATE TABLE club (Club_ID number, Club_name text, Region text, Start_year number); CREATE TABLE coach (Coach_ID number, Coach_name text, Gender text, Club_ID number, Rank number); CREATE TABLE match_result (Rank number, Club_ID number, Gold number, Big_Silver number, Small_Silver number, Bronze number, Points number); CREATE TABLE player (Player_ID number, Sponsor_name text, Player_name text, Gender text, Residence text, Occupation text, Votes number, Rank text); CREATE TABLE player_coach (Player_ID number, Coach_ID number, Starting_year number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"gymnast\"\nTable gymnast, columns = [*,Gymnast_ID,Floor_Exercise_Points,Pommel_Horse_Points,Rings_Points,Vault_Points,Parallel_Bars_Points,Horizontal_Bar_Points,Total_Points]\nTable people, columns = [*,People_ID,Name,Age,Height,Hometown]\nForeign_keys = [gymnast.Gymnast_ID = people.People_ID]", "output": "CREATE TABLE gymnast (Gymnast_ID number, Floor_Exercise_Points number, Pommel_Horse_Points number, Rings_Points number, Vault_Points number, Parallel_Bars_Points number, Horizontal_Bar_Points number, Total_Points number); CREATE TABLE people (People_ID number, Name text, Age number, Height number, Hometown text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"small_bank_1\"\nTable ACCOUNTS, columns = [*,custid,name]\nTable CHECKING, columns = [*,custid,balance]\nTable SAVINGS, columns = [*,custid,balance]\nForeign_keys = [SAVINGS.custid = ACCOUNTS.custid,CHECKING.custid = ACCOUNTS.custid]", "output": "CREATE TABLE ACCOUNTS (custid number, name text); CREATE TABLE CHECKING (custid number, balance number); CREATE TABLE SAVINGS (custid number, balance number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"browser_web\"\nTable Web_client_accelerator, columns = [*,id,name,Operating_system,Client,Connection]\nTable accelerator_compatible_browser, columns = [*,accelerator_id,browser_id,compatible_since_year]\nTable browser, columns = [*,id,name,market_share]\nForeign_keys = [accelerator_compatible_browser.browser_id = browser.id,accelerator_compatible_browser.accelerator_id = Web_client_accelerator.id]", "output": "CREATE TABLE Web_client_accelerator (id number, name text, Operating_system text, Client text, Connection text); CREATE TABLE accelerator_compatible_browser (accelerator_id number, browser_id number, compatible_since_year number); CREATE TABLE browser (id number, name text, market_share number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"wrestler\"\nTable Elimination, columns = [*,Elimination_ID,Wrestler_ID,Team,Eliminated_By,Elimination_Move,Time]\nTable wrestler, columns = [*,Wrestler_ID,Name,Reign,Days_held,Location,Event]\nForeign_keys = [Elimination.Wrestler_ID = wrestler.Wrestler_ID]", "output": "CREATE TABLE Elimination (Elimination_ID text, Wrestler_ID text, Team text, Eliminated_By text, Elimination_Move text, Time text); CREATE TABLE wrestler (Wrestler_ID number, Name text, Reign text, Days_held text, Location text, Event text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"school_finance\"\nTable School, columns = [*,School_id,School_name,Location,Mascot,Enrollment,IHSAA_Class,IHSAA_Football_Class,County]\nTable budget, columns = [*,School_id,Year,Budgeted,total_budget_percent_budgeted,Invested,total_budget_percent_invested,Budget_invested_percent]\nTable endowment, columns = [*,endowment_id,School_id,donator_name,amount]\nForeign_keys = [budget.School_id = School.School_id,endowment.School_id = School.School_id]", "output": "CREATE TABLE School (School_id text, School_name text, Location text, Mascot text, Enrollment number, IHSAA_Class text, IHSAA_Football_Class text, County text); CREATE TABLE budget (School_id number, Year number, Budgeted number, total_budget_percent_budgeted number, Invested number, total_budget_percent_invested number, Budget_invested_percent text); CREATE TABLE endowment (endowment_id number, School_id number, donator_name text, amount number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"protein_institute\"\nTable Institution, columns = [*,Institution_id,Institution,Location,Founded,Type,Enrollment,Team,Primary_Conference,building_id]\nTable building, columns = [*,building_id,Name,Street_address,Years_as_tallest,Height_feet,Floors]\nTable protein, columns = [*,common_name,protein_name,divergence_from_human_lineage,accession_number,sequence_length,sequence_identity_to_human_protein,Institution_id]\nForeign_keys = [Institution.building_id = building.building_id,protein.Institution_id = Institution.Institution_id]", "output": "CREATE TABLE Institution (Institution_id text, Institution text, Location text, Founded number, Type text, Enrollment number, Team text, Primary_Conference text, building_id text); CREATE TABLE building (building_id text, Name text, Street_address text, Years_as_tallest text, Height_feet number, Floors number); CREATE TABLE protein (common_name text, protein_name text, divergence_from_human_lineage number, accession_number text, sequence_length number, sequence_identity_to_human_protein text, Institution_id text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"cinema\"\nTable cinema, columns = [*,Cinema_ID,Name,Openning_year,Capacity,Location]\nTable film, columns = [*,Film_ID,Rank_in_series,Number_in_season,Title,Directed_by,Original_air_date,Production_code]\nTable schedule, columns = [*,Cinema_ID,Film_ID,Date,Show_times_per_day,Price]\nForeign_keys = [schedule.Cinema_ID = cinema.Cinema_ID,schedule.Film_ID = film.Film_ID]", "output": "CREATE TABLE cinema (Cinema_ID number, Name text, Openning_year number, Capacity number, Location text); CREATE TABLE film (Film_ID number, Rank_in_series number, Number_in_season number, Title text, Directed_by text, Original_air_date text, Production_code text); CREATE TABLE schedule (Cinema_ID number, Film_ID number, Date text, Show_times_per_day number, Price number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"products_for_hire\"\nTable Bookings, columns = [*,booking_id,customer_id,booking_status_code,returned_damaged_yn,booking_start_date,booking_end_date,count_hired,amount_payable,amount_of_discount,amount_outstanding,amount_of_refund]\nTable Customers, columns = [*,customer_id,coupon_id,good_or_bad_customer,first_name,last_name,gender_mf,date_became_customer,date_last_hire]\nTable Discount_Coupons, columns = [*,coupon_id,date_issued,coupon_amount]\nTable Payments, columns = [*,payment_id,booking_id,customer_id,payment_type_code,amount_paid_in_full_yn,payment_date,amount_due,amount_paid]\nTable Products_Booked, columns = [*,booking_id,product_id,returned_yn,returned_late_yn,booked_count,booked_amount]\nTable Products_for_Hire, columns = [*,product_id,product_type_code,daily_hire_cost,product_name,product_description]\nTable View_Product_Availability, columns = [*,product_id,booking_id,status_date,available_yn]\nForeign_keys = [Customers.coupon_id = Discount_Coupons.coupon_id,Bookings.customer_id = Customers.customer_id,Payments.customer_id = Customers.customer_id,Payments.booking_id = Bookings.booking_id,Products_Booked.product_id = Products_for_Hire.product_id,Products_Booked.booking_id = Bookings.booking_id,View_Product_Availability.product_id = Products_for_Hire.product_id,View_Product_Availability.booking_id = Bookings.booking_id]", "output": "CREATE TABLE Bookings (booking_id number, customer_id number, booking_status_code text, returned_damaged_yn text, booking_start_date time, booking_end_date time, count_hired text, amount_payable number, amount_of_discount number, amount_outstanding number, amount_of_refund number); CREATE TABLE Customers (customer_id number, coupon_id number, good_or_bad_customer text, first_name text, last_name text, gender_mf text, date_became_customer time, date_last_hire time); CREATE TABLE Discount_Coupons (coupon_id number, date_issued time, coupon_amount number); CREATE TABLE Payments (payment_id number, booking_id number, customer_id number, payment_type_code text, amount_paid_in_full_yn text, payment_date time, amount_due number, amount_paid number); CREATE TABLE Products_Booked (booking_id number, product_id number, returned_yn text, returned_late_yn text, booked_count number, booked_amount number); CREATE TABLE Products_for_Hire (product_id number, product_type_code text, daily_hire_cost number, product_name text, product_description text); CREATE TABLE View_Product_Availability (product_id number, booking_id number, status_date time, available_yn text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"phone_market\"\nTable market, columns = [*,Market_ID,District,Num_of_employees,Num_of_shops,Ranking]\nTable phone, columns = [*,Name,Phone_ID,Memory_in_G,Carrier,Price]\nTable phone_market, columns = [*,Market_ID,Phone_ID,Num_of_stock]\nForeign_keys = [phone_market.Phone_ID = phone.Phone_ID,phone_market.Market_ID = market.Market_ID]", "output": "CREATE TABLE market (Market_ID number, District text, Num_of_employees number, Num_of_shops number, Ranking number); CREATE TABLE phone (Name text, Phone_ID number, Memory_in_G number, Carrier text, Price number); CREATE TABLE phone_market (Market_ID number, Phone_ID text, Num_of_stock number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"gas_company\"\nTable company, columns = [*,Company_ID,Rank,Company,Headquarters,Main_Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value]\nTable gas_station, columns = [*,Station_ID,Open_Year,Location,Manager_Name,Vice_Manager_Name,Representative_Name]\nTable station_company, columns = [*,Station_ID,Company_ID,Rank_of_the_Year]\nForeign_keys = [station_company.Company_ID = company.Company_ID,station_company.Station_ID = gas_station.Station_ID]", "output": "CREATE TABLE company (Company_ID number, Rank number, Company text, Headquarters text, Main_Industry text, Sales_billion number, Profits_billion number, Assets_billion number, Market_Value number); CREATE TABLE gas_station (Station_ID number, Open_Year number, Location text, Manager_Name text, Vice_Manager_Name text, Representative_Name text); CREATE TABLE station_company (Station_ID number, Company_ID number, Rank_of_the_Year number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"party_people\"\nTable member, columns = [*,Member_ID,Member_Name,Party_ID,In_office]\nTable party, columns = [*,Party_ID,Minister,Took_office,Left_office,Region_ID,Party_name]\nTable party_events, columns = [*,Event_ID,Event_Name,Party_ID,Member_in_charge_ID]\nTable region, columns = [*,Region_ID,Region_name,Date,Label,Format,Catalogue]\nForeign_keys = [party.Region_ID = region.Region_ID,member.Party_ID = party.Party_ID,party_events.Member_in_charge_ID = member.Member_ID,party_events.Party_ID = party.Party_ID]", "output": "CREATE TABLE member (Member_ID number, Member_Name text, Party_ID text, In_office text); CREATE TABLE party (Party_ID number, Minister text, Took_office text, Left_office text, Region_ID number, Party_name text); CREATE TABLE party_events (Event_ID number, Event_Name text, Party_ID number, Member_in_charge_ID number); CREATE TABLE region (Region_ID number, Region_name text, Date text, Label text, Format text, Catalogue text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"pilot_record\"\nTable aircraft, columns = [*,Aircraft_ID,Order_Year,Manufacturer,Model,Fleet_Series,Powertrain,Fuel_Propulsion]\nTable pilot, columns = [*,Pilot_ID,Pilot_name,Rank,Age,Nationality,Position,Join_Year,Team]\nTable pilot_record, columns = [*,Record_ID,Pilot_ID,Aircraft_ID,Date]\nForeign_keys = [pilot_record.Aircraft_ID = aircraft.Aircraft_ID,pilot_record.Pilot_ID = pilot.Pilot_ID]", "output": "CREATE TABLE aircraft (Aircraft_ID number, Order_Year number, Manufacturer text, Model text, Fleet_Series text, Powertrain text, Fuel_Propulsion text); CREATE TABLE pilot (Pilot_ID number, Pilot_name text, Rank number, Age number, Nationality text, Position text, Join_Year number, Team text); CREATE TABLE pilot_record (Record_ID number, Pilot_ID number, Aircraft_ID number, Date text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"cre_Doc_Control_Systems\"\nTable Addresses, columns = [*,address_id,address_details]\nTable Circulation_History, columns = [*,document_id,draft_number,copy_number,employee_id]\nTable Document_Drafts, columns = [*,document_id,draft_number,draft_details]\nTable Documents, columns = [*,document_id,document_status_code,document_type_code,shipping_agent_code,receipt_date,receipt_number,other_details]\nTable Documents_Mailed, columns = [*,document_id,mailed_to_address_id,mailing_date]\nTable Draft_Copies, columns = [*,document_id,draft_number,copy_number]\nTable Employees, columns = [*,employee_id,role_code,employee_name,other_details]\nTable Ref_Document_Status, columns = [*,document_status_code,document_status_description]\nTable Ref_Document_Types, columns = [*,document_type_code,document_type_description]\nTable Ref_Shipping_Agents, columns = [*,shipping_agent_code,shipping_agent_name,shipping_agent_description]\nTable Roles, columns = [*,role_code,role_description]\nForeign_keys = [Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code,Documents.document_status_code = Ref_Document_Status.document_status_code,Documents.document_type_code = Ref_Document_Types.document_type_code,Employees.role_code = Roles.role_code,Document_Drafts.document_id = Documents.document_id,Draft_Copies.document_id = Document_Drafts.document_id,Draft_Copies.draft_number = Document_Drafts.draft_number,Circulation_History.employee_id = Employees.employee_id,Circulation_History.document_id = Draft_Copies.document_id,Circulation_History.draft_number = Draft_Copies.draft_number,Circulation_History.copy_number = Draft_Copies.copy_number,Documents_Mailed.mailed_to_address_id = Addresses.address_id,Documents_Mailed.document_id = Documents.document_id]", "output": "CREATE TABLE Addresses (address_id number, address_details text); CREATE TABLE Circulation_History (document_id number, draft_number number, copy_number number, employee_id number); CREATE TABLE Document_Drafts (document_id number, draft_number number, draft_details text); CREATE TABLE Documents (document_id number, document_status_code text, document_type_code text, shipping_agent_code text, receipt_date time, receipt_number text, other_details text); CREATE TABLE Documents_Mailed (document_id number, mailed_to_address_id number, mailing_date time); CREATE TABLE Draft_Copies (document_id number, draft_number number, copy_number number); CREATE TABLE Employees (employee_id number, role_code text, employee_name text, other_details text); CREATE TABLE Ref_Document_Status (document_status_code text, document_status_description text); CREATE TABLE Ref_Document_Types (document_type_code text, document_type_description text); CREATE TABLE Ref_Shipping_Agents (shipping_agent_code text, shipping_agent_name text, shipping_agent_description text); CREATE TABLE Roles (role_code text, role_description text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"company_1\"\nTable department, columns = [*,Dname,Dnumber,Mgr_ssn,Mgr_start_date]\nTable dependent, columns = [*,Essn,Dependent_name,Sex,Bdate,Relationship]\nTable dept_locations, columns = [*,Dnumber,Dlocation]\nTable employee, columns = [*,Fname,Minit,Lname,Ssn,Bdate,Address,Sex,Salary,Super_ssn,Dno]\nTable project, columns = [*,Pname,Pnumber,Plocation,Dnum]\nTable works_on, columns = [*,Essn,Pno,Hours]\nForeign_keys = ]", "output": "CREATE TABLE department (Dname text, Dnumber number, Mgr_ssn number, Mgr_start_date text); CREATE TABLE dependent (Essn number, Dependent_name text, Sex text, Bdate text, Relationship text); CREATE TABLE dept_locations (Dnumber number, Dlocation text); CREATE TABLE employee (Fname text, Minit text, Lname text, Ssn number, Bdate text, Address text, Sex text, Salary number, Super_ssn number, Dno number); CREATE TABLE project (Pname text, Pnumber number, Plocation text, Dnum number); CREATE TABLE works_on (Essn number, Pno number, Hours number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"local_govt_in_alabama\"\nTable Events, columns = [*,Event_ID,Service_ID,Event_Details]\nTable Participants, columns = [*,Participant_ID,Participant_Type_Code,Participant_Details]\nTable Participants_in_Events, columns = [*,Event_ID,Participant_ID]\nTable Services, columns = [*,Service_ID,Service_Type_Code]\nForeign_keys = [Events.Service_ID = Services.Service_ID,Participants_in_Events.Event_ID = Events.Event_ID,Participants_in_Events.Participant_ID = Participants.Participant_ID]", "output": "CREATE TABLE Events (Event_ID number, Service_ID number, Event_Details text); CREATE TABLE Participants (Participant_ID number, Participant_Type_Code text, Participant_Details text); CREATE TABLE Participants_in_Events (Event_ID number, Participant_ID number); CREATE TABLE Services (Service_ID number, Service_Type_Code text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"formula_1\"\nTable circuits, columns = [*,circuitId,circuitRef,name,location,country,lat,lng,alt,url]\nTable constructorResults, columns = [*,constructorResultsId,raceId,constructorId,points,status]\nTable constructorStandings, columns = [*,constructorStandingsId,raceId,constructorId,points,position,positionText,wins]\nTable constructors, columns = [*,constructorId,constructorRef,name,nationality,url]\nTable driverStandings, columns = [*,driverStandingsId,raceId,driverId,points,position,positionText,wins]\nTable drivers, columns = [*,driverId,driverRef,number,code,forename,surname,dob,nationality,url]\nTable lapTimes, columns = [*,raceId,driverId,lap,position,time,milliseconds]\nTable pitStops, columns = [*,raceId,driverId,stop,lap,time,duration,milliseconds]\nTable qualifying, columns = [*,qualifyId,raceId,driverId,constructorId,number,position,q1,q2,q3]\nTable races, columns = [*,raceId,year,round,circuitId,name,date,time,url]\nTable results, columns = [*,resultId,raceId,driverId,constructorId,number,grid,position,positionText,positionOrder,points,laps,time,milliseconds,fastestLap,rank,fastestLapTime,fastestLapSpeed,statusId]\nTable seasons, columns = [*,year,url]\nTable status, columns = [*,statusId,status]\nForeign_keys = [races.circuitId = circuits.circuitId,constructorStandings.raceId = races.raceId,constructorStandings.constructorId = constructors.constructorId,results.driverId = drivers.driverId,results.raceId = races.raceId,results.constructorId = constructors.constructorId,driverStandings.driverId = drivers.driverId,driverStandings.raceId = races.raceId,constructorResults.raceId = races.raceId,constructorResults.constructorId = constructors.constructorId,qualifying.driverId = drivers.driverId,qualifying.raceId = races.raceId,qualifying.constructorId = constructors.constructorId,pitStops.driverId = drivers.driverId,pitStops.raceId = races.raceId,lapTimes.driverId = drivers.driverId,lapTimes.raceId = races.raceId]", "output": "CREATE TABLE circuits (circuitId number, circuitRef text, name text, location text, country text, lat number, lng number, alt number, url text); CREATE TABLE constructorResults (constructorResultsId number, raceId number, constructorId number, points number, status number); CREATE TABLE constructorStandings (constructorStandingsId number, raceId number, constructorId number, points number, position number, positionText text, wins number); CREATE TABLE constructors (constructorId number, constructorRef text, name text, nationality text, url text); CREATE TABLE driverStandings (driverStandingsId number, raceId number, driverId number, points number, position number, positionText text, wins number); CREATE TABLE drivers (driverId number, driverRef text, number number, code text, forename text, surname text, dob text, nationality text, url text); CREATE TABLE lapTimes (raceId number, driverId number, lap number, position number, time text, milliseconds number); CREATE TABLE pitStops (raceId number, driverId number, stop number, lap number, time text, duration text, milliseconds number); CREATE TABLE qualifying (qualifyId number, raceId number, driverId number, constructorId number, number number, position number, q1 text, q2 text, q3 text); CREATE TABLE races (raceId number, year number, round number, circuitId number, name text, date text, time text, url text); CREATE TABLE results (resultId number, raceId number, driverId number, constructorId number, number number, grid number, position number, positionText text, positionOrder number, points number, laps number, time text, milliseconds number, fastestLap number, rank number, fastestLapTime text, fastestLapSpeed text, statusId number); CREATE TABLE seasons (year number, url text); CREATE TABLE status (statusId number, status text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"machine_repair\"\nTable machine, columns = [*,Machine_ID,Making_Year,Class,Team,Machine_series,value_points,quality_rank]\nTable repair, columns = [*,repair_ID,name,Launch_Date,Notes]\nTable repair_assignment, columns = [*,technician_id,repair_ID,Machine_ID]\nTable technician, columns = [*,technician_id,Name,Team,Starting_Year,Age]\nForeign_keys = [repair_assignment.Machine_ID = machine.Machine_ID,repair_assignment.repair_ID = repair.repair_ID,repair_assignment.technician_id = technician.technician_id]", "output": "CREATE TABLE machine (Machine_ID number, Making_Year number, Class text, Team text, Machine_series text, value_points number, quality_rank number); CREATE TABLE repair (repair_ID number, name text, Launch_Date text, Notes text); CREATE TABLE repair_assignment (technician_id number, repair_ID number, Machine_ID number); CREATE TABLE technician (technician_id number, Name text, Team text, Starting_Year number, Age number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"entrepreneur\"\nTable entrepreneur, columns = [*,Entrepreneur_ID,People_ID,Company,Money_Requested,Investor]\nTable people, columns = [*,People_ID,Name,Height,Weight,Date_of_Birth]\nForeign_keys = [entrepreneur.People_ID = people.People_ID]", "output": "CREATE TABLE entrepreneur (Entrepreneur_ID number, People_ID number, Company text, Money_Requested number, Investor text); CREATE TABLE people (People_ID number, Name text, Height number, Weight number, Date_of_Birth text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"perpetrator\"\nTable people, columns = [*,People_ID,Name,Height,Weight,Home Town]\nTable perpetrator, columns = [*,Perpetrator_ID,People_ID,Date,Year,Location,Country,Killed,Injured]\nForeign_keys = [perpetrator.People_ID = people.People_ID]", "output": "CREATE TABLE people (People_ID number, Name text, Height number, Weight number, \"Home Town\" text); CREATE TABLE perpetrator (Perpetrator_ID number, People_ID number, Date text, Year number, Location text, Country text, Killed number, Injured number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"csu_1\"\nTable Campuses, columns = [*,Id,Campus,Location,County,Year]\nTable csu_fees, columns = [*,Campus,Year,CampusFee]\nTable degrees, columns = [*,Year,Campus,Degrees]\nTable discipline_enrollments, columns = [*,Campus,Discipline,Year,Undergraduate,Graduate]\nTable enrollments, columns = [*,Campus,Year,TotalEnrollment_AY,FTE_AY]\nTable faculty, columns = [*,Campus,Year,Faculty]\nForeign_keys = [csu_fees.Campus = Campuses.Id,degrees.Campus = Campuses.Id,discipline_enrollments.Campus = Campuses.Id,enrollments.Campus = Campuses.Id,faculty.Campus = Campuses.Id]", "output": "CREATE TABLE Campuses (Id number, Campus text, Location text, County text, Year number); CREATE TABLE csu_fees (Campus number, Year number, CampusFee number); CREATE TABLE degrees (Year number, Campus number, Degrees number); CREATE TABLE discipline_enrollments (Campus number, Discipline number, Year number, Undergraduate number, Graduate number); CREATE TABLE enrollments (Campus number, Year number, TotalEnrollment_AY number, FTE_AY number); CREATE TABLE faculty (Campus number, Year number, Faculty number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"candidate_poll\"\nTable candidate, columns = [*,Candidate_ID,People_ID,Poll_Source,Date,Support_rate,Consider_rate,Oppose_rate,Unsure_rate]\nTable people, columns = [*,People_ID,Sex,Name,Date_of_Birth,Height,Weight]\nForeign_keys = [candidate.People_ID = people.People_ID]", "output": "CREATE TABLE candidate (Candidate_ID number, People_ID number, Poll_Source text, Date text, Support_rate number, Consider_rate number, Oppose_rate number, Unsure_rate number); CREATE TABLE people (People_ID number, Sex text, Name text, Date_of_Birth text, Height number, Weight number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"movie_1\"\nTable Movie, columns = [*,mID,title,year,director]\nTable Rating, columns = [*,rID,mID,stars,ratingDate]\nTable Reviewer, columns = [*,rID,name]\nForeign_keys = [Rating.rID = Reviewer.rID,Rating.mID = Movie.mID]", "output": "CREATE TABLE Movie (mID number, title text, year number, director text); CREATE TABLE Rating (rID number, mID number, stars number, ratingDate time); CREATE TABLE Reviewer (rID number, name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"county_public_safety\"\nTable city, columns = [*,City_ID,County_ID,Name,White,Black,Amerindian,Asian,Multiracial,Hispanic]\nTable county_public_safety, columns = [*,County_ID,Name,Population,Police_officers,Residents_per_officer,Case_burden,Crime_rate,Police_force,Location]\nForeign_keys = [city.County_ID = county_public_safety.County_ID]", "output": "CREATE TABLE city (City_ID number, County_ID number, Name text, White number, Black number, Amerindian number, Asian number, Multiracial number, Hispanic number); CREATE TABLE county_public_safety (County_ID number, Name text, Population number, Police_officers number, Residents_per_officer number, Case_burden number, Crime_rate number, Police_force text, Location text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"inn_1\"\nTable Reservations, columns = [*,Code,Room,CheckIn,CheckOut,Rate,LastName,FirstName,Adults,Kids]\nTable Rooms, columns = [*,RoomId,roomName,beds,bedType,maxOccupancy,basePrice,decor]\nForeign_keys = [Reservations.Room = Rooms.RoomId]", "output": "CREATE TABLE Reservations (Code number, Room text, CheckIn text, CheckOut text, Rate number, LastName text, FirstName text, Adults number, Kids number); CREATE TABLE Rooms (RoomId text, roomName text, beds number, bedType text, maxOccupancy number, basePrice number, decor text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"local_govt_mdm\"\nTable Benefits_Overpayments, columns = [*,council_tax_id,cmi_cross_ref_id]\nTable Business_Rates, columns = [*,business_rates_id,cmi_cross_ref_id]\nTable CMI_Cross_References, columns = [*,cmi_cross_ref_id,master_customer_id,source_system_code]\nTable Council_Tax, columns = [*,council_tax_id,cmi_cross_ref_id]\nTable Customer_Master_Index, columns = [*,master_customer_id,cmi_details]\nTable Electoral_Register, columns = [*,electoral_register_id,cmi_cross_ref_id]\nTable Parking_Fines, columns = [*,council_tax_id,cmi_cross_ref_id]\nTable Rent_Arrears, columns = [*,council_tax_id,cmi_cross_ref_id]\nForeign_keys = [CMI_Cross_References.master_customer_id = Customer_Master_Index.master_customer_id,Council_Tax.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id,Business_Rates.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id,Benefits_Overpayments.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id,Parking_Fines.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id,Rent_Arrears.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id,Electoral_Register.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id]", "output": "CREATE TABLE Benefits_Overpayments (council_tax_id number, cmi_cross_ref_id number); CREATE TABLE Business_Rates (business_rates_id number, cmi_cross_ref_id number); CREATE TABLE CMI_Cross_References (cmi_cross_ref_id number, master_customer_id number, source_system_code text); CREATE TABLE Council_Tax (council_tax_id number, cmi_cross_ref_id number); CREATE TABLE Customer_Master_Index (master_customer_id number, cmi_details text); CREATE TABLE Electoral_Register (electoral_register_id number, cmi_cross_ref_id number); CREATE TABLE Parking_Fines (council_tax_id number, cmi_cross_ref_id number); CREATE TABLE Rent_Arrears (council_tax_id number, cmi_cross_ref_id number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"party_host\"\nTable host, columns = [*,Host_ID,Name,Nationality,Age]\nTable party, columns = [*,Party_ID,Party_Theme,Location,First_year,Last_year,Number_of_hosts]\nTable party_host, columns = [*,Party_ID,Host_ID,Is_Main_in_Charge]\nForeign_keys = [party_host.Party_ID = party.Party_ID,party_host.Host_ID = host.Host_ID]", "output": "CREATE TABLE host (Host_ID number, Name text, Nationality text, Age text); CREATE TABLE party (Party_ID number, Party_Theme text, Location text, First_year text, Last_year text, Number_of_hosts number); CREATE TABLE party_host (Party_ID number, Host_ID number, Is_Main_in_Charge others)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"storm_record\"\nTable affected_region, columns = [*,Region_id,Storm_ID,Number_city_affected]\nTable region, columns = [*,Region_id,Region_code,Region_name]\nTable storm, columns = [*,Storm_ID,Name,Dates_active,Max_speed,Damage_millions_USD,Number_Deaths]\nForeign_keys = [affected_region.Storm_ID = storm.Storm_ID,affected_region.Region_id = region.Region_id]", "output": "CREATE TABLE affected_region (Region_id number, Storm_ID number, Number_city_affected number); CREATE TABLE region (Region_id number, Region_code text, Region_name text); CREATE TABLE storm (Storm_ID number, Name text, Dates_active text, Max_speed number, Damage_millions_USD number, Number_Deaths number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"election\"\nTable county, columns = [*,County_Id,County_name,Population,Zip_code]\nTable election, columns = [*,Election_ID,Counties_Represented,District,Delegate,Party,First_Elected,Committee]\nTable party, columns = [*,Party_ID,Year,Party,Governor,Lieutenant_Governor,Comptroller,Attorney_General,US_Senate]\nForeign_keys = [election.District = county.County_Id,election.Party = party.Party_ID]", "output": "CREATE TABLE county (County_Id number, County_name text, Population number, Zip_code text); CREATE TABLE election (Election_ID number, Counties_Represented text, District number, Delegate text, Party number, First_Elected number, Committee text); CREATE TABLE party (Party_ID number, Year number, Party text, Governor text, Lieutenant_Governor text, Comptroller text, Attorney_General text, US_Senate text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"news_report\"\nTable event, columns = [*,Event_ID,Date,Venue,Name,Event_Attendance]\nTable journalist, columns = [*,journalist_ID,Name,Nationality,Age,Years_working]\nTable news_report, columns = [*,journalist_ID,Event_ID,Work_Type]\nForeign_keys = [news_report.Event_ID = event.Event_ID,news_report.journalist_ID = journalist.journalist_ID]", "output": "CREATE TABLE event (Event_ID number, Date text, Venue text, Name text, Event_Attendance number); CREATE TABLE journalist (journalist_ID number, Name text, Nationality text, Age text, Years_working number); CREATE TABLE news_report (journalist_ID number, Event_ID number, Work_Type text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"restaurant_1\"\nTable Restaurant, columns = [*,ResID,ResName,Address,Rating]\nTable Restaurant_Type, columns = [*,ResTypeID,ResTypeName,ResTypeDescription]\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nTable Type_Of_Restaurant, columns = [*,ResID,ResTypeID]\nTable Visits_Restaurant, columns = [*,StuID,ResID,Time,Spent]\nForeign_keys = [Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID,Type_Of_Restaurant.ResID = Restaurant.ResID,Visits_Restaurant.ResID = Restaurant.ResID,Visits_Restaurant.StuID = Student.StuID]", "output": "CREATE TABLE Restaurant (ResID number, ResName text, Address text, Rating number); CREATE TABLE Restaurant_Type (ResTypeID number, ResTypeName text, ResTypeDescription text); CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text); CREATE TABLE Type_Of_Restaurant (ResID number, ResTypeID number); CREATE TABLE Visits_Restaurant (StuID number, ResID number, Time time, Spent number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"customer_deliveries\"\nTable Actual_Order_Products, columns = [*,actual_order_id,product_id]\nTable Actual_Orders, columns = [*,actual_order_id,order_status_code,regular_order_id,actual_order_date]\nTable Addresses, columns = [*,address_id,address_details,city,zip_postcode,state_province_county,country]\nTable Customer_Addresses, columns = [*,customer_id,address_id,date_from,address_type,date_to]\nTable Customers, columns = [*,customer_id,payment_method,customer_name,customer_phone,customer_email,date_became_customer]\nTable Delivery_Route_Locations, columns = [*,location_code,route_id,location_address_id,location_name]\nTable Delivery_Routes, columns = [*,route_id,route_name,other_route_details]\nTable Employees, columns = [*,employee_id,employee_address_id,employee_name,employee_phone]\nTable Order_Deliveries, columns = [*,location_code,actual_order_id,delivery_status_code,driver_employee_id,truck_id,delivery_date]\nTable Products, columns = [*,product_id,product_name,product_price,product_description]\nTable Regular_Order_Products, columns = [*,regular_order_id,product_id]\nTable Regular_Orders, columns = [*,regular_order_id,distributer_id]\nTable Trucks, columns = [*,truck_id,truck_licence_number,truck_details]\nForeign_keys = [Regular_Orders.distributer_id = Customers.customer_id,Regular_Order_Products.regular_order_id = Regular_Orders.regular_order_id,Regular_Order_Products.product_id = Products.product_id,Actual_Orders.regular_order_id = Regular_Orders.regular_order_id,Actual_Order_Products.actual_order_id = Actual_Orders.actual_order_id,Actual_Order_Products.product_id = Products.product_id,Customer_Addresses.address_id = Addresses.address_id,Customer_Addresses.customer_id = Customers.customer_id,Delivery_Route_Locations.route_id = Delivery_Routes.route_id,Delivery_Route_Locations.location_address_id = Addresses.address_id,Employees.employee_address_id = Addresses.address_id,Order_Deliveries.driver_employee_id = Employees.employee_id,Order_Deliveries.location_code = Delivery_Route_Locations.location_code,Order_Deliveries.actual_order_id = Actual_Orders.actual_order_id,Order_Deliveries.truck_id = Trucks.truck_id]", "output": "CREATE TABLE Actual_Order_Products (actual_order_id number, product_id number); CREATE TABLE Actual_Orders (actual_order_id number, order_status_code text, regular_order_id number, actual_order_date time); CREATE TABLE Addresses (address_id number, address_details text, city text, zip_postcode text, state_province_county text, country text); CREATE TABLE Customer_Addresses (customer_id number, address_id number, date_from time, address_type text, date_to time); CREATE TABLE Customers (customer_id number, payment_method text, customer_name text, customer_phone text, customer_email text, date_became_customer time); CREATE TABLE Delivery_Route_Locations (location_code text, route_id number, location_address_id number, location_name text); CREATE TABLE Delivery_Routes (route_id number, route_name text, other_route_details text); CREATE TABLE Employees (employee_id number, employee_address_id number, employee_name text, employee_phone text); CREATE TABLE Order_Deliveries (location_code text, actual_order_id number, delivery_status_code text, driver_employee_id number, truck_id number, delivery_date time); CREATE TABLE Products (product_id number, product_name text, product_price number, product_description text); CREATE TABLE Regular_Order_Products (regular_order_id number, product_id number); CREATE TABLE Regular_Orders (regular_order_id number, distributer_id number); CREATE TABLE Trucks (truck_id number, truck_licence_number text, truck_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"icfp_1\"\nTable Authors, columns = [*,authID,lname,fname]\nTable Authorship, columns = [*,authID,instID,paperID,authOrder]\nTable Inst, columns = [*,instID,name,country]\nTable Papers, columns = [*,paperID,title]\nForeign_keys = [Authorship.paperID = Papers.paperID,Authorship.instID = Inst.instID,Authorship.authID = Authors.authID]", "output": "CREATE TABLE Authors (authID number, lname text, fname text); CREATE TABLE Authorship (authID number, instID number, paperID number, authOrder number); CREATE TABLE Inst (instID number, name text, country text); CREATE TABLE Papers (paperID number, title text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"sakila_1\"\nTable actor, columns = [*,actor_id,first_name,last_name,last_update]\nTable address, columns = [*,address_id,address,address2,district,city_id,postal_code,phone,last_update]\nTable category, columns = [*,category_id,name,last_update]\nTable city, columns = [*,city_id,city,country_id,last_update]\nTable country, columns = [*,country_id,country,last_update]\nTable customer, columns = [*,customer_id,store_id,first_name,last_name,email,address_id,active,create_date,last_update]\nTable film, columns = [*,film_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update]\nTable film_actor, columns = [*,actor_id,film_id,last_update]\nTable film_category, columns = [*,film_id,category_id,last_update]\nTable film_text, columns = [*,film_id,title,description]\nTable inventory, columns = [*,inventory_id,film_id,store_id,last_update]\nTable language, columns = [*,language_id,name,last_update]\nTable payment, columns = [*,payment_id,customer_id,staff_id,rental_id,amount,payment_date,last_update]\nTable rental, columns = [*,rental_id,rental_date,inventory_id,customer_id,return_date,staff_id,last_update]\nTable staff, columns = [*,staff_id,first_name,last_name,address_id,picture,email,store_id,active,username,password,last_update]\nTable store, columns = [*,store_id,manager_staff_id,address_id,last_update]\nForeign_keys = [address.city_id = city.city_id,city.country_id = country.country_id,customer.store_id = store.store_id,customer.address_id = address.address_id,film.original_language_id = language.language_id,film.language_id = language.language_id,film_actor.film_id = film.film_id,film_actor.actor_id = actor.actor_id,film_category.category_id = category.category_id,film_category.film_id = film.film_id,inventory.film_id = film.film_id,inventory.store_id = store.store_id,payment.staff_id = staff.staff_id,payment.customer_id = customer.customer_id,payment.rental_id = rental.rental_id,rental.customer_id = customer.customer_id,rental.inventory_id = inventory.inventory_id,rental.staff_id = staff.staff_id,staff.address_id = address.address_id,store.address_id = address.address_id,store.manager_staff_id = staff.staff_id]", "output": "CREATE TABLE actor (actor_id number, first_name text, last_name text, last_update time); CREATE TABLE address (address_id number, address text, address2 text, district text, city_id number, postal_code text, phone text, last_update time); CREATE TABLE category (category_id number, name text, last_update time); CREATE TABLE city (city_id number, city text, country_id number, last_update time); CREATE TABLE country (country_id number, country text, last_update time); CREATE TABLE customer (customer_id number, store_id number, first_name text, last_name text, email text, address_id number, active boolean, create_date time, last_update time); CREATE TABLE film (film_id number, title text, description text, release_year time, language_id number, original_language_id number, rental_duration number, rental_rate number, length number, replacement_cost number, rating text, special_features text, last_update time); CREATE TABLE film_actor (actor_id number, film_id number, last_update time); CREATE TABLE film_category (film_id number, category_id number, last_update time); CREATE TABLE film_text (film_id number, title text, description text); CREATE TABLE inventory (inventory_id number, film_id number, store_id number, last_update time); CREATE TABLE language (language_id number, name text, last_update time); CREATE TABLE payment (payment_id number, customer_id number, staff_id number, rental_id number, amount number, payment_date time, last_update time); CREATE TABLE rental (rental_id number, rental_date time, inventory_id number, customer_id number, return_date time, staff_id number, last_update time); CREATE TABLE staff (staff_id number, first_name text, last_name text, address_id number, picture others, email text, store_id number, active boolean, username text, password text, last_update time); CREATE TABLE store (store_id number, manager_staff_id number, address_id number, last_update time)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"loan_1\"\nTable bank, columns = [*,branch_ID,bname,no_of_customers,city,state]\nTable customer, columns = [*,cust_ID,cust_name,acc_type,acc_bal,no_of_loans,credit_score,branch_ID,state]\nTable loan, columns = [*,loan_ID,loan_type,cust_ID,branch_ID,amount]\nForeign_keys = [customer.branch_ID = bank.branch_ID,loan.branch_ID = bank.branch_ID]", "output": "CREATE TABLE bank (branch_ID number, bname text, no_of_customers number, city text, state text); CREATE TABLE customer (cust_ID text, cust_name text, acc_type text, acc_bal number, no_of_loans number, credit_score number, branch_ID number, state text); CREATE TABLE loan (loan_ID text, loan_type text, cust_ID text, branch_ID text, amount number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"behavior_monitoring\"\nTable Addresses, columns = [*,address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details]\nTable Assessment_Notes, columns = [*,notes_id,student_id,teacher_id,date_of_notes,text_of_notes,other_details]\nTable Behavior_Incident, columns = [*,incident_id,incident_type_code,student_id,date_incident_start,date_incident_end,incident_summary,recommendations,other_details]\nTable Detention, columns = [*,detention_id,detention_type_code,teacher_id,datetime_detention_start,datetime_detention_end,detention_summary,other_details]\nTable Ref_Address_Types, columns = [*,address_type_code,address_type_description]\nTable Ref_Detention_Type, columns = [*,detention_type_code,detention_type_description]\nTable Ref_Incident_Type, columns = [*,incident_type_code,incident_type_description]\nTable Student_Addresses, columns = [*,student_id,address_id,date_address_from,date_address_to,monthly_rental,other_details]\nTable Students, columns = [*,student_id,address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,date_first_rental,date_left_university,other_student_details]\nTable Students_in_Detention, columns = [*,student_id,detention_id,incident_id]\nTable Teachers, columns = [*,teacher_id,address_id,first_name,middle_name,last_name,gender,cell_mobile_number,email_address,other_details]\nForeign_keys = [Students.address_id = Addresses.address_id,Teachers.address_id = Addresses.address_id,Assessment_Notes.teacher_id = Teachers.teacher_id,Assessment_Notes.student_id = Students.student_id,Behavior_Incident.student_id = Students.student_id,Behavior_Incident.incident_type_code = Ref_Incident_Type.incident_type_code,Detention.teacher_id = Teachers.teacher_id,Detention.detention_type_code = Ref_Detention_Type.detention_type_code,Student_Addresses.student_id = Students.student_id,Student_Addresses.address_id = Addresses.address_id,Students_in_Detention.student_id = Students.student_id,Students_in_Detention.detention_id = Detention.detention_id,Students_in_Detention.incident_id = Behavior_Incident.incident_id]", "output": "CREATE TABLE Addresses (address_id number, line_1 text, line_2 text, line_3 text, city text, zip_postcode text, state_province_county text, country text, other_address_details text); CREATE TABLE Assessment_Notes (notes_id number, student_id number, teacher_id number, date_of_notes time, text_of_notes text, other_details text); CREATE TABLE Behavior_Incident (incident_id number, incident_type_code text, student_id number, date_incident_start time, date_incident_end time, incident_summary text, recommendations text, other_details text); CREATE TABLE Detention (detention_id number, detention_type_code text, teacher_id number, datetime_detention_start time, datetime_detention_end time, detention_summary text, other_details text); CREATE TABLE Ref_Address_Types (address_type_code text, address_type_description text); CREATE TABLE Ref_Detention_Type (detention_type_code text, detention_type_description text); CREATE TABLE Ref_Incident_Type (incident_type_code text, incident_type_description text); CREATE TABLE Student_Addresses (student_id number, address_id number, date_address_from time, date_address_to time, monthly_rental number, other_details text); CREATE TABLE Students (student_id number, address_id number, first_name text, middle_name text, last_name text, cell_mobile_number text, email_address text, date_first_rental time, date_left_university time, other_student_details text); CREATE TABLE Students_in_Detention (student_id number, detention_id number, incident_id number); CREATE TABLE Teachers (teacher_id number, address_id number, first_name text, middle_name text, last_name text, gender text, cell_mobile_number text, email_address text, other_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"assets_maintenance\"\nTable Asset_Parts, columns = [*,asset_id,part_id]\nTable Assets, columns = [*,asset_id,maintenance_contract_id,supplier_company_id,asset_details,asset_make,asset_model,asset_acquired_date,asset_disposed_date,other_asset_details]\nTable Engineer_Skills, columns = [*,engineer_id,skill_id]\nTable Engineer_Visits, columns = [*,engineer_visit_id,contact_staff_id,engineer_id,fault_log_entry_id,fault_status,visit_start_datetime,visit_end_datetime,other_visit_details]\nTable Fault_Log, columns = [*,fault_log_entry_id,asset_id,recorded_by_staff_id,fault_log_entry_datetime,fault_description,other_fault_details]\nTable Fault_Log_Parts, columns = [*,fault_log_entry_id,part_fault_id,fault_status]\nTable Maintenance_Contracts, columns = [*,maintenance_contract_id,maintenance_contract_company_id,contract_start_date,contract_end_date,other_contract_details]\nTable Maintenance_Engineers, columns = [*,engineer_id,company_id,first_name,last_name,other_details]\nTable Part_Faults, columns = [*,part_fault_id,part_id,fault_short_name,fault_description,other_fault_details]\nTable Parts, columns = [*,part_id,part_name,chargeable_yn,chargeable_amount,other_part_details]\nTable Skills, columns = [*,skill_id,skill_code,skill_description]\nTable Skills_Required_To_Fix, columns = [*,part_fault_id,skill_id]\nTable Staff, columns = [*,staff_id,staff_name,gender,other_staff_details]\nTable Third_Party_Companies, columns = [*,company_id,company_type,company_name,company_address,other_company_details]\nForeign_keys = [Maintenance_Contracts.maintenance_contract_company_id = Third_Party_Companies.company_id,Assets.supplier_company_id = Third_Party_Companies.company_id,Assets.maintenance_contract_id = Maintenance_Contracts.maintenance_contract_id,Asset_Parts.asset_id = Assets.asset_id,Asset_Parts.part_id = Parts.part_id,Maintenance_Engineers.company_id = Third_Party_Companies.company_id,Engineer_Skills.skill_id = Skills.skill_id,Engineer_Skills.engineer_id = Maintenance_Engineers.engineer_id,Fault_Log.recorded_by_staff_id = Staff.staff_id,Fault_Log.asset_id = Assets.asset_id,Engineer_Visits.contact_staff_id = Staff.staff_id,Engineer_Visits.engineer_id = Maintenance_Engineers.engineer_id,Engineer_Visits.fault_log_entry_id = Fault_Log.fault_log_entry_id,Part_Faults.part_id = Parts.part_id,Fault_Log_Parts.fault_log_entry_id = Fault_Log.fault_log_entry_id,Fault_Log_Parts.part_fault_id = Part_Faults.part_fault_id,Skills_Required_To_Fix.skill_id = Skills.skill_id,Skills_Required_To_Fix.part_fault_id = Part_Faults.part_fault_id]", "output": "CREATE TABLE Asset_Parts (asset_id number, part_id number); CREATE TABLE Assets (asset_id number, maintenance_contract_id number, supplier_company_id number, asset_details text, asset_make text, asset_model text, asset_acquired_date time, asset_disposed_date time, other_asset_details text); CREATE TABLE Engineer_Skills (engineer_id number, skill_id number); CREATE TABLE Engineer_Visits (engineer_visit_id number, contact_staff_id number, engineer_id number, fault_log_entry_id number, fault_status text, visit_start_datetime time, visit_end_datetime time, other_visit_details text); CREATE TABLE Fault_Log (fault_log_entry_id number, asset_id number, recorded_by_staff_id number, fault_log_entry_datetime time, fault_description text, other_fault_details text); CREATE TABLE Fault_Log_Parts (fault_log_entry_id number, part_fault_id number, fault_status text); CREATE TABLE Maintenance_Contracts (maintenance_contract_id number, maintenance_contract_company_id number, contract_start_date time, contract_end_date time, other_contract_details text); CREATE TABLE Maintenance_Engineers (engineer_id number, company_id number, first_name text, last_name text, other_details text); CREATE TABLE Part_Faults (part_fault_id number, part_id number, fault_short_name text, fault_description text, other_fault_details text); CREATE TABLE Parts (part_id number, part_name text, chargeable_yn text, chargeable_amount text, other_part_details text); CREATE TABLE Skills (skill_id number, skill_code text, skill_description text); CREATE TABLE Skills_Required_To_Fix (part_fault_id number, skill_id number); CREATE TABLE Staff (staff_id number, staff_name text, gender text, other_staff_details text); CREATE TABLE Third_Party_Companies (company_id number, company_type text, company_name text, company_address text, other_company_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"station_weather\"\nTable route, columns = [*,train_id,station_id]\nTable station, columns = [*,id,network_name,services,local_authority]\nTable train, columns = [*,id,train_number,name,origin,destination,time,interval]\nTable weekly_weather, columns = [*,station_id,day_of_week,high_temperature,low_temperature,precipitation,wind_speed_mph]\nForeign_keys = [route.station_id = station.id,route.train_id = train.id,weekly_weather.station_id = station.id]", "output": "CREATE TABLE route (train_id number, station_id number); CREATE TABLE station (id number, network_name text, services text, local_authority text); CREATE TABLE train (id number, train_number number, name text, origin text, destination text, time text, interval text); CREATE TABLE weekly_weather (station_id number, day_of_week text, high_temperature number, low_temperature number, precipitation number, wind_speed_mph number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"college_1\"\nTable CLASS, columns = [*,CLASS_CODE,CRS_CODE,CLASS_SECTION,CLASS_TIME,CLASS_ROOM,PROF_NUM]\nTable COURSE, columns = [*,CRS_CODE,DEPT_CODE,CRS_DESCRIPTION,CRS_CREDIT]\nTable DEPARTMENT, columns = [*,DEPT_CODE,DEPT_NAME,SCHOOL_CODE,EMP_NUM,DEPT_ADDRESS,DEPT_EXTENSION]\nTable EMPLOYEE, columns = [*,EMP_NUM,EMP_LNAME,EMP_FNAME,EMP_INITIAL,EMP_JOBCODE,EMP_HIREDATE,EMP_DOB]\nTable ENROLL, columns = [*,CLASS_CODE,STU_NUM,ENROLL_GRADE]\nTable PROFESSOR, columns = [*,EMP_NUM,DEPT_CODE,PROF_OFFICE,PROF_EXTENSION,PROF_HIGH_DEGREE]\nTable STUDENT, columns = [*,STU_NUM,STU_LNAME,STU_FNAME,STU_INIT,STU_DOB,STU_HRS,STU_CLASS,STU_GPA,STU_TRANSFER,DEPT_CODE,STU_PHONE,PROF_NUM]\nForeign_keys = [CLASS.PROF_NUM = EMPLOYEE.EMP_NUM,CLASS.CRS_CODE = COURSE.CRS_CODE,COURSE.DEPT_CODE = DEPARTMENT.DEPT_CODE,DEPARTMENT.EMP_NUM = EMPLOYEE.EMP_NUM,ENROLL.STU_NUM = STUDENT.STU_NUM,ENROLL.CLASS_CODE = CLASS.CLASS_CODE,PROFESSOR.DEPT_CODE = DEPARTMENT.DEPT_CODE,PROFESSOR.EMP_NUM = EMPLOYEE.EMP_NUM,STUDENT.DEPT_CODE = DEPARTMENT.DEPT_CODE]", "output": "CREATE TABLE CLASS (CLASS_CODE text, CRS_CODE text, CLASS_SECTION text, CLASS_TIME text, CLASS_ROOM text, PROF_NUM number); CREATE TABLE COURSE (CRS_CODE text, DEPT_CODE text, CRS_DESCRIPTION text, CRS_CREDIT number); CREATE TABLE DEPARTMENT (DEPT_CODE text, DEPT_NAME text, SCHOOL_CODE text, EMP_NUM number, DEPT_ADDRESS text, DEPT_EXTENSION text); CREATE TABLE EMPLOYEE (EMP_NUM number, EMP_LNAME text, EMP_FNAME text, EMP_INITIAL text, EMP_JOBCODE text, EMP_HIREDATE time, EMP_DOB time); CREATE TABLE ENROLL (CLASS_CODE text, STU_NUM number, ENROLL_GRADE text); CREATE TABLE PROFESSOR (EMP_NUM number, DEPT_CODE text, PROF_OFFICE text, PROF_EXTENSION text, PROF_HIGH_DEGREE text); CREATE TABLE STUDENT (STU_NUM number, STU_LNAME text, STU_FNAME text, STU_INIT text, STU_DOB time, STU_HRS number, STU_CLASS text, STU_GPA number, STU_TRANSFER number, DEPT_CODE text, STU_PHONE text, PROF_NUM number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"sports_competition\"\nTable club, columns = [*,Club_ID,name,Region,Start_year]\nTable club_rank, columns = [*,Rank,Club_ID,Gold,Silver,Bronze,Total]\nTable competition, columns = [*,Competition_ID,Year,Competition_type,Country]\nTable competition_result, columns = [*,Competition_ID,Club_ID_1,Club_ID_2,Score]\nTable player, columns = [*,Player_ID,name,Position,Club_ID,Apps,Tries,Goals,Points]\nForeign_keys = [club_rank.Club_ID = club.Club_ID,player.Club_ID = club.Club_ID,competition_result.Competition_ID = competition.Competition_ID,competition_result.Club_ID_2 = club.Club_ID,competition_result.Club_ID_1 = club.Club_ID]", "output": "CREATE TABLE club (Club_ID number, name text, Region text, Start_year text); CREATE TABLE club_rank (Rank number, Club_ID number, Gold number, Silver number, Bronze number, Total number); CREATE TABLE competition (Competition_ID number, Year number, Competition_type text, Country text); CREATE TABLE competition_result (Competition_ID number, Club_ID_1 number, Club_ID_2 number, Score text); CREATE TABLE player (Player_ID number, name text, Position text, Club_ID number, Apps number, Tries number, Goals text, Points number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"manufacturer\"\nTable furniture, columns = [*,Furniture_ID,Name,Num_of_Component,Market_Rate]\nTable furniture_manufacte, columns = [*,Manufacturer_ID,Furniture_ID,Price_in_Dollar]\nTable manufacturer, columns = [*,Manufacturer_ID,Open_Year,Name,Num_of_Factories,Num_of_Shops]\nForeign_keys = [furniture_manufacte.Furniture_ID = furniture.Furniture_ID,furniture_manufacte.Manufacturer_ID = manufacturer.Manufacturer_ID]", "output": "CREATE TABLE furniture (Furniture_ID number, Name text, Num_of_Component number, Market_Rate number); CREATE TABLE furniture_manufacte (Manufacturer_ID number, Furniture_ID number, Price_in_Dollar number); CREATE TABLE manufacturer (Manufacturer_ID number, Open_Year number, Name text, Num_of_Factories number, Num_of_Shops number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"hr_1\"\nTable countries, columns = [*,COUNTRY_ID,COUNTRY_NAME,REGION_ID]\nTable departments, columns = [*,DEPARTMENT_ID,DEPARTMENT_NAME,MANAGER_ID,LOCATION_ID]\nTable employees, columns = [*,EMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID]\nTable job_history, columns = [*,EMPLOYEE_ID,START_DATE,END_DATE,JOB_ID,DEPARTMENT_ID]\nTable jobs, columns = [*,JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY]\nTable locations, columns = [*,LOCATION_ID,STREET_ADDRESS,POSTAL_CODE,CITY,STATE_PROVINCE,COUNTRY_ID]\nTable regions, columns = [*,REGION_ID,REGION_NAME]\nForeign_keys = [countries.REGION_ID = regions.REGION_ID,employees.JOB_ID = jobs.JOB_ID,employees.DEPARTMENT_ID = departments.DEPARTMENT_ID,job_history.JOB_ID = jobs.JOB_ID,job_history.DEPARTMENT_ID = departments.DEPARTMENT_ID,job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID,locations.COUNTRY_ID = countries.COUNTRY_ID]", "output": "CREATE TABLE countries (COUNTRY_ID text, COUNTRY_NAME text, REGION_ID number); CREATE TABLE departments (DEPARTMENT_ID number, DEPARTMENT_NAME text, MANAGER_ID number, LOCATION_ID number); CREATE TABLE employees (EMPLOYEE_ID number, FIRST_NAME text, LAST_NAME text, EMAIL text, PHONE_NUMBER text, HIRE_DATE time, JOB_ID text, SALARY number, COMMISSION_PCT number, MANAGER_ID number, DEPARTMENT_ID number); CREATE TABLE job_history (EMPLOYEE_ID number, START_DATE time, END_DATE time, JOB_ID text, DEPARTMENT_ID number); CREATE TABLE jobs (JOB_ID text, JOB_TITLE text, MIN_SALARY number, MAX_SALARY number); CREATE TABLE locations (LOCATION_ID number, STREET_ADDRESS text, POSTAL_CODE text, CITY text, STATE_PROVINCE text, COUNTRY_ID text); CREATE TABLE regions (REGION_ID number, REGION_NAME text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"music_1\"\nTable artist, columns = [*,artist_name,country,gender,preferred_genre]\nTable files, columns = [*,f_id,artist_name,file_size,duration,formats]\nTable genre, columns = [*,g_name,rating,most_popular_in]\nTable song, columns = [*,song_name,artist_name,country,f_id,genre_is,rating,languages,releasedate,resolution]\nForeign_keys = [artist.preferred_genre = genre.g_name,files.artist_name = artist.artist_name,song.genre_is = genre.g_name,song.f_id = files.f_id,song.artist_name = artist.artist_name]", "output": "CREATE TABLE artist (artist_name text, country text, gender text, preferred_genre text); CREATE TABLE files (f_id number, artist_name text, file_size text, duration text, formats text); CREATE TABLE genre (g_name text, rating text, most_popular_in text); CREATE TABLE song (song_name text, artist_name text, country text, f_id number, genre_is text, rating number, languages text, releasedate time, resolution number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"baseball_1\"\nTable all_star, columns = [*,player_id,year,game_num,game_id,team_id,league_id,gp,starting_pos]\nTable appearances, columns = [*,year,team_id,league_id,player_id,g_all,gs,g_batting,g_defense,g_p,g_c,g_1b,g_2b,g_3b,g_ss,g_lf,g_cf,g_rf,g_of,g_dh,g_ph,g_pr]\nTable batting, columns = [*,player_id,year,stint,team_id,league_id,g,ab,r,h,double,triple,hr,rbi,sb,cs,bb,so,ibb,hbp,sh,sf,g_idp]\nTable batting_postseason, columns = [*,year,round,player_id,team_id,league_id,g,ab,r,h,double,triple,hr,rbi,sb,cs,bb,so,ibb,hbp,sh,sf,g_idp]\nTable college, columns = [*,college_id,name_full,city,state,country]\nTable fielding, columns = [*,player_id,year,stint,team_id,league_id,pos,g,gs,inn_outs,po,a,e,dp,pb,wp,sb,cs,zr]\nTable fielding_outfield, columns = [*,player_id,year,stint,glf,gcf,grf]\nTable fielding_postseason, columns = [*,player_id,year,team_id,league_id,round,pos,g,gs,inn_outs,po,a,e,dp,tp,pb,sb,cs]\nTable hall_of_fame, columns = [*,player_id,yearid,votedby,ballots,needed,votes,inducted,category,needed_note]\nTable home_game, columns = [*,year,league_id,team_id,park_id,span_first,span_last,games,openings,attendance]\nTable manager, columns = [*,player_id,year,team_id,league_id,inseason,g,w,l,rank,plyr_mgr]\nTable manager_award, columns = [*,player_id,award_id,year,league_id,tie,notes]\nTable manager_award_vote, columns = [*,award_id,year,league_id,player_id,points_won,points_max,votes_first]\nTable manager_half, columns = [*,player_id,year,team_id,league_id,inseason,half,g,w,l,rank]\nTable park, columns = [*,park_id,park_name,park_alias,city,state,country]\nTable pitching, columns = [*,player_id,year,stint,team_id,league_id,w,l,g,gs,cg,sho,sv,ipouts,h,er,hr,bb,so,baopp,era,ibb,wp,hbp,bk,bfp,gf,r,sh,sf,g_idp]\nTable pitching_postseason, columns = [*,player_id,year,round,team_id,league_id,w,l,g,gs,cg,sho,sv,ipouts,h,er,hr,bb,so,baopp,era,ibb,wp,hbp,bk,bfp,gf,r,sh,sf,g_idp]\nTable player, columns = [*,player_id,birth_year,birth_month,birth_day,birth_country,birth_state,birth_city,death_year,death_month,death_day,death_country,death_state,death_city,name_first,name_last,name_given,weight,height,bats,throws,debut,final_game,retro_id,bbref_id]\nTable player_award, columns = [*,player_id,award_id,year,league_id,tie,notes]\nTable player_award_vote, columns = [*,award_id,year,league_id,player_id,points_won,points_max,votes_first]\nTable player_college, columns = [*,player_id,college_id,year]\nTable postseason, columns = [*,year,round,team_id_winner,league_id_winner,team_id_loser,league_id_loser,wins,losses,ties]\nTable salary, columns = [*,year,team_id,league_id,player_id,salary]\nTable team, columns = [*,year,league_id,team_id,franchise_id,div_id,rank,g,ghome,w,l,div_win,wc_win,lg_win,ws_win,r,ab,h,double,triple,hr,bb,so,sb,cs,hbp,sf,ra,er,era,cg,sho,sv,ipouts,ha,hra,bba,soa,e,dp,fp,name,park,attendance,bpf,ppf,team_id_br,team_id_lahman45,team_id_retro]\nTable team_franchise, columns = [*,franchise_id,franchise_name,active,na_assoc]\nTable team_half, columns = [*,year,league_id,team_id,half,div_id,div_win,rank,g,w,l]\nForeign_keys = [all_star.player_id = player.player_id,appearances.player_id = player.player_id,appearances.team_id = team.team_id,manager_award.player_id = player.player_id,player_award.player_id = player.player_id,player_award_vote.player_id = player.player_id,batting.player_id = player.player_id,batting_postseason.team_id = team.team_id,batting_postseason.player_id = player.player_id,player_college.college_id = college.college_id,player_college.player_id = player.player_id,fielding.player_id = player.player_id,fielding_outfield.player_id = player.player_id,fielding_postseason.player_id = player.player_id,hall_of_fame.player_id = player.player_id,home_game.park_id = park.park_id,home_game.team_id = team.team_id,manager.team_id = team.team_id,manager_half.team_id = team.team_id]", "output": "CREATE TABLE all_star (player_id text, year number, game_num number, game_id text, team_id text, league_id text, gp number, starting_pos number); CREATE TABLE appearances (year number, team_id text, league_id text, player_id text, g_all number, gs number, g_batting number, g_defense number, g_p number, g_c number, g_1b number, g_2b number, g_3b number, g_ss number, g_lf number, g_cf number, g_rf number, g_of number, g_dh number, g_ph number, g_pr number); CREATE TABLE batting (player_id text, year number, stint number, team_id text, league_id text, g number, ab number, r number, h number, double number, triple number, hr number, rbi number, sb number, cs number, bb number, so number, ibb number, hbp number, sh number, sf number, g_idp number); CREATE TABLE batting_postseason (year number, round text, player_id text, team_id text, league_id text, g number, ab number, r number, h number, double number, triple number, hr number, rbi number, sb number, cs number, bb number, so number, ibb number, hbp number, sh number, sf number, g_idp number); CREATE TABLE college (college_id text, name_full text, city text, state text, country text); CREATE TABLE fielding (player_id text, year number, stint number, team_id text, league_id text, pos text, g number, gs number, inn_outs number, po number, a number, e number, dp number, pb number, wp number, sb number, cs number, zr number); CREATE TABLE fielding_outfield (player_id text, year number, stint number, glf number, gcf number, grf number); CREATE TABLE fielding_postseason (player_id text, year number, team_id text, league_id text, round text, pos text, g number, gs number, inn_outs number, po number, a number, e number, dp number, tp number, pb number, sb number, cs number); CREATE TABLE hall_of_fame (player_id text, yearid number, votedby text, ballots number, needed number, votes number, inducted text, category text, needed_note text); CREATE TABLE home_game (year number, league_id text, team_id text, park_id text, span_first text, span_last text, games number, openings number, attendance number); CREATE TABLE manager (player_id text, year number, team_id text, league_id text, inseason number, g number, w number, l number, rank number, plyr_mgr text); CREATE TABLE manager_award (player_id text, award_id text, year number, league_id text, tie text, notes number); CREATE TABLE manager_award_vote (award_id text, year number, league_id text, player_id text, points_won number, points_max number, votes_first number); CREATE TABLE manager_half (player_id text, year number, team_id text, league_id text, inseason number, half number, g number, w number, l number, rank number); CREATE TABLE park (park_id text, park_name text, park_alias text, city text, state text, country text); CREATE TABLE pitching (player_id text, year number, stint number, team_id text, league_id text, w number, l number, g number, gs number, cg number, sho number, sv number, ipouts number, h number, er number, hr number, bb number, so number, baopp number, era number, ibb number, wp number, hbp number, bk number, bfp number, gf number, r number, sh number, sf number, g_idp number); CREATE TABLE pitching_postseason (player_id text, year number, round text, team_id text, league_id text, w number, l number, g number, gs number, cg number, sho number, sv number, ipouts number, h number, er number, hr number, bb number, so number, baopp text, era number, ibb number, wp number, hbp number, bk number, bfp number, gf number, r number, sh number, sf number, g_idp number); CREATE TABLE player (player_id text, birth_year number, birth_month number, birth_day number, birth_country text, birth_state text, birth_city text, death_year number, death_month number, death_day number, death_country text, death_state text, death_city text, name_first text, name_last text, name_given text, weight number, height number, bats text, throws text, debut text, final_game text, retro_id text, bbref_id text); CREATE TABLE player_award (player_id text, award_id text, year number, league_id text, tie text, notes text); CREATE TABLE player_award_vote (award_id text, year number, league_id text, player_id text, points_won number, points_max number, votes_first number); CREATE TABLE player_college (player_id text, college_id text, year number); CREATE TABLE postseason (year number, round text, team_id_winner text, league_id_winner text, team_id_loser text, league_id_loser text, wins number, losses number, ties number); CREATE TABLE salary (year number, team_id text, league_id text, player_id text, salary number); CREATE TABLE team (year number, league_id text, team_id text, franchise_id text, div_id text, rank number, g number, ghome number, w number, l number, div_win text, wc_win text, lg_win text, ws_win text, r number, ab number, h number, double number, triple number, hr number, bb number, so number, sb number, cs number, hbp number, sf number, ra number, er number, era number, cg number, sho number, sv number, ipouts number, ha number, hra number, bba number, soa number, e number, dp number, fp number, name text, park text, attendance number, bpf number, ppf number, team_id_br text, team_id_lahman45 text, team_id_retro text); CREATE TABLE team_franchise (franchise_id text, franchise_name text, active text, na_assoc text); CREATE TABLE team_half (year number, league_id text, team_id text, half number, div_id text, div_win text, rank number, g number, w number, l number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"mountain_photos\"\nTable camera_lens, columns = [*,id,brand,name,focal_length_mm,max_aperture]\nTable mountain, columns = [*,id,name,Height,Prominence,Range,Country]\nTable photos, columns = [*,id,camera_lens_id,mountain_id,color,name]\nForeign_keys = [photos.mountain_id = mountain.id,photos.camera_lens_id = camera_lens.id]", "output": "CREATE TABLE camera_lens (id number, brand text, name text, focal_length_mm number, max_aperture number); CREATE TABLE mountain (id number, name text, Height number, Prominence number, Range text, Country text); CREATE TABLE photos (id number, camera_lens_id number, mountain_id number, color text, name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"program_share\"\nTable broadcast, columns = [*,Channel_ID,Program_ID,Time_of_day]\nTable broadcast_share, columns = [*,Channel_ID,Program_ID,Date,Share_in_percent]\nTable channel, columns = [*,Channel_ID,Name,Owner,Share_in_percent,Rating_in_percent]\nTable program, columns = [*,Program_ID,Name,Origin,Launch,Owner]\nForeign_keys = [broadcast.Program_ID = program.Program_ID,broadcast.Channel_ID = channel.Channel_ID,broadcast_share.Program_ID = program.Program_ID,broadcast_share.Channel_ID = channel.Channel_ID]", "output": "CREATE TABLE broadcast (Channel_ID number, Program_ID number, Time_of_day text); CREATE TABLE broadcast_share (Channel_ID number, Program_ID number, Date text, Share_in_percent number); CREATE TABLE channel (Channel_ID number, Name text, Owner text, Share_in_percent number, Rating_in_percent number); CREATE TABLE program (Program_ID number, Name text, Origin text, Launch number, Owner text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"e_learning\"\nTable Course_Authors_and_Tutors, columns = [*,author_id,author_tutor_ATB,login_name,password,personal_name,middle_name,family_name,gender_mf,address_line_1]\nTable Courses, columns = [*,course_id,author_id,subject_id,course_name,course_description]\nTable Student_Course_Enrolment, columns = [*,registration_id,student_id,course_id,date_of_enrolment,date_of_completion]\nTable Student_Tests_Taken, columns = [*,registration_id,date_test_taken,test_result]\nTable Students, columns = [*,student_id,date_of_registration,date_of_latest_logon,login_name,password,personal_name,middle_name,family_name]\nTable Subjects, columns = [*,subject_id,subject_name]\nForeign_keys = [Courses.subject_id = Subjects.subject_id,Courses.author_id = Course_Authors_and_Tutors.author_id,Student_Course_Enrolment.student_id = Students.student_id,Student_Course_Enrolment.course_id = Courses.course_id,Student_Tests_Taken.registration_id = Student_Course_Enrolment.registration_id]", "output": "CREATE TABLE Course_Authors_and_Tutors (author_id number, author_tutor_ATB text, login_name text, password text, personal_name text, middle_name text, family_name text, gender_mf text, address_line_1 text); CREATE TABLE Courses (course_id number, author_id number, subject_id number, course_name text, course_description text); CREATE TABLE Student_Course_Enrolment (registration_id number, student_id number, course_id number, date_of_enrolment time, date_of_completion time); CREATE TABLE Student_Tests_Taken (registration_id number, date_test_taken time, test_result text); CREATE TABLE Students (student_id number, date_of_registration time, date_of_latest_logon time, login_name text, password text, personal_name text, middle_name text, family_name text); CREATE TABLE Subjects (subject_id number, subject_name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"insurance_policies\"\nTable Claims, columns = [*,Claim_ID,Policy_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled]\nTable Customer_Policies, columns = [*,Policy_ID,Customer_ID,Policy_Type_Code,Start_Date,End_Date]\nTable Customers, columns = [*,Customer_ID,Customer_Details]\nTable Payments, columns = [*,Payment_ID,Settlement_ID,Payment_Method_Code,Date_Payment_Made,Amount_Payment]\nTable Settlements, columns = [*,Settlement_ID,Claim_ID,Date_Claim_Made,Date_Claim_Settled,Amount_Claimed,Amount_Settled,Customer_Policy_ID]\nForeign_keys = [Customer_Policies.Customer_ID = Customers.Customer_ID,Claims.Policy_ID = Customer_Policies.Policy_ID,Settlements.Claim_ID = Claims.Claim_ID,Payments.Settlement_ID = Settlements.Settlement_ID]", "output": "CREATE TABLE Claims (Claim_ID number, Policy_ID number, Date_Claim_Made time, Date_Claim_Settled time, Amount_Claimed number, Amount_Settled number); CREATE TABLE Customer_Policies (Policy_ID number, Customer_ID number, Policy_Type_Code text, Start_Date time, End_Date time); CREATE TABLE Customers (Customer_ID number, Customer_Details text); CREATE TABLE Payments (Payment_ID number, Settlement_ID number, Payment_Method_Code text, Date_Payment_Made time, Amount_Payment number); CREATE TABLE Settlements (Settlement_ID number, Claim_ID number, Date_Claim_Made time, Date_Claim_Settled time, Amount_Claimed number, Amount_Settled number, Customer_Policy_ID number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"hospital_1\"\nTable Affiliated_With, columns = [*,Physician,Department,PrimaryAffiliation]\nTable Appointment, columns = [*,AppointmentID,Patient,PrepNurse,Physician,Start,End,ExaminationRoom]\nTable Block, columns = [*,BlockFloor,BlockCode]\nTable Department, columns = [*,DepartmentID,Name,Head]\nTable Medication, columns = [*,Code,Name,Brand,Description]\nTable Nurse, columns = [*,EmployeeID,Name,Position,Registered,SSN]\nTable On_Call, columns = [*,Nurse,BlockFloor,BlockCode,OnCallStart,OnCallEnd]\nTable Patient, columns = [*,SSN,Name,Address,Phone,InsuranceID,PCP]\nTable Physician, columns = [*,EmployeeID,Name,Position,SSN]\nTable Prescribes, columns = [*,Physician,Patient,Medication,Date,Appointment,Dose]\nTable Procedures, columns = [*,Code,Name,Cost]\nTable Room, columns = [*,RoomNumber,RoomType,BlockFloor,BlockCode,Unavailable]\nTable Stay, columns = [*,StayID,Patient,Room,StayStart,StayEnd]\nTable Trained_In, columns = [*,Physician,Treatment,CertificationDate,CertificationExpires]\nTable Undergoes, columns = [*,Patient,Procedures,Stay,DateUndergoes,Physician,AssistingNurse]\nForeign_keys = [Department.Head = Physician.EmployeeID,Affiliated_With.Department = Department.DepartmentID,Affiliated_With.Physician = Physician.EmployeeID,Trained_In.Treatment = Procedures.Code,Trained_In.Physician = Physician.EmployeeID,Patient.PCP = Physician.EmployeeID,Appointment.Physician = Physician.EmployeeID,Appointment.PrepNurse = Nurse.EmployeeID,Appointment.Patient = Patient.SSN,Prescribes.Appointment = Appointment.AppointmentID,Prescribes.Medication = Medication.Code,Prescribes.Patient = Patient.SSN,Prescribes.Physician = Physician.EmployeeID,Room.BlockFloor = Block.BlockFloor,Room.BlockCode = Block.BlockCode,On_Call.BlockFloor = Block.BlockFloor,On_Call.BlockCode = Block.BlockCode,On_Call.Nurse = Nurse.EmployeeID,Stay.Room = Room.RoomNumber,Stay.Patient = Patient.SSN,Undergoes.AssistingNurse = Nurse.EmployeeID,Undergoes.Physician = Physician.EmployeeID,Undergoes.Stay = Stay.StayID,Undergoes.Procedures = Procedures.Code,Undergoes.Patient = Patient.SSN]", "output": "CREATE TABLE Affiliated_With (Physician number, Department number, PrimaryAffiliation boolean); CREATE TABLE Appointment (AppointmentID number, Patient number, PrepNurse number, Physician number, Start time, End time, ExaminationRoom text); CREATE TABLE Block (BlockFloor number, BlockCode number); CREATE TABLE Department (DepartmentID number, Name text, Head number); CREATE TABLE Medication (Code number, Name text, Brand text, Description text); CREATE TABLE Nurse (EmployeeID number, Name text, Position text, Registered boolean, SSN number); CREATE TABLE On_Call (Nurse number, BlockFloor number, BlockCode number, OnCallStart time, OnCallEnd time); CREATE TABLE Patient (SSN number, Name text, Address text, Phone text, InsuranceID number, PCP number); CREATE TABLE Physician (EmployeeID number, Name text, Position text, SSN number); CREATE TABLE Prescribes (Physician number, Patient number, Medication number, Date time, Appointment number, Dose text); CREATE TABLE Procedures (Code number, Name text, Cost number); CREATE TABLE Room (RoomNumber number, RoomType text, BlockFloor number, BlockCode number, Unavailable boolean); CREATE TABLE Stay (StayID number, Patient number, Room number, StayStart time, StayEnd time); CREATE TABLE Trained_In (Physician number, Treatment number, CertificationDate time, CertificationExpires time); CREATE TABLE Undergoes (Patient number, Procedures number, Stay number, DateUndergoes time, Physician number, AssistingNurse number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"ship_mission\"\nTable mission, columns = [*,Mission_ID,Ship_ID,Code,Launched_Year,Location,Speed_knots,Fate]\nTable ship, columns = [*,Ship_ID,Name,Type,Nationality,Tonnage]\nForeign_keys = [mission.Ship_ID = ship.Ship_ID]", "output": "CREATE TABLE mission (Mission_ID number, Ship_ID number, Code text, Launched_Year number, Location text, Speed_knots number, Fate text); CREATE TABLE ship (Ship_ID number, Name text, Type text, Nationality text, Tonnage number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"student_1\"\nTable list, columns = [*,LastName,FirstName,Grade,Classroom]\nTable teachers, columns = [*,LastName,FirstName,Classroom]\nForeign_keys = ]", "output": "CREATE TABLE list (LastName text, FirstName text, Grade number, Classroom number); CREATE TABLE teachers (LastName text, FirstName text, Classroom number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"company_employee\"\nTable company, columns = [*,Company_ID,Name,Headquarters,Industry,Sales_in_Billion,Profits_in_Billion,Assets_in_Billion,Market_Value_in_Billion]\nTable employment, columns = [*,Company_ID,People_ID,Year_working]\nTable people, columns = [*,People_ID,Age,Name,Nationality,Graduation_College]\nForeign_keys = [employment.People_ID = people.People_ID,employment.Company_ID = company.Company_ID]", "output": "CREATE TABLE company (Company_ID number, Name text, Headquarters text, Industry text, Sales_in_Billion number, Profits_in_Billion number, Assets_in_Billion number, Market_Value_in_Billion number); CREATE TABLE employment (Company_ID number, People_ID number, Year_working number); CREATE TABLE people (People_ID number, Age number, Name text, Nationality text, Graduation_College text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"film_rank\"\nTable film, columns = [*,Film_ID,Title,Studio,Director,Gross_in_dollar]\nTable film_market_estimation, columns = [*,Estimation_ID,Low_Estimate,High_Estimate,Film_ID,Type,Market_ID,Year]\nTable market, columns = [*,Market_ID,Country,Number_cities]\nForeign_keys = [film_market_estimation.Market_ID = market.Market_ID,film_market_estimation.Film_ID = film.Film_ID]", "output": "CREATE TABLE film (Film_ID number, Title text, Studio text, Director text, Gross_in_dollar number); CREATE TABLE film_market_estimation (Estimation_ID number, Low_Estimate number, High_Estimate number, Film_ID number, Type text, Market_ID number, Year number); CREATE TABLE market (Market_ID number, Country text, Number_cities number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"cre_Doc_Tracking_DB\"\nTable All_Documents, columns = [*,Document_ID,Date_Stored,Document_Type_Code,Document_Name,Document_Description,Other_Details]\nTable Document_Locations, columns = [*,Document_ID,Location_Code,Date_in_Location_From,Date_in_Locaton_To]\nTable Documents_to_be_Destroyed, columns = [*,Document_ID,Destruction_Authorised_by_Employee_ID,Destroyed_by_Employee_ID,Planned_Destruction_Date,Actual_Destruction_Date,Other_Details]\nTable Employees, columns = [*,Employee_ID,Role_Code,Employee_Name,Gender_MFU,Date_of_Birth,Other_Details]\nTable Ref_Calendar, columns = [*,Calendar_Date,Day_Number]\nTable Ref_Document_Types, columns = [*,Document_Type_Code,Document_Type_Name,Document_Type_Description]\nTable Ref_Locations, columns = [*,Location_Code,Location_Name,Location_Description]\nTable Roles, columns = [*,Role_Code,Role_Name,Role_Description]\nForeign_keys = [All_Documents.Date_Stored = Ref_Calendar.Calendar_Date,All_Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code,Employees.Role_Code = Roles.Role_Code,Document_Locations.Document_ID = All_Documents.Document_ID,Document_Locations.Date_in_Locaton_To = Ref_Calendar.Calendar_Date,Document_Locations.Date_in_Location_From = Ref_Calendar.Calendar_Date,Document_Locations.Location_Code = Ref_Locations.Location_Code,Documents_to_be_Destroyed.Document_ID = All_Documents.Document_ID,Documents_to_be_Destroyed.Actual_Destruction_Date = Ref_Calendar.Calendar_Date,Documents_to_be_Destroyed.Planned_Destruction_Date = Ref_Calendar.Calendar_Date,Documents_to_be_Destroyed.Destruction_Authorised_by_Employee_ID = Employees.Employee_ID,Documents_to_be_Destroyed.Destroyed_by_Employee_ID = Employees.Employee_ID]", "output": "CREATE TABLE All_Documents (Document_ID number, Date_Stored time, Document_Type_Code text, Document_Name text, Document_Description text, Other_Details text); CREATE TABLE Document_Locations (Document_ID number, Location_Code text, Date_in_Location_From time, Date_in_Locaton_To time); CREATE TABLE Documents_to_be_Destroyed (Document_ID number, Destruction_Authorised_by_Employee_ID number, Destroyed_by_Employee_ID number, Planned_Destruction_Date time, Actual_Destruction_Date time, Other_Details text); CREATE TABLE Employees (Employee_ID number, Role_Code text, Employee_Name text, Gender_MFU text, Date_of_Birth time, Other_Details text); CREATE TABLE Ref_Calendar (Calendar_Date time, Day_Number number); CREATE TABLE Ref_Document_Types (Document_Type_Code text, Document_Type_Name text, Document_Type_Description text); CREATE TABLE Ref_Locations (Location_Code text, Location_Name text, Location_Description text); CREATE TABLE Roles (Role_Code text, Role_Name text, Role_Description text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"club_1\"\nTable Club, columns = [*,ClubID,ClubName,ClubDesc,ClubLocation]\nTable Member_of_club, columns = [*,StuID,ClubID,Position]\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nForeign_keys = [Member_of_club.ClubID = Club.ClubID,Member_of_club.StuID = Student.StuID]", "output": "CREATE TABLE Club (ClubID number, ClubName text, ClubDesc text, ClubLocation text); CREATE TABLE Member_of_club (StuID number, ClubID number, Position text); CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"tracking_grants_for_research\"\nTable Document_Types, columns = [*,document_type_code,document_description]\nTable Documents, columns = [*,document_id,document_type_code,grant_id,sent_date,response_received_date,other_details]\nTable Grants, columns = [*,grant_id,organisation_id,grant_amount,grant_start_date,grant_end_date,other_details]\nTable Organisation_Types, columns = [*,organisation_type,organisation_type_description]\nTable Organisations, columns = [*,organisation_id,organisation_type,organisation_details]\nTable Project_Outcomes, columns = [*,project_id,outcome_code,outcome_details]\nTable Project_Staff, columns = [*,staff_id,project_id,role_code,date_from,date_to,other_details]\nTable Projects, columns = [*,project_id,organisation_id,project_details]\nTable Research_Outcomes, columns = [*,outcome_code,outcome_description]\nTable Research_Staff, columns = [*,staff_id,employer_organisation_id,staff_details]\nTable Staff_Roles, columns = [*,role_code,role_description]\nTable Tasks, columns = [*,task_id,project_id,task_details,eg Agree Objectives]\nForeign_keys = [Documents.grant_id = Grants.grant_id,Documents.document_type_code = Document_Types.document_type_code,Grants.organisation_id = Organisations.organisation_id,Organisations.organisation_type = Organisation_Types.organisation_type,Project_Outcomes.outcome_code = Research_Outcomes.outcome_code,Project_Outcomes.project_id = Projects.project_id,Project_Staff.role_code = Staff_Roles.role_code,Project_Staff.project_id = Projects.project_id,Projects.organisation_id = Organisations.organisation_id,Research_Staff.employer_organisation_id = Organisations.organisation_id,Tasks.project_id = Projects.project_id]", "output": "CREATE TABLE Document_Types (document_type_code text, document_description text); CREATE TABLE Documents (document_id number, document_type_code text, grant_id number, sent_date time, response_received_date time, other_details text); CREATE TABLE Grants (grant_id number, organisation_id number, grant_amount number, grant_start_date time, grant_end_date time, other_details text); CREATE TABLE Organisation_Types (organisation_type text, organisation_type_description text); CREATE TABLE Organisations (organisation_id number, organisation_type text, organisation_details text); CREATE TABLE Project_Outcomes (project_id number, outcome_code text, outcome_details text); CREATE TABLE Project_Staff (staff_id number, project_id number, role_code text, date_from time, date_to time, other_details text); CREATE TABLE Projects (project_id number, organisation_id number, project_details text); CREATE TABLE Research_Outcomes (outcome_code text, outcome_description text); CREATE TABLE Research_Staff (staff_id number, employer_organisation_id number, staff_details text); CREATE TABLE Staff_Roles (role_code text, role_description text); CREATE TABLE Tasks (task_id number, project_id number, task_details text, \"eg Agree Objectives\" text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"network_2\"\nTable Person, columns = [*,name,age,city,gender,job]\nTable PersonFriend, columns = [*,name,friend,year]\nForeign_keys = [PersonFriend.friend = Person.name,PersonFriend.name = Person.name]", "output": "CREATE TABLE Person (name text, age number, city text, gender text, job text); CREATE TABLE PersonFriend (name text, friend text, year number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"decoration_competition\"\nTable college, columns = [*,College_ID,Name,Leader_Name,College_Location]\nTable member, columns = [*,Member_ID,Name,Country,College_ID]\nTable round, columns = [*,Round_ID,Member_ID,Decoration_Theme,Rank_in_Round]\nForeign_keys = [member.College_ID = college.College_ID,round.Member_ID = member.Member_ID]", "output": "CREATE TABLE college (College_ID number, Name text, Leader_Name text, College_Location text); CREATE TABLE member (Member_ID number, Name text, Country text, College_ID number); CREATE TABLE round (Round_ID number, Member_ID number, Decoration_Theme text, Rank_in_Round number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"document_management\"\nTable Document_Functional_Areas, columns = [*,document_code,functional_area_code]\nTable Document_Sections, columns = [*,section_id,document_code,section_sequence,section_code,section_title]\nTable Document_Sections_Images, columns = [*,section_id,image_id]\nTable Document_Structures, columns = [*,document_structure_code,parent_document_structure_code,document_structure_description]\nTable Documents, columns = [*,document_code,document_structure_code,document_type_code,access_count,document_name]\nTable Functional_Areas, columns = [*,functional_area_code,parent_functional_area_code,functional_area_description]\nTable Images, columns = [*,image_id,image_alt_text,image_name,image_url]\nTable Roles, columns = [*,role_code,role_description]\nTable Users, columns = [*,user_id,role_code,user_name,user_login,password]\nForeign_keys = [Users.role_code = Roles.role_code,Documents.document_structure_code = Document_Structures.document_structure_code,Document_Functional_Areas.functional_area_code = Functional_Areas.functional_area_code,Document_Functional_Areas.document_code = Documents.document_code,Document_Sections.document_code = Documents.document_code,Document_Sections_Images.image_id = Images.image_id,Document_Sections_Images.section_id = Document_Sections.section_id]", "output": "CREATE TABLE Document_Functional_Areas (document_code text, functional_area_code text); CREATE TABLE Document_Sections (section_id number, document_code text, section_sequence number, section_code text, section_title text); CREATE TABLE Document_Sections_Images (section_id number, image_id number); CREATE TABLE Document_Structures (document_structure_code text, parent_document_structure_code text, document_structure_description text); CREATE TABLE Documents (document_code text, document_structure_code text, document_type_code text, access_count number, document_name text); CREATE TABLE Functional_Areas (functional_area_code text, parent_functional_area_code text, functional_area_description text); CREATE TABLE Images (image_id number, image_alt_text text, image_name text, image_url text); CREATE TABLE Roles (role_code text, role_description text); CREATE TABLE Users (user_id number, role_code text, user_name text, user_login text, password text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"company_office\"\nTable Companies, columns = [*,id,name,Headquarters,Industry,Sales_billion,Profits_billion,Assets_billion,Market_Value_billion]\nTable Office_locations, columns = [*,building_id,company_id,move_in_year]\nTable buildings, columns = [*,id,name,City,Height,Stories,Status]\nForeign_keys = [Office_locations.company_id = Companies.id,Office_locations.building_id = buildings.id]", "output": "CREATE TABLE Companies (id number, name text, Headquarters text, Industry text, Sales_billion number, Profits_billion number, Assets_billion number, Market_Value_billion text); CREATE TABLE Office_locations (building_id number, company_id number, move_in_year number); CREATE TABLE buildings (id number, name text, City text, Height number, Stories number, Status text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"solvency_ii\"\nTable Addresses, columns = [*,Address_ID,address_details]\nTable Agreements, columns = [*,Document_ID,Event_ID]\nTable Assets, columns = [*,Asset_ID,Other_Details]\nTable Assets_in_Events, columns = [*,Asset_ID,Event_ID]\nTable Channels, columns = [*,Channel_ID,Other_Details]\nTable Events, columns = [*,Event_ID,Address_ID,Channel_ID,Event_Type_Code,Finance_ID,Location_ID]\nTable Finances, columns = [*,Finance_ID,Other_Details]\nTable Locations, columns = [*,Location_ID,Other_Details]\nTable Parties, columns = [*,Party_ID,Party_Details]\nTable Parties_in_Events, columns = [*,Party_ID,Event_ID,Role_Code]\nTable Products, columns = [*,Product_ID,Product_Type_Code,Product_Name,Product_Price]\nTable Products_in_Events, columns = [*,Product_in_Event_ID,Event_ID,Product_ID]\nForeign_keys = [Events.Finance_ID = Finances.Finance_ID,Events.Address_ID = Addresses.Address_ID,Events.Location_ID = Locations.Location_ID,Products_in_Events.Product_ID = Products.Product_ID,Products_in_Events.Event_ID = Events.Event_ID,Parties_in_Events.Event_ID = Events.Event_ID,Parties_in_Events.Party_ID = Parties.Party_ID,Agreements.Event_ID = Events.Event_ID,Assets_in_Events.Event_ID = Events.Event_ID,Assets_in_Events.Event_ID = Events.Event_ID]", "output": "CREATE TABLE Addresses (Address_ID number, address_details text); CREATE TABLE Agreements (Document_ID number, Event_ID number); CREATE TABLE Assets (Asset_ID number, Other_Details text); CREATE TABLE Assets_in_Events (Asset_ID number, Event_ID number); CREATE TABLE Channels (Channel_ID number, Other_Details text); CREATE TABLE Events (Event_ID number, Address_ID number, Channel_ID number, Event_Type_Code text, Finance_ID number, Location_ID number); CREATE TABLE Finances (Finance_ID number, Other_Details text); CREATE TABLE Locations (Location_ID number, Other_Details text); CREATE TABLE Parties (Party_ID number, Party_Details text); CREATE TABLE Parties_in_Events (Party_ID number, Event_ID number, Role_Code text); CREATE TABLE Products (Product_ID number, Product_Type_Code text, Product_Name text, Product_Price number); CREATE TABLE Products_in_Events (Product_in_Event_ID number, Event_ID number, Product_ID number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"entertainment_awards\"\nTable artwork, columns = [*,Artwork_ID,Type,Name]\nTable festival_detail, columns = [*,Festival_ID,Festival_Name,Chair_Name,Location,Year,Num_of_Audience]\nTable nomination, columns = [*,Artwork_ID,Festival_ID,Result]\nForeign_keys = [nomination.Festival_ID = festival_detail.Festival_ID,nomination.Artwork_ID = artwork.Artwork_ID]", "output": "CREATE TABLE artwork (Artwork_ID number, Type text, Name text); CREATE TABLE festival_detail (Festival_ID number, Festival_Name text, Chair_Name text, Location text, Year number, Num_of_Audience number); CREATE TABLE nomination (Artwork_ID number, Festival_ID number, Result text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"customers_campaigns_ecommerce\"\nTable Customer_Addresses, columns = [*,customer_id,premise_id,date_address_from,address_type_code,date_address_to]\nTable Customer_Orders, columns = [*,order_id,customer_id,order_status_code,shipping_method_code,order_placed_datetime,order_delivered_datetime,order_shipping_charges]\nTable Customers, columns = [*,customer_id,payment_method,customer_name,customer_phone,customer_email,customer_address,customer_login,customer_password]\nTable Mailshot_Campaigns, columns = [*,mailshot_id,product_category,mailshot_name,mailshot_start_date,mailshot_end_date]\nTable Mailshot_Customers, columns = [*,mailshot_id,customer_id,outcome_code,mailshot_customer_date]\nTable Order_Items, columns = [*,item_id,order_item_status_code,order_id,product_id,item_status_code,item_delivered_datetime,item_order_quantity]\nTable Premises, columns = [*,premise_id,premises_type,premise_details]\nTable Products, columns = [*,product_id,product_category,product_name]\nForeign_keys = [Customer_Addresses.customer_id = Customers.customer_id,Customer_Addresses.premise_id = Premises.premise_id,Customer_Orders.customer_id = Customers.customer_id,Mailshot_Customers.mailshot_id = Mailshot_Campaigns.mailshot_id,Mailshot_Customers.customer_id = Customers.customer_id,Order_Items.order_id = Customer_Orders.order_id,Order_Items.product_id = Products.product_id]", "output": "CREATE TABLE Customer_Addresses (customer_id number, premise_id number, date_address_from time, address_type_code text, date_address_to time); CREATE TABLE Customer_Orders (order_id number, customer_id number, order_status_code text, shipping_method_code text, order_placed_datetime time, order_delivered_datetime time, order_shipping_charges text); CREATE TABLE Customers (customer_id number, payment_method text, customer_name text, customer_phone text, customer_email text, customer_address text, customer_login text, customer_password text); CREATE TABLE Mailshot_Campaigns (mailshot_id number, product_category text, mailshot_name text, mailshot_start_date time, mailshot_end_date time); CREATE TABLE Mailshot_Customers (mailshot_id number, customer_id number, outcome_code text, mailshot_customer_date time); CREATE TABLE Order_Items (item_id number, order_item_status_code text, order_id number, product_id number, item_status_code text, item_delivered_datetime time, item_order_quantity text); CREATE TABLE Premises (premise_id number, premises_type text, premise_details text); CREATE TABLE Products (product_id number, product_category text, product_name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"college_3\"\nTable Course, columns = [*,CID,CName,Credits,Instructor,Days,Hours,DNO]\nTable Department, columns = [*,DNO,Division,DName,Room,Building,DPhone]\nTable Enrolled_in, columns = [*,StuID,CID,Grade]\nTable Faculty, columns = [*,FacID,Lname,Fname,Rank,Sex,Phone,Room,Building]\nTable Gradeconversion, columns = [*,lettergrade,gradepoint]\nTable Member_of, columns = [*,FacID,DNO,Appt_Type]\nTable Minor_in, columns = [*,StuID,DNO]\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nForeign_keys = [Member_of.DNO = Department.DNO,Member_of.FacID = Faculty.FacID,Course.DNO = Department.DNO,Course.Instructor = Faculty.FacID,Minor_in.DNO = Department.DNO,Minor_in.StuID = Student.StuID,Enrolled_in.Grade = Gradeconversion.lettergrade,Enrolled_in.CID = Course.CID,Enrolled_in.StuID = Student.StuID]", "output": "CREATE TABLE Course (CID text, CName text, Credits number, Instructor number, Days text, Hours text, DNO number); CREATE TABLE Department (DNO number, Division text, DName text, Room text, Building text, DPhone number); CREATE TABLE Enrolled_in (StuID number, CID text, Grade text); CREATE TABLE Faculty (FacID number, Lname text, Fname text, Rank text, Sex text, Phone number, Room text, Building text); CREATE TABLE Gradeconversion (lettergrade text, gradepoint number); CREATE TABLE Member_of (FacID number, DNO number, Appt_Type text); CREATE TABLE Minor_in (StuID number, DNO number); CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"department_store\"\nTable Addresses, columns = [*,address_id,address_details]\nTable Customer_Addresses, columns = [*,customer_id,address_id,date_from,date_to]\nTable Customer_Orders, columns = [*,order_id,customer_id,order_status_code,order_date]\nTable Customers, columns = [*,customer_id,payment_method_code,customer_code,customer_name,customer_address,customer_phone,customer_email]\nTable Department_Store_Chain, columns = [*,dept_store_chain_id,dept_store_chain_name]\nTable Department_Stores, columns = [*,dept_store_id,dept_store_chain_id,store_name,store_address,store_phone,store_email]\nTable Departments, columns = [*,department_id,dept_store_id,department_name]\nTable Order_Items, columns = [*,order_item_id,order_id,product_id]\nTable Product_Suppliers, columns = [*,product_id,supplier_id,date_supplied_from,date_supplied_to,total_amount_purchased,total_value_purchased]\nTable Products, columns = [*,product_id,product_type_code,product_name,product_price]\nTable Staff, columns = [*,staff_id,staff_gender,staff_name]\nTable Staff_Department_Assignments, columns = [*,staff_id,department_id,date_assigned_from,job_title_code,date_assigned_to]\nTable Supplier_Addresses, columns = [*,supplier_id,address_id,date_from,date_to]\nTable Suppliers, columns = [*,supplier_id,supplier_name,supplier_phone]\nForeign_keys = [Supplier_Addresses.supplier_id = Suppliers.supplier_id,Supplier_Addresses.address_id = Addresses.address_id,Customer_Addresses.customer_id = Customers.customer_id,Customer_Addresses.address_id = Addresses.address_id,Customer_Orders.customer_id = Customers.customer_id,Department_Stores.dept_store_chain_id = Department_Store_Chain.dept_store_chain_id,Departments.dept_store_id = Department_Stores.dept_store_id,Order_Items.product_id = Products.product_id,Order_Items.order_id = Customer_Orders.order_id,Product_Suppliers.product_id = Products.product_id,Product_Suppliers.supplier_id = Suppliers.supplier_id,Staff_Department_Assignments.staff_id = Staff.staff_id,Staff_Department_Assignments.department_id = Departments.department_id]", "output": "CREATE TABLE Addresses (address_id number, address_details text); CREATE TABLE Customer_Addresses (customer_id number, address_id number, date_from time, date_to time); CREATE TABLE Customer_Orders (order_id number, customer_id number, order_status_code text, order_date time); CREATE TABLE Customers (customer_id number, payment_method_code text, customer_code text, customer_name text, customer_address text, customer_phone text, customer_email text); CREATE TABLE Department_Store_Chain (dept_store_chain_id number, dept_store_chain_name text); CREATE TABLE Department_Stores (dept_store_id number, dept_store_chain_id number, store_name text, store_address text, store_phone text, store_email text); CREATE TABLE Departments (department_id number, dept_store_id number, department_name text); CREATE TABLE Order_Items (order_item_id number, order_id number, product_id number); CREATE TABLE Product_Suppliers (product_id number, supplier_id number, date_supplied_from time, date_supplied_to time, total_amount_purchased text, total_value_purchased number); CREATE TABLE Products (product_id number, product_type_code text, product_name text, product_price number); CREATE TABLE Staff (staff_id number, staff_gender text, staff_name text); CREATE TABLE Staff_Department_Assignments (staff_id number, department_id number, date_assigned_from time, job_title_code text, date_assigned_to time); CREATE TABLE Supplier_Addresses (supplier_id number, address_id number, date_from time, date_to time); CREATE TABLE Suppliers (supplier_id number, supplier_name text, supplier_phone text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"aircraft\"\nTable aircraft, columns = [*,Aircraft_ID,Aircraft,Description,Max_Gross_Weight,Total_disk_area,Max_disk_Loading]\nTable airport, columns = [*,Airport_ID,Airport_Name,Total_Passengers,%_Change_2007,International_Passengers,Domestic_Passengers,Transit_Passengers,Aircraft_Movements,Freight_Metric_Tonnes]\nTable airport_aircraft, columns = [*,ID,Airport_ID,Aircraft_ID]\nTable match, columns = [*,Round,Location,Country,Date,Fastest_Qualifying,Winning_Pilot,Winning_Aircraft]\nTable pilot, columns = [*,Pilot_Id,Name,Age]\nForeign_keys = [match.Winning_Pilot = pilot.Pilot_Id,match.Winning_Aircraft = aircraft.Aircraft_ID,airport_aircraft.Aircraft_ID = aircraft.Aircraft_ID,airport_aircraft.Airport_ID = airport.Airport_ID]", "output": "CREATE TABLE aircraft (Aircraft_ID number, Aircraft text, Description text, Max_Gross_Weight text, Total_disk_area text, Max_disk_Loading text); CREATE TABLE airport (Airport_ID number, Airport_Name text, Total_Passengers number, %_Change_2007 text, International_Passengers number, Domestic_Passengers number, Transit_Passengers number, Aircraft_Movements number, Freight_Metric_Tonnes number); CREATE TABLE airport_aircraft (ID number, Airport_ID number, Aircraft_ID number); CREATE TABLE match (Round number, Location text, Country text, Date text, Fastest_Qualifying text, Winning_Pilot text, Winning_Aircraft text); CREATE TABLE pilot (Pilot_Id number, Name text, Age number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"local_govt_and_lot\"\nTable Customer_Event_Notes, columns = [*,Customer_Event_Note_ID,Customer_Event_ID,service_type_code,resident_id,property_id,date_moved_in]\nTable Customer_Events, columns = [*,Customer_Event_ID,customer_id,date_moved_in,property_id,resident_id,thing_id]\nTable Customers, columns = [*,customer_id,customer_details]\nTable Organizations, columns = [*,organization_id,parent_organization_id,organization_details]\nTable Properties, columns = [*,property_id,property_type_code,property_address,other_details]\nTable Residents, columns = [*,resident_id,property_id,date_moved_in,date_moved_out,other_details]\nTable Residents_Services, columns = [*,resident_id,service_id,date_moved_in,property_id,date_requested,date_provided,other_details]\nTable Services, columns = [*,service_id,organization_id,service_type_code,service_details]\nTable Things, columns = [*,thing_id,organization_id,Type_of_Thing_Code,service_type_code,service_details]\nTable Timed_Locations_of_Things, columns = [*,thing_id,Date_and_Time,Location_Code]\nTable Timed_Status_of_Things, columns = [*,thing_id,Date_and_Date,Status_of_Thing_Code]\nForeign_keys = [Residents.property_id = Properties.property_id,Services.organization_id = Organizations.organization_id,Residents_Services.resident_id = Residents.resident_id,Residents_Services.property_id = Residents.property_id,Residents_Services.date_moved_in = Residents.date_moved_in,Residents_Services.service_id = Services.service_id,Things.organization_id = Organizations.organization_id,Customer_Events.resident_id = Residents.resident_id,Customer_Events.property_id = Residents.property_id,Customer_Events.date_moved_in = Residents.date_moved_in,Customer_Events.customer_id = Customers.customer_id,Customer_Events.thing_id = Things.thing_id,Customer_Event_Notes.Customer_Event_ID = Customer_Events.Customer_Event_ID,Timed_Status_of_Things.thing_id = Things.thing_id,Timed_Locations_of_Things.thing_id = Things.thing_id]", "output": "CREATE TABLE Customer_Event_Notes (Customer_Event_Note_ID number, Customer_Event_ID number, service_type_code text, resident_id number, property_id number, date_moved_in time); CREATE TABLE Customer_Events (Customer_Event_ID number, customer_id number, date_moved_in time, property_id number, resident_id number, thing_id number); CREATE TABLE Customers (customer_id number, customer_details text); CREATE TABLE Organizations (organization_id number, parent_organization_id number, organization_details text); CREATE TABLE Properties (property_id number, property_type_code text, property_address text, other_details text); CREATE TABLE Residents (resident_id number, property_id number, date_moved_in time, date_moved_out time, other_details text); CREATE TABLE Residents_Services (resident_id number, service_id number, date_moved_in time, property_id number, date_requested time, date_provided time, other_details text); CREATE TABLE Services (service_id number, organization_id number, service_type_code text, service_details text); CREATE TABLE Things (thing_id number, organization_id number, Type_of_Thing_Code text, service_type_code text, service_details text); CREATE TABLE Timed_Locations_of_Things (thing_id number, Date_and_Time time, Location_Code text); CREATE TABLE Timed_Status_of_Things (thing_id number, Date_and_Date time, Status_of_Thing_Code text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"school_player\"\nTable player, columns = [*,Player_ID,Player,Team,Age,Position,School_ID]\nTable school, columns = [*,School_ID,School,Location,Enrollment,Founded,Denomination,Boys_or_Girls,Day_or_Boarding,Year_Entered_Competition,School_Colors]\nTable school_details, columns = [*,School_ID,Nickname,Colors,League,Class,Division]\nTable school_performance, columns = [*,School_Id,School_Year,Class_A,Class_AA]\nForeign_keys = [school_details.School_ID = school.School_ID,school_performance.School_Id = school.School_ID,player.School_ID = school.School_ID]", "output": "CREATE TABLE player (Player_ID number, Player text, Team text, Age number, Position text, School_ID number); CREATE TABLE school (School_ID number, School text, Location text, Enrollment number, Founded number, Denomination text, Boys_or_Girls text, Day_or_Boarding text, Year_Entered_Competition number, School_Colors text); CREATE TABLE school_details (School_ID number, Nickname text, Colors text, League text, Class text, Division text); CREATE TABLE school_performance (School_Id number, School_Year text, Class_A text, Class_AA text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"store_product\"\nTable district, columns = [*,District_ID,District_name,Headquartered_City,City_Population,City_Area]\nTable product, columns = [*,product_id,product,dimensions,dpi,pages_per_minute_color,max_page_size,interface]\nTable store, columns = [*,Store_ID,Store_Name,Type,Area_size,Number_of_product_category,Ranking]\nTable store_district, columns = [*,Store_ID,District_ID]\nTable store_product, columns = [*,Store_ID,Product_ID]\nForeign_keys = [store_product.Store_ID = store.Store_ID,store_district.District_ID = district.District_ID,store_district.Store_ID = store.Store_ID]", "output": "CREATE TABLE district (District_ID number, District_name text, Headquartered_City text, City_Population number, City_Area number); CREATE TABLE product (product_id number, product text, dimensions text, dpi number, pages_per_minute_color number, max_page_size text, interface text); CREATE TABLE store (Store_ID number, Store_Name text, Type text, Area_size number, Number_of_product_category number, Ranking number); CREATE TABLE store_district (Store_ID number, District_ID number); CREATE TABLE store_product (Store_ID number, Product_ID number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"soccer_2\"\nTable College, columns = [*,cName,state,enr]\nTable Player, columns = [*,pID,pName,yCard,HS]\nTable Tryout, columns = [*,pID,cName,pPos,decision]\nForeign_keys = [Tryout.cName = College.cName,Tryout.pID = Player.pID]", "output": "CREATE TABLE College (cName text, state text, enr number); CREATE TABLE Player (pID number, pName text, yCard text, HS number); CREATE TABLE Tryout (pID number, cName text, pPos text, decision text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"device\"\nTable device, columns = [*,Device_ID,Device,Carrier,Package_Version,Applications,Software_Platform]\nTable shop, columns = [*,Shop_ID,Shop_Name,Location,Open_Date,Open_Year]\nTable stock, columns = [*,Shop_ID,Device_ID,Quantity]\nForeign_keys = [stock.Device_ID = device.Device_ID,stock.Shop_ID = shop.Shop_ID]", "output": "CREATE TABLE device (Device_ID number, Device text, Carrier text, Package_Version text, Applications text, Software_Platform text); CREATE TABLE shop (Shop_ID number, Shop_Name text, Location text, Open_Date text, Open_Year number); CREATE TABLE stock (Shop_ID number, Device_ID number, Quantity number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"cre_Drama_Workshop_Groups\"\nTable Addresses, columns = [*,Address_ID,Line_1,Line_2,City_Town,State_County,Other_Details]\nTable Bookings, columns = [*,Booking_ID,Customer_ID,Workshop_Group_ID,Status_Code,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details]\nTable Bookings_Services, columns = [*,Order_ID,Product_ID]\nTable Clients, columns = [*,Client_ID,Address_ID,Customer_Email_Address,Customer_Name,Customer_Phone,Other_Details]\nTable Customer_Orders, columns = [*,Order_ID,Customer_ID,Store_ID,Order_Date,Planned_Delivery_Date,Actual_Delivery_Date,Other_Order_Details]\nTable Customers, columns = [*,Customer_ID,Address_ID,Customer_Name,Customer_Phone,Customer_Email_Address,Other_Details]\nTable Drama_Workshop_Groups, columns = [*,Workshop_Group_ID,Address_ID,Currency_Code,Marketing_Region_Code,Store_Name,Store_Phone,Store_Email_Address,Other_Details]\nTable Invoice_Items, columns = [*,Invoice_Item_ID,Invoice_ID,Order_ID,Order_Item_ID,Product_ID,Order_Quantity,Other_Item_Details]\nTable Invoices, columns = [*,Invoice_ID,Order_ID,payment_method_code,Product_ID,Order_Quantity,Other_Item_Details,Order_Item_ID]\nTable Marketing_Regions, columns = [*,Marketing_Region_Code,Marketing_Region_Name,Marketing_Region_Descriptrion,Other_Details]\nTable Order_Items, columns = [*,Order_Item_ID,Order_ID,Product_ID,Order_Quantity,Other_Item_Details]\nTable Performers, columns = [*,Performer_ID,Address_ID,Customer_Name,Customer_Phone,Customer_Email_Address,Other_Details]\nTable Performers_in_Bookings, columns = [*,Order_ID,Performer_ID]\nTable Products, columns = [*,Product_ID,Product_Name,Product_Price,Product_Description,Other_Product_Service_Details]\nTable Ref_Payment_Methods, columns = [*,payment_method_code,payment_method_description]\nTable Ref_Service_Types, columns = [*,Service_Type_Code,Parent_Service_Type_Code,Service_Type_Description]\nTable Services, columns = [*,Service_ID,Service_Type_Code,Workshop_Group_ID,Product_Description,Product_Name,Product_Price,Other_Product_Service_Details]\nTable Stores, columns = [*,Store_ID,Address_ID,Marketing_Region_Code,Store_Name,Store_Phone,Store_Email_Address,Other_Details]\nForeign_keys = [Clients.Address_ID = Addresses.Address_ID,Drama_Workshop_Groups.Address_ID = Addresses.Address_ID,Performers.Address_ID = Addresses.Address_ID,Customers.Address_ID = Addresses.Address_ID,Stores.Marketing_Region_Code = Marketing_Regions.Marketing_Region_Code,Stores.Address_ID = Addresses.Address_ID,Bookings.Workshop_Group_ID = Drama_Workshop_Groups.Workshop_Group_ID,Bookings.Customer_ID = Clients.Client_ID,Performers_in_Bookings.Order_ID = Bookings.Booking_ID,Performers_in_Bookings.Performer_ID = Performers.Performer_ID,Customer_Orders.Store_ID = Stores.Store_ID,Customer_Orders.Customer_ID = Customers.Customer_ID,Order_Items.Product_ID = Products.Product_ID,Order_Items.Order_ID = Customer_Orders.Order_ID,Invoices.payment_method_code = Ref_Payment_Methods.payment_method_code,Invoices.Order_ID = Bookings.Booking_ID,Invoices.Order_ID = Customer_Orders.Order_ID,Services.Service_Type_Code = Ref_Service_Types.Service_Type_Code,Services.Workshop_Group_ID = Drama_Workshop_Groups.Workshop_Group_ID,Bookings_Services.Product_ID = Services.Service_ID,Bookings_Services.Order_ID = Bookings.Booking_ID,Invoice_Items.Order_ID = Bookings_Services.Order_ID,Invoice_Items.Product_ID = Bookings_Services.Product_ID,Invoice_Items.Invoice_ID = Invoices.Invoice_ID,Invoice_Items.Order_Item_ID = Order_Items.Order_Item_ID]", "output": "CREATE TABLE Addresses (Address_ID text, Line_1 text, Line_2 text, City_Town text, State_County text, Other_Details text); CREATE TABLE Bookings (Booking_ID number, Customer_ID number, Workshop_Group_ID text, Status_Code text, Store_ID number, Order_Date time, Planned_Delivery_Date time, Actual_Delivery_Date time, Other_Order_Details text); CREATE TABLE Bookings_Services (Order_ID number, Product_ID number); CREATE TABLE Clients (Client_ID number, Address_ID number, Customer_Email_Address text, Customer_Name text, Customer_Phone text, Other_Details text); CREATE TABLE Customer_Orders (Order_ID number, Customer_ID number, Store_ID number, Order_Date time, Planned_Delivery_Date time, Actual_Delivery_Date time, Other_Order_Details text); CREATE TABLE Customers (Customer_ID text, Address_ID number, Customer_Name text, Customer_Phone text, Customer_Email_Address text, Other_Details text); CREATE TABLE Drama_Workshop_Groups (Workshop_Group_ID number, Address_ID number, Currency_Code text, Marketing_Region_Code text, Store_Name text, Store_Phone text, Store_Email_Address text, Other_Details text); CREATE TABLE Invoice_Items (Invoice_Item_ID number, Invoice_ID number, Order_ID number, Order_Item_ID number, Product_ID number, Order_Quantity number, Other_Item_Details text); CREATE TABLE Invoices (Invoice_ID number, Order_ID number, payment_method_code text, Product_ID number, Order_Quantity text, Other_Item_Details text, Order_Item_ID number); CREATE TABLE Marketing_Regions (Marketing_Region_Code text, Marketing_Region_Name text, Marketing_Region_Descriptrion text, Other_Details text); CREATE TABLE Order_Items (Order_Item_ID number, Order_ID number, Product_ID number, Order_Quantity text, Other_Item_Details text); CREATE TABLE Performers (Performer_ID number, Address_ID number, Customer_Name text, Customer_Phone text, Customer_Email_Address text, Other_Details text); CREATE TABLE Performers_in_Bookings (Order_ID number, Performer_ID number); CREATE TABLE Products (Product_ID text, Product_Name text, Product_Price number, Product_Description text, Other_Product_Service_Details text); CREATE TABLE Ref_Payment_Methods (payment_method_code text, payment_method_description text); CREATE TABLE Ref_Service_Types (Service_Type_Code text, Parent_Service_Type_Code text, Service_Type_Description text); CREATE TABLE Services (Service_ID number, Service_Type_Code text, Workshop_Group_ID number, Product_Description text, Product_Name text, Product_Price number, Other_Product_Service_Details text); CREATE TABLE Stores (Store_ID text, Address_ID number, Marketing_Region_Code text, Store_Name text, Store_Phone text, Store_Email_Address text, Other_Details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"music_2\"\nTable Albums, columns = [*,AId,Title,Year,Label,Type]\nTable Band, columns = [*,Id,Firstname,Lastname]\nTable Instruments, columns = [*,SongId,BandmateId,Instrument]\nTable Performance, columns = [*,SongId,Bandmate,StagePosition]\nTable Songs, columns = [*,SongId,Title]\nTable Tracklists, columns = [*,AlbumId,Position,SongId]\nTable Vocals, columns = [*,SongId,Bandmate,Type]\nForeign_keys = [Instruments.BandmateId = Band.Id,Instruments.SongId = Songs.SongId,Performance.Bandmate = Band.Id,Performance.SongId = Songs.SongId,Tracklists.AlbumId = Albums.AId,Tracklists.SongId = Songs.SongId,Vocals.Bandmate = Band.Id,Vocals.SongId = Songs.SongId]", "output": "CREATE TABLE Albums (AId number, Title text, Year number, Label text, Type text); CREATE TABLE Band (Id number, Firstname text, Lastname text); CREATE TABLE Instruments (SongId number, BandmateId number, Instrument text); CREATE TABLE Performance (SongId number, Bandmate number, StagePosition text); CREATE TABLE Songs (SongId number, Title text); CREATE TABLE Tracklists (AlbumId number, Position number, SongId number); CREATE TABLE Vocals (SongId number, Bandmate number, Type text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"manufactory_1\"\nTable Manufacturers, columns = [*,Code,Name,Headquarter,Founder,Revenue]\nTable Products, columns = [*,Code,Name,Price,Manufacturer]\nForeign_keys = [Products.Manufacturer = Manufacturers.Code]", "output": "CREATE TABLE Manufacturers (Code number, Name text, Headquarter text, Founder text, Revenue number); CREATE TABLE Products (Code number, Name text, Price number, Manufacturer number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"tracking_software_problems\"\nTable Problem_Category_Codes, columns = [*,problem_category_code,problem_category_description]\nTable Problem_Log, columns = [*,problem_log_id,assigned_to_staff_id,problem_id,problem_category_code,problem_status_code,log_entry_date,log_entry_description,log_entry_fix,other_log_details]\nTable Problem_Status_Codes, columns = [*,problem_status_code,problem_status_description]\nTable Problems, columns = [*,problem_id,product_id,closure_authorised_by_staff_id,reported_by_staff_id,date_problem_reported,date_problem_closed,problem_description,other_problem_details]\nTable Product, columns = [*,product_id,product_name,product_details]\nTable Staff, columns = [*,staff_id,staff_first_name,staff_last_name,other_staff_details]\nForeign_keys = [Problem_Log.problem_status_code = Problem_Status_Codes.problem_status_code,Problem_Log.problem_id = Problems.problem_id,Problem_Log.assigned_to_staff_id = Staff.staff_id,Problem_Log.problem_category_code = Problem_Category_Codes.problem_category_code,Problems.reported_by_staff_id = Staff.staff_id,Problems.product_id = Product.product_id,Problems.closure_authorised_by_staff_id = Staff.staff_id]", "output": "CREATE TABLE Problem_Category_Codes (problem_category_code text, problem_category_description text); CREATE TABLE Problem_Log (problem_log_id number, assigned_to_staff_id number, problem_id number, problem_category_code text, problem_status_code text, log_entry_date time, log_entry_description text, log_entry_fix text, other_log_details text); CREATE TABLE Problem_Status_Codes (problem_status_code text, problem_status_description text); CREATE TABLE Problems (problem_id number, product_id number, closure_authorised_by_staff_id number, reported_by_staff_id number, date_problem_reported time, date_problem_closed time, problem_description text, other_problem_details text); CREATE TABLE Product (product_id number, product_name text, product_details text); CREATE TABLE Staff (staff_id number, staff_first_name text, staff_last_name text, other_staff_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"shop_membership\"\nTable branch, columns = [*,Branch_ID,Name,Open_year,Address_road,City,membership_amount]\nTable member, columns = [*,Member_ID,Card_Number,Name,Hometown,Level]\nTable membership_register_branch, columns = [*,Member_ID,Branch_ID,Register_Year]\nTable purchase, columns = [*,Member_ID,Branch_ID,Year,Total_pounds]\nForeign_keys = [membership_register_branch.Branch_ID = branch.Branch_ID,membership_register_branch.Member_ID = member.Member_ID,purchase.Branch_ID = branch.Branch_ID,purchase.Member_ID = member.Member_ID]", "output": "CREATE TABLE branch (Branch_ID number, Name text, Open_year text, Address_road text, City text, membership_amount text); CREATE TABLE member (Member_ID number, Card_Number text, Name text, Hometown text, Level number); CREATE TABLE membership_register_branch (Member_ID number, Branch_ID text, Register_Year text); CREATE TABLE purchase (Member_ID number, Branch_ID text, Year text, Total_pounds number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"voter_2\"\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nTable Voting_record, columns = [*,StuID,Registration_Date,Election_Cycle,President_Vote,Vice_President_Vote,Secretary_Vote,Treasurer_Vote,Class_President_Vote,Class_Senator_Vote]\nForeign_keys = [Voting_record.Class_Senator_Vote = Student.StuID,Voting_record.Class_President_Vote = Student.StuID,Voting_record.Treasurer_Vote = Student.StuID,Voting_record.Secretary_Vote = Student.StuID,Voting_record.Vice_President_Vote = Student.StuID,Voting_record.President_Vote = Student.StuID,Voting_record.StuID = Student.StuID]", "output": "CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text); CREATE TABLE Voting_record (StuID number, Registration_Date text, Election_Cycle text, President_Vote number, Vice_President_Vote number, Secretary_Vote number, Treasurer_Vote number, Class_President_Vote number, Class_Senator_Vote number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"products_gen_characteristics\"\nTable Characteristics, columns = [*,characteristic_id,characteristic_type_code,characteristic_data_type,characteristic_name,other_characteristic_details]\nTable Product_Characteristics, columns = [*,product_id,characteristic_id,product_characteristic_value]\nTable Products, columns = [*,product_id,color_code,product_category_code,product_name,typical_buying_price,typical_selling_price,product_description,other_product_details]\nTable Ref_Characteristic_Types, columns = [*,characteristic_type_code,characteristic_type_description]\nTable Ref_Colors, columns = [*,color_code,color_description]\nTable Ref_Product_Categories, columns = [*,product_category_code,product_category_description,unit_of_measure]\nForeign_keys = [Characteristics.characteristic_type_code = Ref_Characteristic_Types.characteristic_type_code,Products.color_code = Ref_Colors.color_code,Products.product_category_code = Ref_Product_Categories.product_category_code,Product_Characteristics.product_id = Products.product_id,Product_Characteristics.characteristic_id = Characteristics.characteristic_id]", "output": "CREATE TABLE Characteristics (characteristic_id number, characteristic_type_code text, characteristic_data_type text, characteristic_name text, other_characteristic_details text); CREATE TABLE Product_Characteristics (product_id number, characteristic_id number, product_characteristic_value text); CREATE TABLE Products (product_id number, color_code text, product_category_code text, product_name text, typical_buying_price text, typical_selling_price text, product_description text, other_product_details text); CREATE TABLE Ref_Characteristic_Types (characteristic_type_code text, characteristic_type_description text); CREATE TABLE Ref_Colors (color_code text, color_description text); CREATE TABLE Ref_Product_Categories (product_category_code text, product_category_description text, unit_of_measure text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"swimming\"\nTable event, columns = [*,ID,Name,Stadium_ID,Year]\nTable record, columns = [*,ID,Result,Swimmer_ID,Event_ID]\nTable stadium, columns = [*,ID,name,Capacity,City,Country,Opening_year]\nTable swimmer, columns = [*,ID,name,Nationality,meter_100,meter_200,meter_300,meter_400,meter_500,meter_600,meter_700,Time]\nForeign_keys = [event.Stadium_ID = stadium.ID,record.Swimmer_ID = swimmer.ID,record.Event_ID = event.ID]", "output": "CREATE TABLE event (ID number, Name text, Stadium_ID number, Year text); CREATE TABLE record (ID number, Result text, Swimmer_ID number, Event_ID number); CREATE TABLE stadium (ID number, name text, Capacity number, City text, Country text, Opening_year number); CREATE TABLE swimmer (ID number, name text, Nationality text, meter_100 number, meter_200 text, meter_300 text, meter_400 text, meter_500 text, meter_600 text, meter_700 text, Time text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"railway\"\nTable manager, columns = [*,Manager_ID,Name,Country,Working_year_starts,Age,Level]\nTable railway, columns = [*,Railway_ID,Railway,Builder,Built,Wheels,Location,ObjectNumber]\nTable railway_manage, columns = [*,Railway_ID,Manager_ID,From_Year]\nTable train, columns = [*,Train_ID,Train_Num,Name,From,Arrival,Railway_ID]\nForeign_keys = [train.Railway_ID = railway.Railway_ID,railway_manage.Railway_ID = railway.Railway_ID,railway_manage.Manager_ID = manager.Manager_ID]", "output": "CREATE TABLE manager (Manager_ID number, Name text, Country text, Working_year_starts text, Age number, Level number); CREATE TABLE railway (Railway_ID number, Railway text, Builder text, Built text, Wheels text, Location text, ObjectNumber text); CREATE TABLE railway_manage (Railway_ID number, Manager_ID number, From_Year text); CREATE TABLE train (Train_ID number, Train_Num text, Name text, From text, Arrival text, Railway_ID number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"customers_and_products_contacts\"\nTable Addresses, columns = [*,address_id,line_1_number_building,city,zip_postcode,state_province_county,country]\nTable Contacts, columns = [*,contact_id,customer_id,gender,first_name,last_name,contact_phone]\nTable Customer_Address_History, columns = [*,customer_id,address_id,date_from,date_to]\nTable Customer_Orders, columns = [*,order_id,customer_id,order_date,order_status_code]\nTable Customers, columns = [*,customer_id,payment_method_code,customer_number,customer_name,customer_address,customer_phone,customer_email]\nTable Order_Items, columns = [*,order_item_id,order_id,product_id,order_quantity]\nTable Products, columns = [*,product_id,product_type_code,product_name,product_price]\nForeign_keys = [Customer_Address_History.address_id = Addresses.address_id,Customer_Address_History.customer_id = Customers.customer_id,Customer_Orders.customer_id = Customers.customer_id,Order_Items.order_id = Customer_Orders.order_id,Order_Items.product_id = Products.product_id]", "output": "CREATE TABLE Addresses (address_id number, line_1_number_building text, city text, zip_postcode text, state_province_county text, country text); CREATE TABLE Contacts (contact_id number, customer_id number, gender text, first_name text, last_name text, contact_phone text); CREATE TABLE Customer_Address_History (customer_id number, address_id number, date_from time, date_to time); CREATE TABLE Customer_Orders (order_id number, customer_id number, order_date time, order_status_code text); CREATE TABLE Customers (customer_id number, payment_method_code text, customer_number text, customer_name text, customer_address text, customer_phone text, customer_email text); CREATE TABLE Order_Items (order_item_id number, order_id number, product_id number, order_quantity text); CREATE TABLE Products (product_id number, product_type_code text, product_name text, product_price number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"dorm_1\"\nTable Dorm, columns = [*,dormid,dorm_name,student_capacity,gender]\nTable Dorm_amenity, columns = [*,amenid,amenity_name]\nTable Has_amenity, columns = [*,dormid,amenid]\nTable Lives_in, columns = [*,stuid,dormid,room_number]\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nForeign_keys = [Has_amenity.amenid = Dorm_amenity.amenid,Has_amenity.dormid = Dorm.dormid,Lives_in.dormid = Dorm.dormid,Lives_in.stuid = Student.StuID]", "output": "CREATE TABLE Dorm (dormid number, dorm_name text, student_capacity number, gender text); CREATE TABLE Dorm_amenity (amenid number, amenity_name text); CREATE TABLE Has_amenity (dormid number, amenid number); CREATE TABLE Lives_in (stuid number, dormid number, room_number number); CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"customer_complaints\"\nTable Complaints, columns = [*,complaint_id,product_id,customer_id,complaint_outcome_code,complaint_status_code,complaint_type_code,date_complaint_raised,date_complaint_closed,staff_id]\nTable Customers, columns = [*,customer_id,customer_type_code,address_line_1,address_line_2,town_city,state,email_address,phone_number]\nTable Products, columns = [*,product_id,parent_product_id,product_category_code,date_product_first_available,date_product_discontinued,product_name,product_description,product_price]\nTable Staff, columns = [*,staff_id,gender,first_name,last_name,email_address,phone_number]\nForeign_keys = [Complaints.customer_id = Customers.customer_id,Complaints.product_id = Products.product_id,Complaints.staff_id = Staff.staff_id]", "output": "CREATE TABLE Complaints (complaint_id number, product_id number, customer_id number, complaint_outcome_code text, complaint_status_code text, complaint_type_code text, date_complaint_raised time, date_complaint_closed time, staff_id number); CREATE TABLE Customers (customer_id number, customer_type_code text, address_line_1 text, address_line_2 text, town_city text, state text, email_address text, phone_number text); CREATE TABLE Products (product_id number, parent_product_id number, product_category_code text, date_product_first_available time, date_product_discontinued time, product_name text, product_description text, product_price number); CREATE TABLE Staff (staff_id number, gender text, first_name text, last_name text, email_address text, phone_number text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"workshop_paper\"\nTable Acceptance, columns = [*,Submission_ID,Workshop_ID,Result]\nTable submission, columns = [*,Submission_ID,Scores,Author,College]\nTable workshop, columns = [*,Workshop_ID,Date,Venue,Name]\nForeign_keys = [Acceptance.Workshop_ID = workshop.Workshop_ID,Acceptance.Submission_ID = submission.Submission_ID]", "output": "CREATE TABLE Acceptance (Submission_ID number, Workshop_ID number, Result text); CREATE TABLE submission (Submission_ID number, Scores number, Author text, College text); CREATE TABLE workshop (Workshop_ID number, Date text, Venue text, Name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"tracking_share_transactions\"\nTable Investors, columns = [*,investor_id,Investor_details]\nTable Lots, columns = [*,lot_id,investor_id,lot_details]\nTable Purchases, columns = [*,purchase_transaction_id,purchase_details]\nTable Ref_Transaction_Types, columns = [*,transaction_type_code,transaction_type_description]\nTable Sales, columns = [*,sales_transaction_id,sales_details]\nTable Transactions, columns = [*,transaction_id,investor_id,transaction_type_code,date_of_transaction,amount_of_transaction,share_count,other_details]\nTable Transactions_Lots, columns = [*,transaction_id,lot_id]\nForeign_keys = [Lots.investor_id = Investors.investor_id,Transactions.transaction_type_code = Ref_Transaction_Types.transaction_type_code,Transactions.investor_id = Investors.investor_id,Sales.sales_transaction_id = Transactions.transaction_id,Purchases.purchase_transaction_id = Transactions.transaction_id,Transactions_Lots.transaction_id = Transactions.transaction_id,Transactions_Lots.lot_id = Lots.lot_id]", "output": "CREATE TABLE Investors (investor_id number, Investor_details text); CREATE TABLE Lots (lot_id number, investor_id number, lot_details text); CREATE TABLE Purchases (purchase_transaction_id number, purchase_details text); CREATE TABLE Ref_Transaction_Types (transaction_type_code text, transaction_type_description text); CREATE TABLE Sales (sales_transaction_id number, sales_details text); CREATE TABLE Transactions (transaction_id number, investor_id number, transaction_type_code text, date_of_transaction time, amount_of_transaction number, share_count text, other_details text); CREATE TABLE Transactions_Lots (transaction_id number, lot_id number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"cre_Theme_park\"\nTable Features, columns = [*,Feature_ID,Feature_Details]\nTable Hotels, columns = [*,hotel_id,star_rating_code,pets_allowed_yn,price_range,other_hotel_details]\nTable Locations, columns = [*,Location_ID,Location_Name,Address,Other_Details]\nTable Museums, columns = [*,Museum_ID,Museum_Details]\nTable Photos, columns = [*,Photo_ID,Tourist_Attraction_ID,Name,Description,Filename,Other_Details]\nTable Ref_Attraction_Types, columns = [*,Attraction_Type_Code,Attraction_Type_Description]\nTable Ref_Hotel_Star_Ratings, columns = [*,star_rating_code,star_rating_description]\nTable Royal_Family, columns = [*,Royal_Family_ID,Royal_Family_Details]\nTable Shops, columns = [*,Shop_ID,Shop_Details]\nTable Staff, columns = [*,Staff_ID,Tourist_Attraction_ID,Name,Other_Details]\nTable Street_Markets, columns = [*,Market_ID,Market_Details]\nTable Theme_Parks, columns = [*,Theme_Park_ID,Theme_Park_Details]\nTable Tourist_Attraction_Features, columns = [*,Tourist_Attraction_ID,Feature_ID]\nTable Tourist_Attractions, columns = [*,Tourist_Attraction_ID,Attraction_Type_Code,Location_ID,How_to_Get_There,Name,Description,Opening_Hours,Other_Details]\nTable Visitors, columns = [*,Tourist_ID,Tourist_Details]\nTable Visits, columns = [*,Visit_ID,Tourist_Attraction_ID,Tourist_ID,Visit_Date,Visit_Details]\nForeign_keys = [Hotels.star_rating_code = Ref_Hotel_Star_Ratings.star_rating_code,Tourist_Attractions.Attraction_Type_Code = Ref_Attraction_Types.Attraction_Type_Code,Tourist_Attractions.Location_ID = Locations.Location_ID,Street_Markets.Market_ID = Tourist_Attractions.Tourist_Attraction_ID,Shops.Shop_ID = Tourist_Attractions.Tourist_Attraction_ID,Museums.Museum_ID = Tourist_Attractions.Tourist_Attraction_ID,Royal_Family.Royal_Family_ID = Tourist_Attractions.Tourist_Attraction_ID,Theme_Parks.Theme_Park_ID = Tourist_Attractions.Tourist_Attraction_ID,Visits.Tourist_ID = Visitors.Tourist_ID,Visits.Tourist_Attraction_ID = Tourist_Attractions.Tourist_Attraction_ID,Photos.Tourist_Attraction_ID = Tourist_Attractions.Tourist_Attraction_ID,Staff.Tourist_Attraction_ID = Tourist_Attractions.Tourist_Attraction_ID,Tourist_Attraction_Features.Feature_ID = Features.Feature_ID,Tourist_Attraction_Features.Tourist_Attraction_ID = Tourist_Attractions.Tourist_Attraction_ID]", "output": "CREATE TABLE Features (Feature_ID number, Feature_Details text); CREATE TABLE Hotels (hotel_id number, star_rating_code text, pets_allowed_yn text, price_range number, other_hotel_details text); CREATE TABLE Locations (Location_ID number, Location_Name text, Address text, Other_Details text); CREATE TABLE Museums (Museum_ID number, Museum_Details text); CREATE TABLE Photos (Photo_ID number, Tourist_Attraction_ID number, Name text, Description text, Filename text, Other_Details text); CREATE TABLE Ref_Attraction_Types (Attraction_Type_Code text, Attraction_Type_Description text); CREATE TABLE Ref_Hotel_Star_Ratings (star_rating_code text, star_rating_description text); CREATE TABLE Royal_Family (Royal_Family_ID number, Royal_Family_Details text); CREATE TABLE Shops (Shop_ID number, Shop_Details text); CREATE TABLE Staff (Staff_ID number, Tourist_Attraction_ID number, Name text, Other_Details text); CREATE TABLE Street_Markets (Market_ID number, Market_Details text); CREATE TABLE Theme_Parks (Theme_Park_ID number, Theme_Park_Details text); CREATE TABLE Tourist_Attraction_Features (Tourist_Attraction_ID number, Feature_ID number); CREATE TABLE Tourist_Attractions (Tourist_Attraction_ID number, Attraction_Type_Code text, Location_ID number, How_to_Get_There text, Name text, Description text, Opening_Hours text, Other_Details text); CREATE TABLE Visitors (Tourist_ID number, Tourist_Details text); CREATE TABLE Visits (Visit_ID number, Tourist_Attraction_ID number, Tourist_ID number, Visit_Date time, Visit_Details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"game_1\"\nTable Plays_Games, columns = [*,StuID,GameID,Hours_Played]\nTable SportsInfo, columns = [*,StuID,SportName,HoursPerWeek,GamesPlayed,OnScholarship]\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nTable Video_Games, columns = [*,GameID,GName,GType]\nForeign_keys = [Plays_Games.StuID = Student.StuID,Plays_Games.GameID = Video_Games.GameID,SportsInfo.StuID = Student.StuID]", "output": "CREATE TABLE Plays_Games (StuID number, GameID number, Hours_Played number); CREATE TABLE SportsInfo (StuID number, SportName text, HoursPerWeek number, GamesPlayed number, OnScholarship text); CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text); CREATE TABLE Video_Games (GameID number, GName text, GType text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"customers_and_addresses\"\nTable Addresses, columns = [*,address_id,address_content,city,zip_postcode,state_province_county,country,other_address_details]\nTable Customer_Addresses, columns = [*,customer_id,address_id,date_address_from,address_type,date_address_to]\nTable Customer_Contact_Channels, columns = [*,customer_id,channel_code,active_from_date,active_to_date,contact_number]\nTable Customer_Orders, columns = [*,order_id,customer_id,order_status,order_date,order_details]\nTable Customers, columns = [*,customer_id,payment_method,customer_name,date_became_customer,other_customer_details]\nTable Order_Items, columns = [*,order_id,product_id,order_quantity]\nTable Products, columns = [*,product_id,product_details]\nForeign_keys = [Customer_Addresses.customer_id = Customers.customer_id,Customer_Addresses.address_id = Addresses.address_id,Customer_Contact_Channels.customer_id = Customers.customer_id,Customer_Orders.customer_id = Customers.customer_id,Order_Items.order_id = Customer_Orders.order_id,Order_Items.product_id = Products.product_id]", "output": "CREATE TABLE Addresses (address_id number, address_content text, city text, zip_postcode text, state_province_county text, country text, other_address_details text); CREATE TABLE Customer_Addresses (customer_id number, address_id number, date_address_from time, address_type text, date_address_to time); CREATE TABLE Customer_Contact_Channels (customer_id number, channel_code text, active_from_date time, active_to_date time, contact_number text); CREATE TABLE Customer_Orders (order_id number, customer_id number, order_status text, order_date time, order_details text); CREATE TABLE Customers (customer_id number, payment_method text, customer_name text, date_became_customer time, other_customer_details text); CREATE TABLE Order_Items (order_id number, product_id number, order_quantity text); CREATE TABLE Products (product_id number, product_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"music_4\"\nTable artist, columns = [*,Artist_ID,Artist,Age,Famous_Title,Famous_Release_date]\nTable music_festival, columns = [*,ID,Music_Festival,Date_of_ceremony,Category,Volume,Result]\nTable volume, columns = [*,Volume_ID,Volume_Issue,Issue_Date,Weeks_on_Top,Song,Artist_ID]\nForeign_keys = [volume.Artist_ID = artist.Artist_ID,music_festival.Volume = volume.Volume_ID]", "output": "CREATE TABLE artist (Artist_ID number, Artist text, Age number, Famous_Title text, Famous_Release_date text); CREATE TABLE music_festival (ID number, Music_Festival text, Date_of_ceremony text, Category text, Volume number, Result text); CREATE TABLE volume (Volume_ID number, Volume_Issue text, Issue_Date text, Weeks_on_Top number, Song text, Artist_ID number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"roller_coaster\"\nTable country, columns = [*,Country_ID,Name,Population,Area,Languages]\nTable roller_coaster, columns = [*,Roller_Coaster_ID,Name,Park,Country_ID,Length,Height,Speed,Opened,Status]\nForeign_keys = [roller_coaster.Country_ID = country.Country_ID]", "output": "CREATE TABLE country (Country_ID number, Name text, Population number, Area number, Languages text); CREATE TABLE roller_coaster (Roller_Coaster_ID number, Name text, Park text, Country_ID number, Length number, Height number, Speed text, Opened text, Status text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"ship_1\"\nTable Ship, columns = [*,Ship_ID,Name,Type,Built_Year,Class,Flag]\nTable captain, columns = [*,Captain_ID,Name,Ship_ID,age,Class,Rank]\nForeign_keys = [captain.Ship_ID = Ship.Ship_ID]", "output": "CREATE TABLE Ship (Ship_ID number, Name text, Type text, Built_Year number, Class text, Flag text); CREATE TABLE captain (Captain_ID number, Name text, Ship_ID number, age text, Class text, Rank text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"city_record\"\nTable city, columns = [*,City_ID,City,Hanzi,Hanyu_Pinyin,Regional_Population,GDP]\nTable hosting_city, columns = [*,Year,Match_ID,Host_City]\nTable match, columns = [*,Match_ID,Date,Venue,Score,Result,Competition]\nTable temperature, columns = [*,City_ID,Jan,Feb,Mar,Apr,Jun,Jul,Aug,Sep,Oct,Nov,Dec]\nForeign_keys = [temperature.City_ID = city.City_ID,hosting_city.Match_ID = match.Match_ID,hosting_city.Host_City = city.City_ID]", "output": "CREATE TABLE city (City_ID number, City text, Hanzi text, Hanyu_Pinyin text, Regional_Population number, GDP number); CREATE TABLE hosting_city (Year number, Match_ID number, Host_City text); CREATE TABLE match (Match_ID number, Date text, Venue text, Score text, Result text, Competition text); CREATE TABLE temperature (City_ID number, Jan number, Feb number, Mar number, Apr number, Jun number, Jul number, Aug number, Sep number, Oct number, Nov number, Dec number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"e_government\"\nTable Addresses, columns = [*,address_id,line_1_number_building,town_city,zip_postcode,state_province_county,country]\nTable Forms, columns = [*,form_id,form_type_code,service_id,form_number,form_name,form_description]\nTable Individuals, columns = [*,individual_id,individual_first_name,individual_middle_name,inidividual_phone,individual_email,individual_address,individual_last_name]\nTable Organization_Contact_Individuals, columns = [*,individual_id,organization_id,date_contact_from,date_contact_to]\nTable Organizations, columns = [*,organization_id,date_formed,organization_name,uk_vat_number]\nTable Parties, columns = [*,party_id,payment_method_code,party_phone,party_email]\nTable Party_Addresses, columns = [*,party_id,address_id,date_address_from,address_type_code,date_address_to]\nTable Party_Forms, columns = [*,party_id,form_id,date_completion_started,form_status_code,date_fully_completed]\nTable Party_Services, columns = [*,booking_id,customer_id,service_id,service_datetime,booking_made_date]\nTable Services, columns = [*,service_id,service_type_code,service_name,service_descriptio]\nForeign_keys = [Forms.service_id = Services.service_id,Organization_Contact_Individuals.individual_id = Individuals.individual_id,Organization_Contact_Individuals.organization_id = Organizations.organization_id,Party_Addresses.party_id = Parties.party_id,Party_Addresses.address_id = Addresses.address_id,Party_Forms.form_id = Forms.form_id,Party_Forms.party_id = Parties.party_id,Party_Services.customer_id = Parties.party_id,Party_Services.service_id = Services.service_id]", "output": "CREATE TABLE Addresses (address_id number, line_1_number_building text, town_city text, zip_postcode text, state_province_county text, country text); CREATE TABLE Forms (form_id number, form_type_code text, service_id number, form_number text, form_name text, form_description text); CREATE TABLE Individuals (individual_id number, individual_first_name text, individual_middle_name text, inidividual_phone text, individual_email text, individual_address text, individual_last_name text); CREATE TABLE Organization_Contact_Individuals (individual_id number, organization_id number, date_contact_from time, date_contact_to time); CREATE TABLE Organizations (organization_id number, date_formed time, organization_name text, uk_vat_number text); CREATE TABLE Parties (party_id number, payment_method_code text, party_phone text, party_email text); CREATE TABLE Party_Addresses (party_id number, address_id number, date_address_from time, address_type_code text, date_address_to time); CREATE TABLE Party_Forms (party_id number, form_id number, date_completion_started time, form_status_code text, date_fully_completed time); CREATE TABLE Party_Services (booking_id number, customer_id number, service_id number, service_datetime time, booking_made_date time); CREATE TABLE Services (service_id number, service_type_code text, service_name text, service_descriptio text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"school_bus\"\nTable driver, columns = [*,Driver_ID,Name,Party,Home_city,Age]\nTable school, columns = [*,School_ID,Grade,School,Location,Type]\nTable school_bus, columns = [*,School_ID,Driver_ID,Years_Working,If_full_time]\nForeign_keys = [school_bus.Driver_ID = driver.Driver_ID,school_bus.School_ID = school.School_ID]", "output": "CREATE TABLE driver (Driver_ID number, Name text, Party text, Home_city text, Age number); CREATE TABLE school (School_ID number, Grade text, School text, Location text, Type text); CREATE TABLE school_bus (School_ID number, Driver_ID number, Years_Working number, If_full_time others)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"flight_company\"\nTable airport, columns = [*,id,City,Country,IATA,ICAO,name]\nTable flight, columns = [*,id,Vehicle_Flight_number,Date,Pilot,Velocity,Altitude,airport_id,company_id]\nTable operate_company, columns = [*,id,name,Type,Principal_activities,Incorporated_in,Group_Equity_Shareholding]\nForeign_keys = [flight.company_id = operate_company.id,flight.airport_id = airport.id]", "output": "CREATE TABLE airport (id number, City text, Country text, IATA text, ICAO text, name text); CREATE TABLE flight (id number, Vehicle_Flight_number text, Date text, Pilot text, Velocity number, Altitude number, airport_id number, company_id number); CREATE TABLE operate_company (id number, name text, Type text, Principal_activities text, Incorporated_in text, Group_Equity_Shareholding number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"cre_Docs_and_Epenses\"\nTable Accounts, columns = [*,Account_ID,Statement_ID,Account_Details]\nTable Documents, columns = [*,Document_ID,Document_Type_Code,Project_ID,Document_Date,Document_Name,Document_Description,Other_Details]\nTable Documents_with_Expenses, columns = [*,Document_ID,Budget_Type_Code,Document_Details]\nTable Projects, columns = [*,Project_ID,Project_Details]\nTable Ref_Budget_Codes, columns = [*,Budget_Type_Code,Budget_Type_Description]\nTable Ref_Document_Types, columns = [*,Document_Type_Code,Document_Type_Name,Document_Type_Description]\nTable Statements, columns = [*,Statement_ID,Statement_Details]\nForeign_keys = [Documents.Project_ID = Projects.Project_ID,Documents.Document_Type_Code = Ref_Document_Types.Document_Type_Code,Statements.Statement_ID = Documents.Document_ID,Documents_with_Expenses.Document_ID = Documents.Document_ID,Documents_with_Expenses.Budget_Type_Code = Ref_Budget_Codes.Budget_Type_Code,Accounts.Statement_ID = Statements.Statement_ID]", "output": "CREATE TABLE Accounts (Account_ID number, Statement_ID number, Account_Details text); CREATE TABLE Documents (Document_ID number, Document_Type_Code text, Project_ID number, Document_Date time, Document_Name text, Document_Description text, Other_Details text); CREATE TABLE Documents_with_Expenses (Document_ID number, Budget_Type_Code text, Document_Details text); CREATE TABLE Projects (Project_ID number, Project_Details text); CREATE TABLE Ref_Budget_Codes (Budget_Type_Code text, Budget_Type_Description text); CREATE TABLE Ref_Document_Types (Document_Type_Code text, Document_Type_Name text, Document_Type_Description text); CREATE TABLE Statements (Statement_ID number, Statement_Details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"scientist_1\"\nTable AssignedTo, columns = [*,Scientist,Project]\nTable Projects, columns = [*,Code,Name,Hours]\nTable Scientists, columns = [*,SSN,Name]\nForeign_keys = [AssignedTo.Project = Projects.Code,AssignedTo.Scientist = Scientists.SSN]", "output": "CREATE TABLE AssignedTo (Scientist number, Project text); CREATE TABLE Projects (Code text, Name text, Hours number); CREATE TABLE Scientists (SSN number, Name text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"wine_1\"\nTable appellations, columns = [*,No,Appelation,County,State,Area,isAVA]\nTable grapes, columns = [*,ID,Grape,Color]\nTable wine, columns = [*,No,Grape,Winery,Appelation,State,Name,Year,Price,Score,Cases,Drink]\nForeign_keys = [wine.Appelation = appellations.Appelation,wine.Grape = grapes.Grape]", "output": "CREATE TABLE appellations (No number, Appelation text, County text, State text, Area text, isAVA text); CREATE TABLE grapes (ID number, Grape text, Color text); CREATE TABLE wine (No number, Grape text, Winery text, Appelation text, State text, Name text, Year number, Price number, Score number, Cases number, Drink text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"train_station\"\nTable station, columns = [*,Station_ID,Name,Annual_entry_exit,Annual_interchanges,Total_Passengers,Location,Main_Services,Number_of_Platforms]\nTable train, columns = [*,Train_ID,Name,Time,Service]\nTable train_station, columns = [*,Train_ID,Station_ID]\nForeign_keys = [train_station.Station_ID = station.Station_ID,train_station.Train_ID = train.Train_ID]", "output": "CREATE TABLE station (Station_ID number, Name text, Annual_entry_exit number, Annual_interchanges number, Total_Passengers number, Location text, Main_Services text, Number_of_Platforms number); CREATE TABLE train (Train_ID number, Name text, Time text, Service text); CREATE TABLE train_station (Train_ID number, Station_ID number)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"driving_school\"\nTable Addresses, columns = [*,address_id,line_1_number_building,city,zip_postcode,state_province_county,country]\nTable Customer_Payments, columns = [*,customer_id,datetime_payment,payment_method_code,amount_payment]\nTable Customers, columns = [*,customer_id,customer_address_id,customer_status_code,date_became_customer,date_of_birth,first_name,last_name,amount_outstanding,email_address,phone_number,cell_mobile_phone_number]\nTable Lessons, columns = [*,lesson_id,customer_id,lesson_status_code,staff_id,vehicle_id,lesson_date,lesson_time,price]\nTable Staff, columns = [*,staff_id,staff_address_id,nickname,first_name,middle_name,last_name,date_of_birth,date_joined_staff,date_left_staff]\nTable Vehicles, columns = [*,vehicle_id,vehicle_details]\nForeign_keys = [Staff.staff_address_id = Addresses.address_id,Customers.customer_address_id = Addresses.address_id,Customer_Payments.customer_id = Customers.customer_id,Lessons.customer_id = Customers.customer_id,Lessons.staff_id = Staff.staff_id,Lessons.vehicle_id = Vehicles.vehicle_id]", "output": "CREATE TABLE Addresses (address_id number, line_1_number_building text, city text, zip_postcode text, state_province_county text, country text); CREATE TABLE Customer_Payments (customer_id number, datetime_payment time, payment_method_code text, amount_payment number); CREATE TABLE Customers (customer_id number, customer_address_id number, customer_status_code text, date_became_customer time, date_of_birth time, first_name text, last_name text, amount_outstanding number, email_address text, phone_number text, cell_mobile_phone_number text); CREATE TABLE Lessons (lesson_id number, customer_id number, lesson_status_code text, staff_id number, vehicle_id number, lesson_date time, lesson_time text, price number); CREATE TABLE Staff (staff_id number, staff_address_id number, nickname text, first_name text, middle_name text, last_name text, date_of_birth time, date_joined_staff time, date_left_staff time); CREATE TABLE Vehicles (vehicle_id number, vehicle_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"activity_1\"\nTable Activity, columns = [*,actid,activity_name]\nTable Faculty, columns = [*,FacID,Lname,Fname,Rank,Sex,Phone,Room,Building]\nTable Faculty_Participates_in, columns = [*,FacID,actid]\nTable Participates_in, columns = [*,stuid,actid]\nTable Student, columns = [*,StuID,LName,Fname,Age,Sex,Major,Advisor,city_code]\nForeign_keys = [Participates_in.actid = Activity.actid,Participates_in.stuid = Student.StuID,Faculty_Participates_in.actid = Activity.actid,Faculty_Participates_in.FacID = Faculty.FacID]", "output": "CREATE TABLE Activity (actid number, activity_name text); CREATE TABLE Faculty (FacID number, Lname text, Fname text, Rank text, Sex text, Phone number, Room text, Building text); CREATE TABLE Faculty_Participates_in (FacID number, actid number); CREATE TABLE Participates_in (stuid number, actid number); CREATE TABLE Student (StuID number, LName text, Fname text, Age number, Sex text, Major number, Advisor number, city_code text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"flight_4\"\nTable airlines, columns = [*,alid,name,iata,icao,callsign,country,active]\nTable airports, columns = [*,apid,name,city,country,x,y,elevation,iata,icao]\nTable routes, columns = [*,rid,dst_apid,dst_ap,src_apid,src_ap,alid,airline,codeshare]\nForeign_keys = [routes.alid = airlines.alid,routes.src_apid = airports.apid,routes.dst_apid = airports.apid]", "output": "CREATE TABLE airlines (alid number, name text, iata text, icao text, callsign text, country text, active text); CREATE TABLE airports (apid number, name text, city text, country text, x number, y number, elevation number, iata text, icao text); CREATE TABLE routes (rid number, dst_apid number, dst_ap text, src_apid number, src_ap text, alid number, airline text, codeshare text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"tracking_orders\"\nTable Customers, columns = [*,customer_id,customer_name,customer_details]\nTable Invoices, columns = [*,invoice_number,invoice_date,invoice_details]\nTable Order_Items, columns = [*,order_item_id,product_id,order_id,order_item_status,order_item_details]\nTable Orders, columns = [*,order_id,customer_id,order_status,date_order_placed,order_details]\nTable Products, columns = [*,product_id,product_name,product_details]\nTable Shipment_Items, columns = [*,shipment_id,order_item_id]\nTable Shipments, columns = [*,shipment_id,order_id,invoice_number,shipment_tracking_number,shipment_date,other_shipment_details]\nForeign_keys = [Orders.customer_id = Customers.customer_id,Order_Items.product_id = Products.product_id,Order_Items.order_id = Orders.order_id,Shipments.invoice_number = Invoices.invoice_number,Shipments.order_id = Orders.order_id,Shipment_Items.shipment_id = Shipments.shipment_id,Shipment_Items.order_item_id = Order_Items.order_item_id]", "output": "CREATE TABLE Customers (customer_id number, customer_name text, customer_details text); CREATE TABLE Invoices (invoice_number number, invoice_date time, invoice_details text); CREATE TABLE Order_Items (order_item_id number, product_id number, order_id number, order_item_status text, order_item_details text); CREATE TABLE Orders (order_id number, customer_id number, order_status text, date_order_placed time, order_details text); CREATE TABLE Products (product_id number, product_name text, product_details text); CREATE TABLE Shipment_Items (shipment_id number, order_item_id number); CREATE TABLE Shipments (shipment_id number, order_id number, invoice_number number, shipment_tracking_number text, shipment_date time, other_shipment_details text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"architecture\"\nTable architect, columns = [*,id,name,nationality,gender]\nTable bridge, columns = [*,architect_id,id,name,location,length_meters,length_feet]\nTable mill, columns = [*,architect_id,id,location,name,type,built_year,notes]\nForeign_keys = [bridge.architect_id = architect.id,mill.architect_id = architect.id]", "output": "CREATE TABLE architect (id text, name text, nationality text, gender text); CREATE TABLE bridge (architect_id number, id number, name text, location text, length_meters number, length_feet number); CREATE TABLE mill (architect_id number, id number, location text, name text, type text, built_year number, notes text)"}, {"instruction": "Understand and remember this database.", "input": "The ID of this database is \"culture_company\"\nTable book_club, columns = [*,book_club_id,Year,Author_or_Editor,Book_Title,Publisher,Category,Result]\nTable culture_company, columns = [*,Company_name,Type,Incorporated_in,Group_Equity_Shareholding,book_club_id,movie_id]\nTable movie, columns = [*,movie_id,Title,Year,Director,Budget_million,Gross_worldwide]\nForeign_keys = [culture_company.movie_id = movie.movie_id,culture_company.book_club_id = book_club.book_club_id]", "output": "CREATE TABLE book_club (book_club_id number, Year number, Author_or_Editor text, Book_Title text, Publisher text, Category text, Result text); CREATE TABLE culture_company (Company_name text, Type text, Incorporated_in text, Group_Equity_Shareholding number, book_club_id text, movie_id text); CREATE TABLE movie (movie_id number, Title text, Year number, Director text, Budget_million number, Gross_worldwide number)"}]